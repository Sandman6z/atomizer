

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 01 15:45:17 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1578
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x320,16
    44                           	dabs	1,0x2A8,72
    45                           	dabs	1,0x2198,0,_CTA
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1578 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  030C                     	;# 
   166  030D                     	;# 
   167  030E                     	;# 
   168  038C                     	;# 
   169  038D                     	;# 
   170  038E                     	;# 
   171  0391                     	;# 
   172  0392                     	;# 
   173  0393                     	;# 
   174  0394                     	;# 
   175  0395                     	;# 
   176  0396                     	;# 
   177  0397                     	;# 
   178  0398                     	;# 
   179  0399                     	;# 
   180  0691                     	;# 
   181  0692                     	;# 
   182  0693                     	;# 
   183  0694                     	;# 
   184  0695                     	;# 
   185  0D8E                     	;# 
   186  0D8F                     	;# 
   187  0D90                     	;# 
   188  0D91                     	;# 
   189  0D91                     	;# 
   190  0D92                     	;# 
   191  0D93                     	;# 
   192  0D93                     	;# 
   193  0D94                     	;# 
   194  0D95                     	;# 
   195  0D95                     	;# 
   196  0D96                     	;# 
   197  0D97                     	;# 
   198  0D97                     	;# 
   199  0D98                     	;# 
   200  0D99                     	;# 
   201  0D99                     	;# 
   202  0D9A                     	;# 
   203  0D9B                     	;# 
   204  0D9C                     	;# 
   205  0D9C                     	;# 
   206  0D9D                     	;# 
   207  0D9D                     	;# 
   208  0D9E                     	;# 
   209  0D9F                     	;# 
   210  0DA0                     	;# 
   211  0DA1                     	;# 
   212  0DA1                     	;# 
   213  0DA2                     	;# 
   214  0DA3                     	;# 
   215  0DA3                     	;# 
   216  0DA4                     	;# 
   217  0DA5                     	;# 
   218  0DA5                     	;# 
   219  0DA6                     	;# 
   220  0DA7                     	;# 
   221  0DA7                     	;# 
   222  0DA8                     	;# 
   223  0DA9                     	;# 
   224  0DA9                     	;# 
   225  0DAA                     	;# 
   226  0DAB                     	;# 
   227  0DAC                     	;# 
   228  0DAC                     	;# 
   229  0DAD                     	;# 
   230  0DAD                     	;# 
   231  0DAE                     	;# 
   232  0DAF                     	;# 
   233  0DB0                     	;# 
   234  0DB1                     	;# 
   235  0DB1                     	;# 
   236  0DB2                     	;# 
   237  0DB3                     	;# 
   238  0DB3                     	;# 
   239  0DB4                     	;# 
   240  0DB5                     	;# 
   241  0DB5                     	;# 
   242  0DB6                     	;# 
   243  0DB7                     	;# 
   244  0DB7                     	;# 
   245  0DB8                     	;# 
   246  0DB9                     	;# 
   247  0DB9                     	;# 
   248  0DBA                     	;# 
   249  0DBB                     	;# 
   250  0DBC                     	;# 
   251  0DBC                     	;# 
   252  0DBD                     	;# 
   253  0DBD                     	;# 
   254  0DBE                     	;# 
   255  0DBF                     	;# 
   256  0DC0                     	;# 
   257  0DC1                     	;# 
   258  0DC1                     	;# 
   259  0DC2                     	;# 
   260  0DC3                     	;# 
   261  0DC3                     	;# 
   262  0DC4                     	;# 
   263  0DC5                     	;# 
   264  0DC5                     	;# 
   265  0DC6                     	;# 
   266  0DC7                     	;# 
   267  0DC7                     	;# 
   268  0DC8                     	;# 
   269  0DC9                     	;# 
   270  0DC9                     	;# 
   271  0DCA                     	;# 
   272  0DCB                     	;# 
   273  0DCC                     	;# 
   274  0DCC                     	;# 
   275  0DCD                     	;# 
   276  0DCD                     	;# 
   277  0DCE                     	;# 
   278  0DCF                     	;# 
   279  0DD0                     	;# 
   280  0E0F                     	;# 
   281  0E10                     	;# 
   282  0E11                     	;# 
   283  0E12                     	;# 
   284  0E13                     	;# 
   285  0E14                     	;# 
   286  0E15                     	;# 
   287  0E16                     	;# 
   288  0E17                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E94                     	;# 
   293  0E95                     	;# 
   294  0E9C                     	;# 
   295  0E9D                     	;# 
   296  0E9E                     	;# 
   297  0E9F                     	;# 
   298  0EA0                     	;# 
   299  0EA1                     	;# 
   300  0EA2                     	;# 
   301  0EA3                     	;# 
   302  0EA4                     	;# 
   303  0EA5                     	;# 
   304  0EA6                     	;# 
   305  0EA7                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEE                     	;# 
   319  0FEF                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  018E                     	;# 
   380  0191                     	;# 
   381  0191                     	;# 
   382  0192                     	;# 
   383  0193                     	;# 
   384  0193                     	;# 
   385  0194                     	;# 
   386  0195                     	;# 
   387  0196                     	;# 
   388  0197                     	;# 
   389  0199                     	;# 
   390  019A                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020C                     	;# 
   398  020D                     	;# 
   399  020E                     	;# 
   400  028C                     	;# 
   401  028D                     	;# 
   402  028E                     	;# 
   403  030C                     	;# 
   404  030D                     	;# 
   405  030E                     	;# 
   406  038C                     	;# 
   407  038D                     	;# 
   408  038E                     	;# 
   409  0391                     	;# 
   410  0392                     	;# 
   411  0393                     	;# 
   412  0394                     	;# 
   413  0395                     	;# 
   414  0396                     	;# 
   415  0397                     	;# 
   416  0398                     	;# 
   417  0399                     	;# 
   418  0691                     	;# 
   419  0692                     	;# 
   420  0693                     	;# 
   421  0694                     	;# 
   422  0695                     	;# 
   423  0D8E                     	;# 
   424  0D8F                     	;# 
   425  0D90                     	;# 
   426  0D91                     	;# 
   427  0D91                     	;# 
   428  0D92                     	;# 
   429  0D93                     	;# 
   430  0D93                     	;# 
   431  0D94                     	;# 
   432  0D95                     	;# 
   433  0D95                     	;# 
   434  0D96                     	;# 
   435  0D97                     	;# 
   436  0D97                     	;# 
   437  0D98                     	;# 
   438  0D99                     	;# 
   439  0D99                     	;# 
   440  0D9A                     	;# 
   441  0D9B                     	;# 
   442  0D9C                     	;# 
   443  0D9C                     	;# 
   444  0D9D                     	;# 
   445  0D9D                     	;# 
   446  0D9E                     	;# 
   447  0D9F                     	;# 
   448  0DA0                     	;# 
   449  0DA1                     	;# 
   450  0DA1                     	;# 
   451  0DA2                     	;# 
   452  0DA3                     	;# 
   453  0DA3                     	;# 
   454  0DA4                     	;# 
   455  0DA5                     	;# 
   456  0DA5                     	;# 
   457  0DA6                     	;# 
   458  0DA7                     	;# 
   459  0DA7                     	;# 
   460  0DA8                     	;# 
   461  0DA9                     	;# 
   462  0DA9                     	;# 
   463  0DAA                     	;# 
   464  0DAB                     	;# 
   465  0DAC                     	;# 
   466  0DAC                     	;# 
   467  0DAD                     	;# 
   468  0DAD                     	;# 
   469  0DAE                     	;# 
   470  0DAF                     	;# 
   471  0DB0                     	;# 
   472  0DB1                     	;# 
   473  0DB1                     	;# 
   474  0DB2                     	;# 
   475  0DB3                     	;# 
   476  0DB3                     	;# 
   477  0DB4                     	;# 
   478  0DB5                     	;# 
   479  0DB5                     	;# 
   480  0DB6                     	;# 
   481  0DB7                     	;# 
   482  0DB7                     	;# 
   483  0DB8                     	;# 
   484  0DB9                     	;# 
   485  0DB9                     	;# 
   486  0DBA                     	;# 
   487  0DBB                     	;# 
   488  0DBC                     	;# 
   489  0DBC                     	;# 
   490  0DBD                     	;# 
   491  0DBD                     	;# 
   492  0DBE                     	;# 
   493  0DBF                     	;# 
   494  0DC0                     	;# 
   495  0DC1                     	;# 
   496  0DC1                     	;# 
   497  0DC2                     	;# 
   498  0DC3                     	;# 
   499  0DC3                     	;# 
   500  0DC4                     	;# 
   501  0DC5                     	;# 
   502  0DC5                     	;# 
   503  0DC6                     	;# 
   504  0DC7                     	;# 
   505  0DC7                     	;# 
   506  0DC8                     	;# 
   507  0DC9                     	;# 
   508  0DC9                     	;# 
   509  0DCA                     	;# 
   510  0DCB                     	;# 
   511  0DCC                     	;# 
   512  0DCC                     	;# 
   513  0DCD                     	;# 
   514  0DCD                     	;# 
   515  0DCE                     	;# 
   516  0DCF                     	;# 
   517  0DD0                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E17                     	;# 
   527  0E90                     	;# 
   528  0E91                     	;# 
   529  0E92                     	;# 
   530  0E94                     	;# 
   531  0E95                     	;# 
   532  0E9C                     	;# 
   533  0E9D                     	;# 
   534  0E9E                     	;# 
   535  0E9F                     	;# 
   536  0EA0                     	;# 
   537  0EA1                     	;# 
   538  0EA2                     	;# 
   539  0EA3                     	;# 
   540  0EA4                     	;# 
   541  0EA5                     	;# 
   542  0EA6                     	;# 
   543  0EA7                     	;# 
   544  0FE4                     	;# 
   545  0FE5                     	;# 
   546  0FE6                     	;# 
   547  0FE7                     	;# 
   548  0FE8                     	;# 
   549  0FE8                     	;# 
   550  0FE9                     	;# 
   551  0FEA                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEE                     	;# 
   557  0FEF                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0113                     	;# 
   609  0114                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  018E                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0197                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  020E                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  030C                     	;# 
   642  030D                     	;# 
   643  030E                     	;# 
   644  038C                     	;# 
   645  038D                     	;# 
   646  038E                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0D8E                     	;# 
   662  0D8F                     	;# 
   663  0D90                     	;# 
   664  0D91                     	;# 
   665  0D91                     	;# 
   666  0D92                     	;# 
   667  0D93                     	;# 
   668  0D93                     	;# 
   669  0D94                     	;# 
   670  0D95                     	;# 
   671  0D95                     	;# 
   672  0D96                     	;# 
   673  0D97                     	;# 
   674  0D97                     	;# 
   675  0D98                     	;# 
   676  0D99                     	;# 
   677  0D99                     	;# 
   678  0D9A                     	;# 
   679  0D9B                     	;# 
   680  0D9C                     	;# 
   681  0D9C                     	;# 
   682  0D9D                     	;# 
   683  0D9D                     	;# 
   684  0D9E                     	;# 
   685  0D9F                     	;# 
   686  0DA0                     	;# 
   687  0DA1                     	;# 
   688  0DA1                     	;# 
   689  0DA2                     	;# 
   690  0DA3                     	;# 
   691  0DA3                     	;# 
   692  0DA4                     	;# 
   693  0DA5                     	;# 
   694  0DA5                     	;# 
   695  0DA6                     	;# 
   696  0DA7                     	;# 
   697  0DA7                     	;# 
   698  0DA8                     	;# 
   699  0DA9                     	;# 
   700  0DA9                     	;# 
   701  0DAA                     	;# 
   702  0DAB                     	;# 
   703  0DAC                     	;# 
   704  0DAC                     	;# 
   705  0DAD                     	;# 
   706  0DAD                     	;# 
   707  0DAE                     	;# 
   708  0DAF                     	;# 
   709  0DB0                     	;# 
   710  0DB1                     	;# 
   711  0DB1                     	;# 
   712  0DB2                     	;# 
   713  0DB3                     	;# 
   714  0DB3                     	;# 
   715  0DB4                     	;# 
   716  0DB5                     	;# 
   717  0DB5                     	;# 
   718  0DB6                     	;# 
   719  0DB7                     	;# 
   720  0DB7                     	;# 
   721  0DB8                     	;# 
   722  0DB9                     	;# 
   723  0DB9                     	;# 
   724  0DBA                     	;# 
   725  0DBB                     	;# 
   726  0DBC                     	;# 
   727  0DBC                     	;# 
   728  0DBD                     	;# 
   729  0DBD                     	;# 
   730  0DBE                     	;# 
   731  0DBF                     	;# 
   732  0DC0                     	;# 
   733  0DC1                     	;# 
   734  0DC1                     	;# 
   735  0DC2                     	;# 
   736  0DC3                     	;# 
   737  0DC3                     	;# 
   738  0DC4                     	;# 
   739  0DC5                     	;# 
   740  0DC5                     	;# 
   741  0DC6                     	;# 
   742  0DC7                     	;# 
   743  0DC7                     	;# 
   744  0DC8                     	;# 
   745  0DC9                     	;# 
   746  0DC9                     	;# 
   747  0DCA                     	;# 
   748  0DCB                     	;# 
   749  0DCC                     	;# 
   750  0DCC                     	;# 
   751  0DCD                     	;# 
   752  0DCD                     	;# 
   753  0DCE                     	;# 
   754  0DCF                     	;# 
   755  0DD0                     	;# 
   756  0E0F                     	;# 
   757  0E10                     	;# 
   758  0E11                     	;# 
   759  0E12                     	;# 
   760  0E13                     	;# 
   761  0E14                     	;# 
   762  0E15                     	;# 
   763  0E16                     	;# 
   764  0E17                     	;# 
   765  0E90                     	;# 
   766  0E91                     	;# 
   767  0E92                     	;# 
   768  0E94                     	;# 
   769  0E95                     	;# 
   770  0E9C                     	;# 
   771  0E9D                     	;# 
   772  0E9E                     	;# 
   773  0E9F                     	;# 
   774  0EA0                     	;# 
   775  0EA1                     	;# 
   776  0EA2                     	;# 
   777  0EA3                     	;# 
   778  0EA4                     	;# 
   779  0EA5                     	;# 
   780  0EA6                     	;# 
   781  0EA7                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  008C                     	;# 
   824  008D                     	;# 
   825  008E                     	;# 
   826  0091                     	;# 
   827  0092                     	;# 
   828  0093                     	;# 
   829  0095                     	;# 
   830  0096                     	;# 
   831  0097                     	;# 
   832  0098                     	;# 
   833  0099                     	;# 
   834  009A                     	;# 
   835  009B                     	;# 
   836  009B                     	;# 
   837  009C                     	;# 
   838  009D                     	;# 
   839  009E                     	;# 
   840  009F                     	;# 
   841  010C                     	;# 
   842  010D                     	;# 
   843  010E                     	;# 
   844  0111                     	;# 
   845  0112                     	;# 
   846  0113                     	;# 
   847  0114                     	;# 
   848  0115                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  0118                     	;# 
   852  0119                     	;# 
   853  018C                     	;# 
   854  018D                     	;# 
   855  018E                     	;# 
   856  0191                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0193                     	;# 
   860  0193                     	;# 
   861  0194                     	;# 
   862  0195                     	;# 
   863  0196                     	;# 
   864  0197                     	;# 
   865  0199                     	;# 
   866  019A                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  020E                     	;# 
   876  028C                     	;# 
   877  028D                     	;# 
   878  028E                     	;# 
   879  030C                     	;# 
   880  030D                     	;# 
   881  030E                     	;# 
   882  038C                     	;# 
   883  038D                     	;# 
   884  038E                     	;# 
   885  0391                     	;# 
   886  0392                     	;# 
   887  0393                     	;# 
   888  0394                     	;# 
   889  0395                     	;# 
   890  0396                     	;# 
   891  0397                     	;# 
   892  0398                     	;# 
   893  0399                     	;# 
   894  0691                     	;# 
   895  0692                     	;# 
   896  0693                     	;# 
   897  0694                     	;# 
   898  0695                     	;# 
   899  0D8E                     	;# 
   900  0D8F                     	;# 
   901  0D90                     	;# 
   902  0D91                     	;# 
   903  0D91                     	;# 
   904  0D92                     	;# 
   905  0D93                     	;# 
   906  0D93                     	;# 
   907  0D94                     	;# 
   908  0D95                     	;# 
   909  0D95                     	;# 
   910  0D96                     	;# 
   911  0D97                     	;# 
   912  0D97                     	;# 
   913  0D98                     	;# 
   914  0D99                     	;# 
   915  0D99                     	;# 
   916  0D9A                     	;# 
   917  0D9B                     	;# 
   918  0D9C                     	;# 
   919  0D9C                     	;# 
   920  0D9D                     	;# 
   921  0D9D                     	;# 
   922  0D9E                     	;# 
   923  0D9F                     	;# 
   924  0DA0                     	;# 
   925  0DA1                     	;# 
   926  0DA1                     	;# 
   927  0DA2                     	;# 
   928  0DA3                     	;# 
   929  0DA3                     	;# 
   930  0DA4                     	;# 
   931  0DA5                     	;# 
   932  0DA5                     	;# 
   933  0DA6                     	;# 
   934  0DA7                     	;# 
   935  0DA7                     	;# 
   936  0DA8                     	;# 
   937  0DA9                     	;# 
   938  0DA9                     	;# 
   939  0DAA                     	;# 
   940  0DAB                     	;# 
   941  0DAC                     	;# 
   942  0DAC                     	;# 
   943  0DAD                     	;# 
   944  0DAD                     	;# 
   945  0DAE                     	;# 
   946  0DAF                     	;# 
   947  0DB0                     	;# 
   948  0DB1                     	;# 
   949  0DB1                     	;# 
   950  0DB2                     	;# 
   951  0DB3                     	;# 
   952  0DB3                     	;# 
   953  0DB4                     	;# 
   954  0DB5                     	;# 
   955  0DB5                     	;# 
   956  0DB6                     	;# 
   957  0DB7                     	;# 
   958  0DB7                     	;# 
   959  0DB8                     	;# 
   960  0DB9                     	;# 
   961  0DB9                     	;# 
   962  0DBA                     	;# 
   963  0DBB                     	;# 
   964  0DBC                     	;# 
   965  0DBC                     	;# 
   966  0DBD                     	;# 
   967  0DBD                     	;# 
   968  0DBE                     	;# 
   969  0DBF                     	;# 
   970  0DC0                     	;# 
   971  0DC1                     	;# 
   972  0DC1                     	;# 
   973  0DC2                     	;# 
   974  0DC3                     	;# 
   975  0DC3                     	;# 
   976  0DC4                     	;# 
   977  0DC5                     	;# 
   978  0DC5                     	;# 
   979  0DC6                     	;# 
   980  0DC7                     	;# 
   981  0DC7                     	;# 
   982  0DC8                     	;# 
   983  0DC9                     	;# 
   984  0DC9                     	;# 
   985  0DCA                     	;# 
   986  0DCB                     	;# 
   987  0DCC                     	;# 
   988  0DCC                     	;# 
   989  0DCD                     	;# 
   990  0DCD                     	;# 
   991  0DCE                     	;# 
   992  0DCF                     	;# 
   993  0DD0                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E90                     	;# 
  1004  0E91                     	;# 
  1005  0E92                     	;# 
  1006  0E94                     	;# 
  1007  0E95                     	;# 
  1008  0E9C                     	;# 
  1009  0E9D                     	;# 
  1010  0E9E                     	;# 
  1011  0E9F                     	;# 
  1012  0EA0                     	;# 
  1013  0EA1                     	;# 
  1014  0EA2                     	;# 
  1015  0EA3                     	;# 
  1016  0EA4                     	;# 
  1017  0EA5                     	;# 
  1018  0EA6                     	;# 
  1019  0EA7                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE8                     	;# 
  1026  0FE9                     	;# 
  1027  0FEA                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEE                     	;# 
  1033  0FEF                     	;_CTA
  1034                           
  1035                           	psect	idataBANK1
  1036  0A39                     __pidataBANK1:
  1037                           
  1038                           ;initializer for _ADMax
  1039  0A39  34FF               	retlw	255
  1040  0A3A  34FF               	retlw	255
  1041                           
  1042                           ;initializer for _ADMax2
  1043  0A3B  34FF               	retlw	255
  1044  0A3C  34FF               	retlw	255
  1045                           
  1046                           ;initializer for _PWMTime_Val
  1047  0A3D  3402               	retlw	2
  1048                           
  1049                           	psect	stringtext1
  1050  0800                     __pstringtext1:
  1051  0800                     _PWMT:
  1052  0800  3422               	retlw	34
  1053  0801  3401               	retlw	1
  1054  0802  3421               	retlw	33
  1055  0803  3401               	retlw	1
  1056  0804  3420               	retlw	32
  1057  0805  3401               	retlw	1
  1058  0806  341F               	retlw	31
  1059  0807  3401               	retlw	1
  1060  0808  341E               	retlw	30
  1061  0809  3401               	retlw	1
  1062  080A  341D               	retlw	29
  1063  080B  3401               	retlw	1
  1064  080C  341C               	retlw	28
  1065  080D  3401               	retlw	1
  1066  080E  341B               	retlw	27
  1067  080F  3401               	retlw	1
  1068  0810  341A               	retlw	26
  1069  0811  3401               	retlw	1
  1070  0812  3419               	retlw	25
  1071  0813  3401               	retlw	1
  1072  0814  3418               	retlw	24
  1073  0815  3401               	retlw	1
  1074  0816  3417               	retlw	23
  1075  0817  3401               	retlw	1
  1076  0818  3416               	retlw	22
  1077  0819  3401               	retlw	1
  1078  081A  3415               	retlw	21
  1079  081B  3401               	retlw	1
  1080  081C  3414               	retlw	20
  1081  081D  3401               	retlw	1
  1082  081E  3413               	retlw	19
  1083  081F  3401               	retlw	1
  1084  0820  3412               	retlw	18
  1085  0821  3401               	retlw	1
  1086  0822  3411               	retlw	17
  1087  0823  3401               	retlw	1
  1088  0824  3410               	retlw	16
  1089  0825  3401               	retlw	1
  1090  0826  340F               	retlw	15
  1091  0827  3401               	retlw	1
  1092  0828  340E               	retlw	14
  1093  0829  3401               	retlw	1
  1094  082A  340D               	retlw	13
  1095  082B  3401               	retlw	1
  1096  082C  340C               	retlw	12
  1097  082D  3401               	retlw	1
  1098  082E  340B               	retlw	11
  1099  082F  3401               	retlw	1
  1100  0830  340A               	retlw	10
  1101  0831  3401               	retlw	1
  1102  0832  3409               	retlw	9
  1103  0833  3401               	retlw	1
  1104  0834  3408               	retlw	8
  1105  0835  3401               	retlw	1
  1106  0836  3407               	retlw	7
  1107  0837  3401               	retlw	1
  1108  0838  3406               	retlw	6
  1109  0839  3401               	retlw	1
  1110  083A  3405               	retlw	5
  1111  083B  3401               	retlw	1
  1112  083C  3404               	retlw	4
  1113  083D  3401               	retlw	1
  1114  083E  3403               	retlw	3
  1115  083F  3401               	retlw	1
  1116  0840  3402               	retlw	2
  1117  0841  3401               	retlw	1
  1118  0842  3401               	retlw	1
  1119  0843  3401               	retlw	1
  1120  0844  3400               	retlw	0
  1121  0845  3401               	retlw	1
  1122  0846  34FE               	retlw	254
  1123  0847  3400               	retlw	0
  1124  0848  34FD               	retlw	253
  1125  0849  3400               	retlw	0
  1126  084A  34FC               	retlw	252
  1127  084B  3400               	retlw	0
  1128  084C  34FB               	retlw	251
  1129  084D  3400               	retlw	0
  1130  084E  34FA               	retlw	250
  1131  084F  3400               	retlw	0
  1132  0850  34F9               	retlw	249
  1133  0851  3400               	retlw	0
  1134  0852  34F8               	retlw	248
  1135  0853  3400               	retlw	0
  1136  0854  34F7               	retlw	247
  1137  0855  3400               	retlw	0
  1138  0856  3400               	retlw	0
  1139  0857  3400               	retlw	0
  1140  0858                     __end_of_PWMT:
  1141                           
  1142                           	psect	stringtext2
  1143  0858                     __pstringtext2:
  1144  0858                     _time_it:
  1145  0858  34FA               	retlw	250
  1146  0859  347D               	retlw	125
  1147  085A  343E               	retlw	62
  1148  085B  341F               	retlw	31
  1149  085C  3410               	retlw	16
  1150  085D  3408               	retlw	8
  1151  085E  3404               	retlw	4
  1152  085F                     __end_of_time_it:
  1153  000D                     _PORTBbits	set	13
  1154  000C                     _PORTAbits	set	12
  1155  0013                     _PIR3bits	set	19
  1156  0011                     _PIR1bits	set	17
  1157  0016                     _TMR1L	set	22
  1158  0017                     _TMR1H	set	23
  1159  0018                     _T1CON	set	24
  1160  0015                     _TMR0	set	21
  1161  000B                     _INTCONbits	set	11
  1162  000B                     _INTCON	set	11
  1163  000E                     _PORTC	set	14
  1164  000D                     _PORTB	set	13
  1165  000C                     _PORTA	set	12
  1166  005A                     _T0IF	set	90
  1167  00C0                     _TMR1ON	set	192
  1168  009B                     _ADRESL	set	155
  1169  009C                     _ADRESH	set	156
  1170  009E                     _ADCON1bits	set	158
  1171  009D                     _ADCON0bits	set	157
  1172  0091                     _PIE1bits	set	145
  1173  0095                     _OPTION_REGbits	set	149
  1174  0095                     _OPTION_REG	set	149
  1175  008E                     _TRISC	set	142
  1176  008D                     _TRISB	set	141
  1177  008C                     _TRISA	set	140
  1178  009A                     _OSCSTAT	set	154
  1179  0099                     _OSCCONbits	set	153
  1180  0098                     _OSCTUNE	set	152
  1181  010C                     _LATAbits	set	268
  1182  010D                     _LATBbits	set	269
  1183  010E                     _LATC	set	270
  1184  010D                     _LATB	set	269
  1185  010C                     _LATA	set	268
  1186  010E                     _LATCbits	set	270
  1187  018E                     _ANSELC	set	398
  1188  018D                     _ANSELB	set	397
  1189  018C                     _ANSELA	set	396
  1190  020E                     _WPUC	set	526
  1191  020D                     _WPUB	set	525
  1192  020C                     _WPUA	set	524
  1193  0DBD                     _PWM3INTFbits	set	3517
  1194  0DBC                     _PWM3INTEbits	set	3516
  1195  0DB1                     _PWM3PHL	set	3505
  1196  0DB2                     _PWM3PHH	set	3506
  1197  0DC0                     _PWM3OFCONbits	set	3520
  1198  0DBF                     _PWM3LDCONbits	set	3519
  1199  0DBE                     _PWM3CLKCONbits	set	3518
  1200  0DBB                     _PWM3CONbits	set	3515
  1201  0DB3                     _PWM3DCL	set	3507
  1202  0DB4                     _PWM3DCH	set	3508
  1203  0DB5                     _PWM3PRL	set	3509
  1204  0DB6                     _PWM3PRH	set	3510
  1205  0EA3                     _RC3PPS	set	3747
  1206                           
  1207                           	psect	cinit
  1208  07CE                     start_initialization:	
  1209                           ; #config settings
  1210                           
  1211  07CE                     __initialization:	;BIGRAM
  1212                           
  1213                           ; Initialize objects allocated to BANK1
  1214  07CE  3039               	movlw	low __pidataBANK1
  1215  07CF  0084               	movwf	4
  1216  07D0  308A               	movlw	(high __pidataBANK1)| (0+128)
  1217  07D1  0085               	movwf	5
  1218  07D2  0021               	movlb	1	; select bank1
  1219  07D3  0012               	moviw fsr0++
  1220  07D4  00E6               	movwf	__pdataBANK1& (0+127)
  1221  07D5  0012               	moviw fsr0++
  1222  07D6  00E7               	movwf	(__pdataBANK1+1)& (0+127)
  1223  07D7  0012               	moviw fsr0++
  1224  07D8  00E8               	movwf	(__pdataBANK1+2)& (0+127)
  1225  07D9  0012               	moviw fsr0++
  1226  07DA  00E9               	movwf	(__pdataBANK1+3)& (0+127)
  1227  07DB  0012               	moviw fsr0++
  1228  07DC  00EA               	movwf	(__pdataBANK1+4)& (0+127)
  1229                           
  1230                           ; Clear objects allocated to BIGRAM
  1231  07DD  3098               	movlw	low (0+8600)
  1232  07DE  0084               	movwf	4
  1233  07DF  3021               	movlw	high (0+8600)
  1234  07E0  0085               	movwf	5
  1235  07E1  3058               	movlw	88
  1236  07E2  00FE               	movwf	btemp
  1237  07E3  3000               	movlw	0
  1238  07E4  00FF               	movwf	btemp+1
  1239  07E5  318A  2252  3187   	fcall	clear_ram0
  1240                           
  1241                           ; Clear objects allocated to BANK0
  1242  07E8  3066               	movlw	low __pbssBANK0
  1243  07E9  0084               	movwf	4
  1244  07EA  3000               	movlw	high __pbssBANK0
  1245  07EB  0085               	movwf	5
  1246  07EC  300A               	movlw	10
  1247  07ED  00FE               	movwf	btemp
  1248  07EE  3000               	movlw	0
  1249  07EF  00FF               	movwf	btemp+1
  1250  07F0  318A  2252  3187   	fcall	clear_ram0
  1251                           
  1252                           ; Clear objects allocated to BANK1
  1253  07F3  30A0               	movlw	low __pbssBANK1
  1254  07F4  0084               	movwf	4
  1255  07F5  3000               	movlw	high __pbssBANK1
  1256  07F6  0085               	movwf	5
  1257  07F7  3046               	movlw	70
  1258  07F8  00FE               	movwf	btemp
  1259  07F9  3000               	movlw	0
  1260  07FA  00FF               	movwf	btemp+1
  1261  07FB  318A  2252         	fcall	clear_ram0
  1262  07FD                     end_of_initialization:	
  1263                           ;End of C runtime variable initialization code
  1264                           
  1265  07FD                     __end_of__initialization:
  1266  07FD  0020               	movlb	0
  1267  07FE  318B  2BFA         	ljmp	_main	;jump to C main() function
  1268                           
  1269                           	psect	bssBANK0
  1270  0066                     __pbssBANK0:
  1271  0066                     _adkey:
  1272  0066                     	ds	2
  1273  0068                     _stakeytime:
  1274  0068                     	ds	1
  1275  0069                     _timecnt:
  1276  0069                     	ds	1
  1277  006A                     _TouchTime:
  1278  006A                     	ds	1
  1279  006B                     _Key:
  1280  006B                     	ds	1
  1281  006C                     _frq:
  1282  006C                     	ds	1
  1283  006D                     _NoWater:
  1284  006D                     	ds	1
  1285  006E                     _Flg2:
  1286  006E                     	ds	1
  1287  006F                     _Flg:
  1288  006F                     	ds	1
  1289                           
  1290                           	psect	bssBANK1
  1291  00A0                     __pbssBANK1:
  1292  00A0                     _AD_Cur:
  1293  00A0                     	ds	32
  1294  00C0                     _CTA1:
  1295  00C0                     	ds	8
  1296  00C8                     _KeyADC:
  1297  00C8                     	ds	2
  1298  00CA                     _AD_Tal:
  1299  00CA                     	ds	2
  1300  00CC                     _ADMin:
  1301  00CC                     	ds	2
  1302  00CE                     _hz_cn:
  1303  00CE                     	ds	2
  1304  00D0                     _CurMax2:
  1305  00D0                     	ds	2
  1306  00D2                     _CurMax:
  1307  00D2                     	ds	2
  1308  00D4                     _ADMin2:
  1309  00D4                     	ds	2
  1310  00D6                     _nt:
  1311  00D6                     	ds	1
  1312  00D7                     _Failcnt:
  1313  00D7                     	ds	1
  1314  00D8                     _ERRcnt:
  1315  00D8                     	ds	1
  1316  00D9                     _MinS_Cnt:
  1317  00D9                     	ds	1
  1318  00DA                     _KeyData:
  1319  00DA                     	ds	1
  1320  00DB                     _T30s_cnt:
  1321  00DB                     	ds	1
  1322  00DC                     _readkeytime:
  1323  00DC                     	ds	1
  1324  00DD                     _KeyTime:
  1325  00DD                     	ds	1
  1326  00DE                     _adc_false_cnt:
  1327  00DE                     	ds	1
  1328  00DF                     _adc_true_cnt:
  1329  00DF                     	ds	1
  1330  00E0                     _ScanWait:
  1331  00E0                     	ds	1
  1332  00E1                     _bFors_High:
  1333  00E1                     	ds	1
  1334  00E2                     _getcnt:
  1335  00E2                     	ds	1
  1336  00E3                     _Get3A:
  1337  00E3                     	ds	1
  1338  00E4                     _PWMTime:
  1339  00E4                     	ds	1
  1340  00E5                     _hze:
  1341  00E5                     	ds	1
  1342                           
  1343                           	psect	dataBANK1
  1344  00E6                     __pdataBANK1:
  1345  00E6                     _ADMax:
  1346  00E6                     	ds	2
  1347  00E8                     _ADMax2:
  1348  00E8                     	ds	2
  1349  00EA                     _PWMTime_Val:
  1350  00EA                     	ds	1
  1351                           
  1352                           	psect	clrtext
  1353  0A52                     clear_ram0:	
  1354                           ;	Called with FSR0 containing the base address, and
  1355                           ;	btemp/btemp+1 has the size to clear
  1356                           
  1357  0A52  0064               	clrwdt	;clear the watchdog before getting into this loop
  1358  0A53                     clrloop0:
  1359  0A53  0180               	clrf	0	;clear RAM location pointed to by FSR
  1360  0A54  3101               	addfsr 0,1
  1361  0A55  3001               	movlw	1
  1362  0A56  02FE               	subwf	126,f
  1363  0A57  3000               	movlw	0
  1364  0A58  3BFF               	subwfb	127,f
  1365  0A59  087F               	movf	127,w
  1366  0A5A  047E               	iorwf	126,w
  1367  0A5B  1903               	btfsc	3,2
  1368  0A5C  3400               	retlw	0	;all done for this memory range, return
  1369  0A5D  2A53               	goto	clrloop0	;have we reached the end yet?
  1370                           
  1371                           	psect	cstackCOMMON
  1372  0070                     __pcstackCOMMON:
  1373  0070                     ?_PWMON:
  1374  0070                     ??_PWMON:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0070                     ?_PWMOFF:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0070                     ??_PWMOFF:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_ErrInf:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_Time0_init:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ??_Time0_init:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_Time1_init:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ??_Time1_init:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_AD_init:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     ??_AD_init:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  0070                     ?_PWM_init:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ??_PWM_init:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_T100ms_Event:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ??_T100ms_Event:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_T500ms_Event:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_T1s_Event:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ??_T1s_Event:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     ?_GetKey:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  0070                     ?_KeyPro:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  0070                     ?_LED_OFF:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  0070                     ?_LED_Show:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  0070                     ??_LED_Show:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0070                     ?_DelayC:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443  0070                     ??_DelayC:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446  0070                     ?_ScanF:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449  0070                     ?_GetWater:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0070                     ?_TwoData_COM:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455  0070                     ?_init:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458  0070                     ??_init:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461  0070                     ?_main:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464  0070                     ?_ReadCurrent:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467  0070                     ?__Umul8_16:	
  1468                           ; 2 bytes @ 0x0
  1469                           
  1470  0070                     ?___xxtofl:	
  1471                           ; 2 bytes @ 0x0
  1472                           
  1473  0070                     __Umul8_16@multiplicand:	
  1474                           ; 4 bytes @ 0x0
  1475                           
  1476  0070                     ___xxtofl@val:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479                           
  1480                           ; 4 bytes @ 0x0
  1481  0070                     	ds	1
  1482  0071                     ??_LED_OFF:
  1483                           
  1484                           ; 1 bytes @ 0x1
  1485  0071                     	ds	1
  1486  0072                     ??_ErrInf:
  1487  0072                     ??_KeyPro:	
  1488                           ; 1 bytes @ 0x2
  1489                           
  1490  0072                     ??__Umul8_16:	
  1491                           ; 1 bytes @ 0x2
  1492                           
  1493  0072                     DelayC@i:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496                           
  1497                           ; 2 bytes @ 0x2
  1498  0072                     	ds	2
  1499  0074                     ??___xxtofl:
  1500  0074                     DelayC@ct:	
  1501                           ; 1 bytes @ 0x4
  1502                           
  1503  0074                     __Umul8_16@product:	
  1504                           ; 1 bytes @ 0x4
  1505                           
  1506                           
  1507                           ; 2 bytes @ 0x4
  1508  0074                     	ds	1
  1509  0075                     ?_GetADC:
  1510                           
  1511                           ; 2 bytes @ 0x5
  1512  0075                     	ds	1
  1513  0076                     __Umul8_16@word_mpld:
  1514                           
  1515                           ; 2 bytes @ 0x6
  1516  0076                     	ds	1
  1517  0077                     ??_GetADC:
  1518                           
  1519                           ; 1 bytes @ 0x7
  1520  0077                     	ds	1
  1521  0078                     __Umul8_16@multiplier:
  1522  0078                     ___xxtofl@sign:	
  1523                           ; 1 bytes @ 0x8
  1524                           
  1525                           
  1526                           ; 1 bytes @ 0x8
  1527  0078                     	ds	1
  1528  0079                     ??_ReadCurrent:
  1529  0079                     ??_GetKey:	
  1530                           ; 1 bytes @ 0x9
  1531                           
  1532  0079                     ??_TwoData_COM:	
  1533                           ; 1 bytes @ 0x9
  1534                           
  1535  0079                     ScanF@j1:	
  1536                           ; 1 bytes @ 0x9
  1537                           
  1538  0079                     ___xxtofl@exp:	
  1539                           ; 1 bytes @ 0x9
  1540                           
  1541                           
  1542                           ; 1 bytes @ 0x9
  1543  0079                     	ds	1
  1544  007A                     ___xxtofl@arg:
  1545                           
  1546                           ; 4 bytes @ 0xA
  1547  007A                     	ds	1
  1548  007B                     ReadCurrent@i:
  1549  007B                     GetKey@i:	
  1550                           ; 1 bytes @ 0xB
  1551                           
  1552                           
  1553                           ; 1 bytes @ 0xB
  1554  007B                     	ds	1
  1555  007C                     ??_GetWater:
  1556                           
  1557                           ; 1 bytes @ 0xC
  1558  007C                     	ds	2
  1559  007E                     ??___flsub:
  1560                           
  1561                           	psect	cstackBANK0
  1562  0020                     __pcstackBANK0:	
  1563                           ; 1 bytes @ 0xE
  1564                           
  1565  0020                     ?___flmul:
  1566  0020                     GetADC@ch:	
  1567                           ; 4 bytes @ 0x0
  1568                           
  1569  0020                     ___flmul@b:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572                           
  1573                           ; 4 bytes @ 0x0
  1574  0020                     	ds	1
  1575  0021                     GetADC@total_ad:
  1576                           
  1577                           ; 2 bytes @ 0x1
  1578  0021                     	ds	2
  1579  0023                     GetADC@i:
  1580                           
  1581                           ; 1 bytes @ 0x3
  1582  0023                     	ds	1
  1583  0024                     GetADC@adbuf:
  1584  0024                     ___flmul@a:	
  1585                           ; 2 bytes @ 0x4
  1586                           
  1587                           
  1588                           ; 4 bytes @ 0x4
  1589  0024                     	ds	2
  1590  0026                     ??_ScanF:
  1591  0026                     GetWater@i:	
  1592                           ; 1 bytes @ 0x6
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0x6
  1596  0026                     	ds	1
  1597  0027                     GetWater@j:
  1598                           
  1599                           ; 1 bytes @ 0x7
  1600  0027                     	ds	1
  1601  0028                     ??___flmul:
  1602                           
  1603                           ; 1 bytes @ 0x8
  1604  0028                     	ds	5
  1605  002D                     ___flmul@sign:
  1606                           
  1607                           ; 1 bytes @ 0xD
  1608  002D                     	ds	1
  1609  002E                     ___flmul@grs:
  1610                           
  1611                           ; 4 bytes @ 0xE
  1612  002E                     	ds	4
  1613  0032                     ___flmul@aexp:
  1614                           
  1615                           ; 1 bytes @ 0x12
  1616  0032                     	ds	1
  1617  0033                     ___flmul@bexp:
  1618                           
  1619                           ; 1 bytes @ 0x13
  1620  0033                     	ds	1
  1621  0034                     ___flmul@prod:
  1622                           
  1623                           ; 4 bytes @ 0x14
  1624  0034                     	ds	4
  1625  0038                     ___flmul@temp:
  1626                           
  1627                           ; 2 bytes @ 0x18
  1628  0038                     	ds	2
  1629  003A                     ?___fladd:
  1630  003A                     ___fladd@b:	
  1631                           ; 4 bytes @ 0x1A
  1632                           
  1633                           
  1634                           ; 4 bytes @ 0x1A
  1635  003A                     	ds	4
  1636  003E                     ___fladd@a:
  1637                           
  1638                           ; 4 bytes @ 0x1E
  1639  003E                     	ds	4
  1640  0042                     ??___fladd:
  1641                           
  1642                           ; 1 bytes @ 0x22
  1643  0042                     	ds	8
  1644  004A                     ___fladd@signs:
  1645                           
  1646                           ; 1 bytes @ 0x2A
  1647  004A                     	ds	1
  1648  004B                     ___fladd@aexp:
  1649                           
  1650                           ; 1 bytes @ 0x2B
  1651  004B                     	ds	1
  1652  004C                     ___fladd@bexp:
  1653                           
  1654                           ; 1 bytes @ 0x2C
  1655  004C                     	ds	1
  1656  004D                     ___fladd@grs:
  1657                           
  1658                           ; 1 bytes @ 0x2D
  1659  004D                     	ds	1
  1660  004E                     ?___flsub:
  1661  004E                     ___flsub@a:	
  1662                           ; 4 bytes @ 0x2E
  1663                           
  1664                           
  1665                           ; 4 bytes @ 0x2E
  1666  004E                     	ds	4
  1667  0052                     ___flsub@b:
  1668                           
  1669                           ; 4 bytes @ 0x32
  1670  0052                     	ds	4
  1671  0056                     ?___fltol:
  1672  0056                     ___fltol@f1:	
  1673                           ; 4 bytes @ 0x36
  1674                           
  1675                           
  1676                           ; 4 bytes @ 0x36
  1677  0056                     	ds	4
  1678  005A                     ??___fltol:
  1679                           
  1680                           ; 1 bytes @ 0x3A
  1681  005A                     	ds	5
  1682  005F                     ___fltol@sign1:
  1683                           
  1684                           ; 1 bytes @ 0x3F
  1685  005F                     	ds	1
  1686  0060                     ___fltol@exp1:
  1687                           
  1688                           ; 1 bytes @ 0x40
  1689  0060                     	ds	1
  1690  0061                     ??_T500ms_Event:
  1691                           
  1692                           ; 1 bytes @ 0x41
  1693  0061                     	ds	1
  1694  0062                     _T500ms_Event$1203:
  1695                           
  1696                           ; 1 bytes @ 0x42
  1697  0062                     	ds	1
  1698  0063                     T500ms_Event@ADC_Val:
  1699                           
  1700                           ; 2 bytes @ 0x43
  1701  0063                     	ds	2
  1702  0065                     ??_main:
  1703                           
  1704                           ; 1 bytes @ 0x45
  1705  0065                     	ds	1
  1706                           
  1707                           	psect	maintext
  1708  0BFA                     __pmaintext:	
  1709 ;;
  1710 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1711 ;;
  1712 ;; *************** function _main *****************
  1713 ;; Defined at:
  1714 ;;		line 68 in file "User/newmain.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : B1F/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1728 ;;      Params:         0       0       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0
  1730 ;;      Temps:          0       1       0       0       0       0       0       0
  1731 ;;      Totals:         0       1       0       0       0       0       0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels required when called: 5
  1734 ;; This function calls:
  1735 ;;		_GetKey
  1736 ;;		_GetWater
  1737 ;;		_KeyPro
  1738 ;;		_ReadCurrent
  1739 ;;		_ScanF
  1740 ;;		_T100ms_Event
  1741 ;;		_T1s_Event
  1742 ;;		_T500ms_Event
  1743 ;;		_init
  1744 ;; This function is called by:
  1745 ;;		Startup code after reset
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _main
  1751  0BFA                     _main:
  1752                           
  1753                           ;User/newmain.c: 70:     init();
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1757  0BFA  318C  24A5  318B   	fcall	_init
  1758                           
  1759                           ;User/newmain.c: 72:     Flg.FlgByte = 0;
  1760  0BFD  0020               	movlb	0	; select bank0
  1761  0BFE  01EF               	clrf	_Flg	;volatile
  1762                           
  1763                           ;User/newmain.c: 73:     Flg2.Flg2Byte = 0;
  1764  0BFF  01EE               	clrf	_Flg2	;volatile
  1765                           
  1766                           ;User/newmain.c: 74:     Key.KeyByte = 0;
  1767  0C00  01EB               	clrf	_Key	;volatile
  1768  0C01                     l402:	
  1769                           ;User/newmain.c: 78:         ;
  1770                           
  1771                           
  1772                           ;User/newmain.c: 77:     while (Flg.bits.T4ms_B7 == 0)
  1773  0C01  1FEF               	btfss	_Flg,7	;volatile
  1774  0C02  2C01               	goto	l402
  1775                           
  1776                           ;User/newmain.c: 79:     Flg.bits.T4ms_B7 = 0;
  1777  0C03  13EF               	bcf	_Flg,7	;volatile
  1778                           
  1779                           ;User/newmain.c: 82:     ScanWait = 5;
  1780  0C04  3005               	movlw	5
  1781  0C05  00E5               	movwf	??_main
  1782  0C06  0865               	movf	??_main,w
  1783  0C07  0021               	movlb	1	; select bank1
  1784  0C08  00E0               	movwf	_ScanWait^(0+128)	;volatile
  1785                           
  1786                           ;User/newmain.c: 83:     ScanF();
  1787  0C09  3180  200B  318B   	fcall	_ScanF
  1788                           
  1789                           ;User/newmain.c: 84:     GetWater();
  1790  0C0C  318B  2318  318B   	fcall	_GetWater
  1791                           
  1792                           ;User/newmain.c: 85:     Flg.bits.PWON_B0 = 1;
  1793  0C0F  0020               	movlb	0	; select bank0
  1794  0C10  146F               	bsf	_Flg,0	;volatile
  1795  0C11                     l3970:
  1796                           
  1797                           ;User/newmain.c: 88:     {;User/newmain.c: 89:         if ((Flg2.Flg2Byte & 0x85) == 0)
  1798  0C11  0020               	movlb	0	; select bank0
  1799  0C12  086E               	movf	_Flg2,w	;volatile
  1800  0C13  3985               	andlw	133
  1801  0C14  1D03               	btfss	3,2
  1802  0C15  2C18               	goto	l3974
  1803                           
  1804                           ;User/newmain.c: 90:         {;User/newmain.c: 91:             LATAbits.LATA5 = 1;
  1805  0C16  0022               	movlb	2	; select bank2
  1806  0C17  168C               	bsf	12,5	;volatile
  1807  0C18                     l3974:
  1808                           
  1809                           ;User/newmain.c: 94:         if (((Flg2.Flg2Byte & 0x85) == 0) && (Flg.bits.PWON_B0 == 1
      +                          ) && (PORTAbits.RA3 == 1))
  1810  0C18  0020               	movlb	0	; select bank0
  1811  0C19  086E               	movf	_Flg2,w	;volatile
  1812  0C1A  3985               	andlw	133
  1813  0C1B  1903               	btfsc	3,2
  1814  0C1C  1C6F               	btfss	_Flg,0	;volatile
  1815  0C1D  2C22               	goto	l3982
  1816  0C1E  1D8C               	btfss	12,3	;volatile
  1817  0C1F  2C22               	goto	l3982
  1818                           
  1819                           ;User/newmain.c: 95:             hze = 0;
  1820  0C20  0021               	movlb	1	; select bank1
  1821  0C21  01E5               	clrf	_hze^(0+128)
  1822  0C22                     l3982:
  1823                           
  1824                           ;User/newmain.c: 97:         if (Flg.bits.T100ms_B2)
  1825  0C22  0020               	movlb	0	; select bank0
  1826  0C23  1D6F               	btfss	_Flg,2	;volatile
  1827  0C24  2C28               	goto	l3986
  1828                           
  1829                           ;User/newmain.c: 98:             T100ms_Event();
  1830  0C25  318A  2236  318B   	fcall	_T100ms_Event
  1831  0C28                     l3986:
  1832                           
  1833                           ;User/newmain.c: 100:         if (Flg.bits.T500ms_B3)
  1834  0C28  0020               	movlb	0	; select bank0
  1835  0C29  1DEF               	btfss	_Flg,3	;volatile
  1836  0C2A  2C2E               	goto	l3990
  1837                           
  1838                           ;User/newmain.c: 101:             T500ms_Event();
  1839  0C2B  3183  2379  318B   	fcall	_T500ms_Event
  1840  0C2E                     l3990:
  1841                           
  1842                           ;User/newmain.c: 103:         if (Flg.bits.T1s_B4)
  1843  0C2E  0020               	movlb	0	; select bank0
  1844  0C2F  1E6F               	btfss	_Flg,4	;volatile
  1845  0C30  2C34               	goto	l410
  1846                           
  1847                           ;User/newmain.c: 104:             T1s_Event();
  1848  0C31  318A  22A7  318B   	fcall	_T1s_Event
  1849  0C34                     l410:
  1850  0C34  0064               	clrwdt	;# 
  1851                           
  1852                           ;User/newmain.c: 108:         if (readkeytime > 20)
  1853  0C35  3015               	movlw	21
  1854  0C36  0021               	movlb	1	; select bank1
  1855  0C37  025C               	subwf	_readkeytime^(0+128),w
  1856  0C38  1C03               	skipc
  1857  0C39  2C11               	goto	l3970
  1858                           
  1859                           ;User/newmain.c: 109:         {;User/newmain.c: 111:             ReadCurrent();
  1860  0C3A  318D  2565  318B   	fcall	_ReadCurrent
  1861                           
  1862                           ;User/newmain.c: 112:             readkeytime = 0;
  1863  0C3D  0021               	movlb	1	; select bank1
  1864  0C3E  01DC               	clrf	_readkeytime^(0+128)
  1865                           
  1866                           ;User/newmain.c: 113:             GetKey();
  1867  0C3F  318F  272A  318B   	fcall	_GetKey
  1868                           
  1869                           ;User/newmain.c: 114:             if (KeyTime > 9)
  1870  0C42  300A               	movlw	10
  1871  0C43  0021               	movlb	1	; select bank1
  1872  0C44  025D               	subwf	_KeyTime^(0+128),w
  1873  0C45  1C03               	skipc
  1874  0C46  2C11               	goto	l3970
  1875                           
  1876                           ;User/newmain.c: 115:                 KeyPro();
  1877  0C47  318B  2371  318B   	fcall	_KeyPro
  1878  0C4A  2C11               	goto	l3970
  1879  0C4B                     __end_of_main:
  1880                           
  1881                           	psect	text1
  1882  0CA5                     __ptext1:	
  1883 ;; *************** function _init *****************
  1884 ;; Defined at:
  1885 ;;		line 4 in file "User/init.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1899 ;;      Params:         0       0       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0       0
  1901 ;;      Temps:          1       0       0       0       0       0       0       0
  1902 ;;      Totals:         1       0       0       0       0       0       0       0
  1903 ;;Total ram usage:        1 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 1
  1906 ;; This function calls:
  1907 ;;		_AD_init
  1908 ;;		_PWM_init
  1909 ;;		_Time0_init
  1910 ;;		_Time1_init
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _init
  1918  0CA5                     _init:
  1919                           
  1920                           ;User/init.c: 7:     OSCCONbits.SPLLEN = 1;
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1924  0CA5  0021               	movlb	1	; select bank1
  1925  0CA6  1799               	bsf	25,7	;volatile
  1926                           
  1927                           ;User/init.c: 8:     OSCCONbits.IRCF = 0x0E;
  1928  0CA7  0819               	movf	25,w	;volatile
  1929  0CA8  3987               	andlw	-121
  1930  0CA9  3870               	iorlw	112
  1931  0CAA  0099               	movwf	25	;volatile
  1932                           
  1933                           ;User/init.c: 9:     OSCCONbits.SCS = 0;
  1934  0CAB  30FC               	movlw	-4
  1935  0CAC  0599               	andwf	25,f	;volatile
  1936  0CAD                     l2994:	
  1937                           ;User/init.c: 11:     while ((OSCSTAT & 0x59) != 0x59)
  1938                           
  1939                           
  1940                           ;User/init.c: 11:     while ((OSCSTAT & 0x59) != 0x59)
  1941  0CAD  3059               	movlw	89
  1942  0CAE  051A               	andwf	26,w	;volatile
  1943  0CAF  00F0               	movwf	??_init
  1944  0CB0  3059               	movlw	89
  1945  0CB1  0670               	xorwf	??_init,w
  1946  0CB2  1D03               	btfss	3,2
  1947  0CB3  2CAD               	goto	l2994
  1948                           
  1949                           ;User/init.c: 15:     WPUA = 0x08;
  1950  0CB4  3008               	movlw	8
  1951  0CB5  0024               	movlb	4	; select bank4
  1952  0CB6  008C               	movwf	12	;volatile
  1953                           
  1954                           ;User/init.c: 16:     PORTA = 0;
  1955  0CB7  0020               	movlb	0	; select bank0
  1956  0CB8  018C               	clrf	12	;volatile
  1957                           
  1958                           ;User/init.c: 17:     TRISA = 0;
  1959  0CB9  0021               	movlb	1	; select bank1
  1960  0CBA  018C               	clrf	12	;volatile
  1961                           
  1962                           ;User/init.c: 18:     ANSELA = 0;
  1963  0CBB  0023               	movlb	3	; select bank3
  1964  0CBC  018C               	clrf	12	;volatile
  1965                           
  1966                           ;User/init.c: 19:     TRISA = 0B10001000;
  1967  0CBD  3088               	movlw	136
  1968  0CBE  0021               	movlb	1	; select bank1
  1969  0CBF  008C               	movwf	12	;volatile
  1970                           
  1971                           ;User/init.c: 20:     PORTA = 0B10111110;
  1972  0CC0  30BE               	movlw	190
  1973  0CC1  0020               	movlb	0	; select bank0
  1974  0CC2  008C               	movwf	12	;volatile
  1975                           
  1976                           ;User/init.c: 21:     LATA = 0B10111110;
  1977  0CC3  30BE               	movlw	190
  1978  0CC4  0022               	movlb	2	; select bank2
  1979  0CC5  008C               	movwf	12	;volatile
  1980                           
  1981                           ;User/init.c: 23:     WPUB = 0x00;
  1982  0CC6  0024               	movlb	4	; select bank4
  1983  0CC7  018D               	clrf	13	;volatile
  1984                           
  1985                           ;User/init.c: 24:     PORTB = 0;
  1986  0CC8  0020               	movlb	0	; select bank0
  1987  0CC9  018D               	clrf	13	;volatile
  1988                           
  1989                           ;User/init.c: 25:     TRISB = 0;
  1990  0CCA  0021               	movlb	1	; select bank1
  1991  0CCB  018D               	clrf	13	;volatile
  1992                           
  1993                           ;User/init.c: 26:     ANSELB = 0x10;
  1994  0CCC  3010               	movlw	16
  1995  0CCD  0023               	movlb	3	; select bank3
  1996  0CCE  008D               	movwf	13	;volatile
  1997                           
  1998                           ;User/init.c: 27:     TRISB = 0B00111111;
  1999  0CCF  303F               	movlw	63
  2000  0CD0  0021               	movlb	1	; select bank1
  2001  0CD1  008D               	movwf	13	;volatile
  2002                           
  2003                           ;User/init.c: 28:     PORTB = 0B11111111;
  2004  0CD2  30FF               	movlw	255
  2005  0CD3  0020               	movlb	0	; select bank0
  2006  0CD4  008D               	movwf	13	;volatile
  2007                           
  2008                           ;User/init.c: 29:     LATB = 0B11111111;
  2009  0CD5  30FF               	movlw	255
  2010  0CD6  0022               	movlb	2	; select bank2
  2011  0CD7  008D               	movwf	13	;volatile
  2012                           
  2013                           ;User/init.c: 31:     WPUC = 0x00;
  2014  0CD8  0024               	movlb	4	; select bank4
  2015  0CD9  018E               	clrf	14	;volatile
  2016                           
  2017                           ;User/init.c: 32:     PORTC = 0;
  2018  0CDA  0020               	movlb	0	; select bank0
  2019  0CDB  018E               	clrf	14	;volatile
  2020                           
  2021                           ;User/init.c: 33:     TRISC = 0;
  2022  0CDC  0021               	movlb	1	; select bank1
  2023  0CDD  018E               	clrf	14	;volatile
  2024                           
  2025                           ;User/init.c: 35:     ANSELC = 0x80;
  2026  0CDE  3080               	movlw	128
  2027  0CDF  0023               	movlb	3	; select bank3
  2028  0CE0  008E               	movwf	14	;volatile
  2029                           
  2030                           ;User/init.c: 36:     TRISC = 0B10000000;
  2031  0CE1  3080               	movlw	128
  2032  0CE2  0021               	movlb	1	; select bank1
  2033  0CE3  008E               	movwf	14	;volatile
  2034                           
  2035                           ;User/init.c: 37:     PORTC = 0B10110111;
  2036  0CE4  30B7               	movlw	183
  2037  0CE5  0020               	movlb	0	; select bank0
  2038  0CE6  008E               	movwf	14	;volatile
  2039                           
  2040                           ;User/init.c: 38:     LATC = 0B10110111;
  2041  0CE7  30B7               	movlw	183
  2042  0CE8  0022               	movlb	2	; select bank2
  2043  0CE9  008E               	movwf	14	;volatile
  2044                           
  2045                           ;User/init.c: 41:     LATCbits.LATC1 = 1;
  2046  0CEA  148E               	bsf	14,1	;volatile
  2047                           
  2048                           ;User/init.c: 42:     INTCON = 0;
  2049  0CEB  018B               	clrf	11	;volatile
  2050                           
  2051                           ;User/init.c: 46:     Time0_init();
  2052  0CEC  318A  2246  318C   	fcall	_Time0_init
  2053                           
  2054                           ;User/init.c: 47:     Time1_init();
  2055  0CEF  318A  225E  318C   	fcall	_Time1_init
  2056                           
  2057                           ;User/init.c: 49:     AD_init();
  2058  0CF2  318A  226B  318C   	fcall	_AD_init
  2059                           
  2060                           ;User/init.c: 51:     PWM_init();
  2061  0CF5  318A  22C0         	fcall	_PWM_init
  2062                           
  2063                           ;User/init.c: 53:     OPTION_REG &= 0x7F;
  2064  0CF7  307F               	movlw	127
  2065  0CF8  00F0               	movwf	??_init
  2066  0CF9  0870               	movf	??_init,w
  2067  0CFA  0021               	movlb	1	; select bank1
  2068  0CFB  0595               	andwf	21,f	;volatile
  2069                           
  2070                           ;User/init.c: 54:     INTCONbits.PEIE = 1;
  2071  0CFC  170B               	bsf	11,6	;volatile
  2072                           
  2073                           ;User/init.c: 55:     INTCONbits.GIE = 1;
  2074  0CFD  178B               	bsf	11,7	;volatile
  2075  0CFE  0008               	return
  2076  0CFF                     __end_of_init:
  2077                           
  2078                           	psect	text2
  2079  0A5E                     __ptext2:	
  2080 ;; *************** function _Time1_init *****************
  2081 ;; Defined at:
  2082 ;;		line 95 in file "User/init.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2096 ;;      Params:         0       0       0       0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0
  2098 ;;      Temps:          0       0       0       0       0       0       0       0
  2099 ;;      Totals:         0       0       0       0       0       0       0       0
  2100 ;;Total ram usage:        0 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_init
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _Time1_init
  2111  0A5E                     _Time1_init:
  2112                           
  2113                           ;User/init.c: 99:     T1CON = 0B00110000;
  2114                           
  2115                           ;incstack = 0
  2116                           ; Regs used in _Time1_init: [wreg]
  2117  0A5E  3030               	movlw	48
  2118  0A5F  0020               	movlb	0	; select bank0
  2119  0A60  0098               	movwf	24	;volatile
  2120                           
  2121                           ;User/init.c: 102:     TMR1H = (65535 - 20000) >> 8;
  2122  0A61  30B1               	movlw	177
  2123  0A62  0097               	movwf	23	;volatile
  2124                           
  2125                           ;User/init.c: 103:     TMR1L = (65535 - 20000) & 0xFF;
  2126  0A63  30DF               	movlw	223
  2127  0A64  0096               	movwf	22	;volatile
  2128                           
  2129                           ;User/init.c: 105:     TMR1ON = 1;
  2130  0A65  1418               	bsf	24,0	;volatile
  2131                           
  2132                           ;User/init.c: 107:     PIE1bits.TMR1IE = 1;
  2133  0A66  0021               	movlb	1	; select bank1
  2134  0A67  1411               	bsf	17,0	;volatile
  2135                           
  2136                           ;User/init.c: 108:     PIR1bits.TMR1IF = 0;
  2137  0A68  0020               	movlb	0	; select bank0
  2138  0A69  1011               	bcf	17,0	;volatile
  2139  0A6A  0008               	return
  2140  0A6B                     __end_of_Time1_init:
  2141                           
  2142                           	psect	text3
  2143  0A46                     __ptext3:	
  2144 ;; *************** function _Time0_init *****************
  2145 ;; Defined at:
  2146 ;;		line 64 in file "User/init.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      void 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2160 ;;      Params:         0       0       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_init
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _Time0_init
  2175  0A46                     _Time0_init:
  2176                           
  2177                           ;User/init.c: 67:     OPTION_REGbits.TMR0CS = 0;
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in _Time0_init: [wreg+status,2+status,0]
  2181  0A46  0021               	movlb	1	; select bank1
  2182  0A47  1295               	bcf	21,5	;volatile
  2183                           
  2184                           ;User/init.c: 68:     OPTION_REGbits.PSA = 0;
  2185  0A48  1195               	bcf	21,3	;volatile
  2186                           
  2187                           ;User/init.c: 69:     OPTION_REGbits.PS = 6;
  2188  0A49  0815               	movf	21,w	;volatile
  2189  0A4A  39F8               	andlw	-8
  2190  0A4B  3806               	iorlw	6
  2191  0A4C  0095               	movwf	21	;volatile
  2192                           
  2193                           ;User/init.c: 74:     TMR0 = 131;
  2194  0A4D  3083               	movlw	131
  2195  0A4E  0020               	movlb	0	; select bank0
  2196  0A4F  0095               	movwf	21	;volatile
  2197                           
  2198                           ;User/init.c: 75:     INTCONbits.TMR0IE = 1;
  2199  0A50  168B               	bsf	11,5	;volatile
  2200  0A51  0008               	return
  2201  0A52                     __end_of_Time0_init:
  2202                           
  2203                           	psect	text4
  2204  0AC0                     __ptext4:	
  2205 ;; *************** function _PWM_init *****************
  2206 ;; Defined at:
  2207 ;;		line 144 in file "User/init.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2221 ;;      Params:         0       0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_init
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           
  2235                           ;psect for function _PWM_init
  2236  0AC0                     _PWM_init:
  2237                           
  2238                           ;User/init.c: 149:     PWM3CONbits.EN = 0;
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  2242  0AC0  003B               	movlb	27	; select bank27
  2243  0AC1  13BB               	bcf	59,7	;volatile
  2244                           
  2245                           ;User/init.c: 151:     PWM3CLKCONbits.CS = 0B00;
  2246  0AC2  30FC               	movlw	-4
  2247  0AC3  05BE               	andwf	62,f	;volatile
  2248                           
  2249                           ;User/init.c: 152:     PWM3CLKCONbits.PS = 0B000;
  2250  0AC4  308F               	movlw	-113
  2251  0AC5  05BE               	andwf	62,f	;volatile
  2252                           
  2253                           ;User/init.c: 156:     PWM3LDCONbits.LDA = 1;
  2254  0AC6  17BF               	bsf	63,7	;volatile
  2255                           
  2256                           ;User/init.c: 157:     PWM3LDCONbits.LDT = 0;
  2257  0AC7  133F               	bcf	63,6	;volatile
  2258                           
  2259                           ;User/init.c: 159:     PWM3OFCONbits.OFM = 0;
  2260  0AC8  309F               	movlw	-97
  2261  0AC9  05C0               	andwf	64,f	;volatile
  2262                           
  2263                           ;User/init.c: 166:     PWM3PRH = 0x01;
  2264  0ACA  3001               	movlw	1
  2265  0ACB  00B6               	movwf	54	;volatile
  2266                           
  2267                           ;User/init.c: 167:     PWM3PRL = 0x22;
  2268  0ACC  3022               	movlw	34
  2269  0ACD  00B5               	movwf	53	;volatile
  2270                           
  2271                           ;User/init.c: 173:     PWM3DCH = 0;
  2272  0ACE  01B4               	clrf	52	;volatile
  2273                           
  2274                           ;User/init.c: 174:     PWM3DCL = 0x91;
  2275  0ACF  3091               	movlw	145
  2276  0AD0  00B3               	movwf	51	;volatile
  2277                           
  2278                           ;User/init.c: 177:     PWM3PHH = 0;
  2279  0AD1  01B2               	clrf	50	;volatile
  2280                           
  2281                           ;User/init.c: 178:     PWM3PHL = 0;
  2282  0AD2  01B1               	clrf	49	;volatile
  2283                           
  2284                           ;User/init.c: 183:     RC3PPS = 0b0101;
  2285  0AD3  3005               	movlw	5
  2286  0AD4  003D               	movlb	29	; select bank29
  2287  0AD5  00A3               	movwf	35	;volatile
  2288                           
  2289                           ;User/init.c: 185:     PWM3INTEbits.PRIE = 1;
  2290  0AD6  003B               	movlb	27	; select bank27
  2291  0AD7  143C               	bsf	60,0	;volatile
  2292                           
  2293                           ;User/init.c: 186:     PWM3INTFbits.PRIF = 0;
  2294  0AD8  103D               	bcf	61,0	;volatile
  2295  0AD9  0008               	return
  2296  0ADA                     __end_of_PWM_init:
  2297                           
  2298                           	psect	text5
  2299  0A6B                     __ptext5:	
  2300 ;; *************** function _AD_init *****************
  2301 ;; Defined at:
  2302 ;;		line 123 in file "User/init.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;		None
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2316 ;;      Params:         0       0       0       0       0       0       0       0
  2317 ;;      Locals:         0       0       0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0
  2319 ;;      Totals:         0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        0 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_init
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _AD_init
  2331  0A6B                     _AD_init:
  2332                           
  2333                           ;User/init.c: 125:     ADCON0bits.ADON = 1;
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _AD_init: [wreg+status,2+status,0]
  2337  0A6B  0021               	movlb	1	; select bank1
  2338  0A6C  141D               	bsf	29,0	;volatile
  2339                           
  2340                           ;User/init.c: 126:     ADCON0bits.CHS = 9;
  2341  0A6D  081D               	movf	29,w	;volatile
  2342  0A6E  3983               	andlw	-125
  2343  0A6F  3824               	iorlw	36
  2344  0A70  009D               	movwf	29	;volatile
  2345                           
  2346                           ;User/init.c: 128:     ADCON1bits.ADFM = 1;
  2347  0A71  179E               	bsf	30,7	;volatile
  2348                           
  2349                           ;User/init.c: 129:     ADCON1bits.ADCS = 6;
  2350  0A72  081E               	movf	30,w	;volatile
  2351  0A73  398F               	andlw	-113
  2352  0A74  3860               	iorlw	96
  2353  0A75  009E               	movwf	30	;volatile
  2354                           
  2355                           ;User/init.c: 130:     ADCON1bits.ADPREF = 0;
  2356  0A76  30FC               	movlw	-4
  2357  0A77  059E               	andwf	30,f	;volatile
  2358                           
  2359                           ;User/init.c: 140:     PIE1bits.ADIE = 0;
  2360  0A78  1311               	bcf	17,6	;volatile
  2361                           
  2362                           ;User/init.c: 141:     PIR1bits.ADIF = 0;
  2363  0A79  0020               	movlb	0	; select bank0
  2364  0A7A  1311               	bcf	17,6	;volatile
  2365  0A7B  0008               	return
  2366  0A7C                     __end_of_AD_init:
  2367                           
  2368                           	psect	text6
  2369  0379                     __ptext6:	
  2370 ;; *************** function _T500ms_Event *****************
  2371 ;; Defined at:
  2372 ;;		line 206 in file "User/newmain.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;  ADC_Val         2   67[BANK0 ] unsigned int 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2386 ;;      Params:         0       0       0       0       0       0       0       0
  2387 ;;      Locals:         0       3       0       0       0       0       0       0
  2388 ;;      Temps:          0       1       0       0       0       0       0       0
  2389 ;;      Totals:         0       4       0       0       0       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 4
  2393 ;; This function calls:
  2394 ;;		_GetADC
  2395 ;;		_LED_Show
  2396 ;;		_PWMOFF
  2397 ;;		_PWMON
  2398 ;;		_TwoData_COM
  2399 ;;		___fladd
  2400 ;;		___flmul
  2401 ;;		___flsub
  2402 ;;		___fltol
  2403 ;;		___xxtofl
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _T500ms_Event
  2411  0379                     _T500ms_Event:
  2412                           
  2413                           ;User/newmain.c: 208:     uword ADC_Val;;User/newmain.c: 210:     Flg.bits.T500ms_B3 = 0
      +                          ;
  2414                           
  2415                           ;incstack = 0
  2416                           ; Regs used in _T500ms_Event: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2417  0379  0020               	movlb	0	; select bank0
  2418  037A  11EF               	bcf	_Flg,3	;volatile
  2419                           
  2420                           ;User/newmain.c: 212:     if (NoWater == 1)
  2421  037B  036D               	decf	_NoWater,w
  2422  037C  1D03               	btfss	3,2
  2423  037D  2B83               	goto	l3750
  2424                           
  2425                           ;User/newmain.c: 213:     {;User/newmain.c: 214:         TwoData_COM();
  2426  037E  318B  23B2  3183   	fcall	_TwoData_COM
  2427                           
  2428                           ;User/newmain.c: 215:         T30s_cnt = 0;
  2429  0381  0021               	movlb	1	; select bank1
  2430  0382  01DB               	clrf	_T30s_cnt^(0+128)
  2431  0383                     l3750:
  2432                           
  2433                           ;User/newmain.c: 218:     if (T30s_cnt > 29)
  2434  0383  301E               	movlw	30
  2435  0384  0021               	movlb	1	; select bank1
  2436  0385  025B               	subwf	_T30s_cnt^(0+128),w
  2437  0386  1C03               	skipc
  2438  0387  2B91               	goto	l3758
  2439                           
  2440                           ;User/newmain.c: 219:     {;User/newmain.c: 220:         T30s_cnt = 0;
  2441  0388  01DB               	clrf	_T30s_cnt^(0+128)
  2442                           
  2443                           ;User/newmain.c: 221:         PWMTime = 20;
  2444  0389  3014               	movlw	20
  2445  038A  0020               	movlb	0	; select bank0
  2446  038B  00E1               	movwf	??_T500ms_Event
  2447  038C  0861               	movf	??_T500ms_Event,w
  2448  038D  0021               	movlb	1	; select bank1
  2449  038E  00E4               	movwf	_PWMTime^(0+128)
  2450                           
  2451                           ;User/newmain.c: 222:         Flg2.bits.ADMin_B1 = 0;
  2452  038F  0020               	movlb	0	; select bank0
  2453  0390  10EE               	bcf	_Flg2,1	;volatile
  2454  0391                     l3758:
  2455                           
  2456                           ;User/newmain.c: 225:     if (PWM3CONbits.EN)
  2457  0391  003B               	movlb	27	; select bank27
  2458  0392  1FBB               	btfss	59,7	;volatile
  2459  0393  2BC4               	goto	l3772
  2460                           
  2461                           ;User/newmain.c: 226:     {;User/newmain.c: 227:         PWMTime++;
  2462  0394  3001               	movlw	1
  2463  0395  0020               	movlb	0	; select bank0
  2464  0396  00E1               	movwf	??_T500ms_Event
  2465  0397  0861               	movf	??_T500ms_Event,w
  2466  0398  0021               	movlb	1	; select bank1
  2467  0399  07E4               	addwf	_PWMTime^(0+128),f
  2468                           
  2469                           ;User/newmain.c: 228:         T30s_cnt++;
  2470  039A  3001               	movlw	1
  2471  039B  0020               	movlb	0	; select bank0
  2472  039C  00E1               	movwf	??_T500ms_Event
  2473  039D  0861               	movf	??_T500ms_Event,w
  2474  039E  0021               	movlb	1	; select bank1
  2475  039F  07DB               	addwf	_T30s_cnt^(0+128),f
  2476                           
  2477                           ;User/newmain.c: 230:         if (((GetADC(10) < ADMin) || (GetADC(10) > ADMax)) && (NoW
      +                          ater == 0) && Flg2.bits.ADMin_B1)
  2478  03A0  300A               	movlw	10
  2479  03A1  318C  244B  3183   	fcall	_GetADC
  2480  03A4  0021               	movlb	1	; select bank1
  2481  03A5  084D               	movf	(_ADMin+1)^(0+128),w
  2482  03A6  0276               	subwf	?_GetADC+1,w
  2483  03A7  1D03               	skipz
  2484  03A8  2BAB               	goto	u5125
  2485  03A9  084C               	movf	_ADMin^(0+128),w
  2486  03AA  0275               	subwf	?_GetADC,w
  2487  03AB                     u5125:
  2488  03AB  1C03               	skipc
  2489  03AC  2BBA               	goto	l3766
  2490  03AD  300A               	movlw	10
  2491  03AE  318C  244B  3183   	fcall	_GetADC
  2492  03B1  0876               	movf	?_GetADC+1,w
  2493  03B2  0021               	movlb	1	; select bank1
  2494  03B3  0267               	subwf	(_ADMax+1)^(0+128),w
  2495  03B4  1D03               	skipz
  2496  03B5  2BB8               	goto	u5135
  2497  03B6  0875               	movf	?_GetADC,w
  2498  03B7  0266               	subwf	_ADMax^(0+128),w
  2499  03B8                     u5135:
  2500  03B8  1803               	skipnc
  2501  03B9  2BC4               	goto	l3772
  2502  03BA                     l3766:
  2503  03BA  0020               	movlb	0	; select bank0
  2504  03BB  086D               	movf	_NoWater,w
  2505  03BC  1903               	btfsc	3,2
  2506  03BD  1CEE               	btfss	_Flg2,1	;volatile
  2507  03BE  2BC4               	goto	l3772
  2508                           
  2509                           ;User/newmain.c: 231:             nt++;
  2510  03BF  3001               	movlw	1
  2511  03C0  00E1               	movwf	??_T500ms_Event
  2512  03C1  0861               	movf	??_T500ms_Event,w
  2513  03C2  0021               	movlb	1	; select bank1
  2514  03C3  07D6               	addwf	_nt^(0+128),f
  2515  03C4                     l3772:
  2516                           
  2517                           ;User/newmain.c: 236:     if (nt > 1)
  2518  03C4  3002               	movlw	2
  2519  03C5  0021               	movlb	1	; select bank1
  2520  03C6  0256               	subwf	_nt^(0+128),w
  2521  03C7  1C03               	skipc
  2522  03C8  2BD0               	goto	l3778
  2523                           
  2524                           ;User/newmain.c: 237:     {;User/newmain.c: 238:         nt = 0;
  2525  03C9  01D6               	clrf	_nt^(0+128)
  2526                           
  2527                           ;User/newmain.c: 239:         NoWater = 1;
  2528  03CA  0020               	movlb	0	; select bank0
  2529  03CB  01ED               	clrf	_NoWater
  2530  03CC  0AED               	incf	_NoWater,f
  2531                           
  2532                           ;User/newmain.c: 240:         adc_true_cnt = adc_false_cnt = 0;
  2533  03CD  0021               	movlb	1	; select bank1
  2534  03CE  01DE               	clrf	_adc_false_cnt^(0+128)
  2535  03CF  01DF               	clrf	_adc_true_cnt^(0+128)
  2536  03D0                     l3778:
  2537                           
  2538                           ;User/newmain.c: 243:     if ((PWMTime > PWMTime_Val) && (Flg2.bits.ADMin_B1 == 0))
  2539  03D0  0864               	movf	_PWMTime^(0+128),w
  2540  03D1  026A               	subwf	_PWMTime_Val^(0+128),w
  2541  03D2  1803               	skipnc
  2542  03D3  2D29               	goto	l3786
  2543  03D4  0020               	movlb	0	; select bank0
  2544  03D5  18EE               	btfsc	_Flg2,1	;volatile
  2545  03D6  2D29               	goto	l3786
  2546                           
  2547                           ;User/newmain.c: 244:     {;User/newmain.c: 245:         ADC_Val = GetADC(10);
  2548  03D7  300A               	movlw	10
  2549  03D8  318C  244B  3183   	fcall	_GetADC
  2550  03DB  0876               	movf	?_GetADC+1,w
  2551  03DC  0020               	movlb	0	; select bank0
  2552  03DD  00E4               	movwf	T500ms_Event@ADC_Val+1
  2553  03DE  0875               	movf	?_GetADC,w
  2554  03DF  00E3               	movwf	T500ms_Event@ADC_Val
  2555                           
  2556                           ;User/newmain.c: 247:         ADMin = ADC_Val - (ADC_Val * 0.12);
  2557  03E0  0863               	movf	T500ms_Event@ADC_Val,w
  2558  03E1  00F0               	movwf	___xxtofl@val
  2559  03E2  0864               	movf	T500ms_Event@ADC_Val+1,w
  2560  03E3  00F1               	movwf	___xxtofl@val+1
  2561  03E4  01F2               	clrf	___xxtofl@val+2
  2562  03E5  01F3               	clrf	___xxtofl@val+3
  2563  03E6  3000               	movlw	0
  2564  03E7  318D  25E3  3183   	fcall	___xxtofl
  2565  03EA  0873               	movf	?___xxtofl+3,w
  2566  03EB  0020               	movlb	0	; select bank0
  2567  03EC  00D5               	movwf	___flsub@b+3
  2568  03ED  0872               	movf	?___xxtofl+2,w
  2569  03EE  00D4               	movwf	___flsub@b+2
  2570  03EF  0871               	movf	?___xxtofl+1,w
  2571  03F0  00D3               	movwf	___flsub@b+1
  2572  03F1  0870               	movf	?___xxtofl,w
  2573  03F2  00D2               	movwf	___flsub@b
  2574  03F3  0863               	movf	T500ms_Event@ADC_Val,w
  2575  03F4  00F0               	movwf	___xxtofl@val
  2576  03F5  0864               	movf	T500ms_Event@ADC_Val+1,w
  2577  03F6  00F1               	movwf	___xxtofl@val+1
  2578  03F7  01F2               	clrf	___xxtofl@val+2
  2579  03F8  01F3               	clrf	___xxtofl@val+3
  2580  03F9  3000               	movlw	0
  2581  03FA  318D  25E3  3183   	fcall	___xxtofl
  2582  03FD  0873               	movf	?___xxtofl+3,w
  2583  03FE  0020               	movlb	0	; select bank0
  2584  03FF  00A7               	movwf	___flmul@a+3
  2585  0400  0872               	movf	?___xxtofl+2,w
  2586  0401  00A6               	movwf	___flmul@a+2
  2587  0402  0871               	movf	?___xxtofl+1,w
  2588  0403  00A5               	movwf	___flmul@a+1
  2589  0404  0870               	movf	?___xxtofl,w
  2590  0405  00A4               	movwf	___flmul@a
  2591  0406  303D               	movlw	61
  2592  0407  00A3               	movwf	___flmul@b+3
  2593  0408  30F5               	movlw	245
  2594  0409  00A2               	movwf	___flmul@b+2
  2595  040A  30C2               	movlw	194
  2596  040B  00A1               	movwf	___flmul@b+1
  2597  040C  308F               	movlw	143
  2598  040D  00A0               	movwf	___flmul@b
  2599  040E  3185  25A2  3183   	fcall	___flmul
  2600  0411  0020               	movlb	0	; select bank0
  2601  0412  0823               	movf	?___flmul+3,w
  2602  0413  00D1               	movwf	___flsub@a+3
  2603  0414  0822               	movf	?___flmul+2,w
  2604  0415  00D0               	movwf	___flsub@a+2
  2605  0416  0821               	movf	?___flmul+1,w
  2606  0417  00CF               	movwf	___flsub@a+1
  2607  0418  0820               	movf	?___flmul,w
  2608  0419  00CE               	movwf	___flsub@a
  2609  041A  318A  22F9  3183   	fcall	___flsub
  2610  041D  0020               	movlb	0	; select bank0
  2611  041E  0851               	movf	?___flsub+3,w
  2612  041F  00D9               	movwf	___fltol@f1+3
  2613  0420  0850               	movf	?___flsub+2,w
  2614  0421  00D8               	movwf	___fltol@f1+2
  2615  0422  084F               	movf	?___flsub+1,w
  2616  0423  00D7               	movwf	___fltol@f1+1
  2617  0424  084E               	movf	?___flsub,w
  2618  0425  00D6               	movwf	___fltol@f1
  2619  0426  318C  24FF  3183   	fcall	___fltol
  2620  0429  0020               	movlb	0	; select bank0
  2621  042A  0857               	movf	?___fltol+1,w
  2622  042B  0021               	movlb	1	; select bank1
  2623  042C  00CD               	movwf	(_ADMin+1)^(0+128)
  2624  042D  0020               	movlb	0	; select bank0
  2625  042E  0856               	movf	?___fltol,w
  2626  042F  0021               	movlb	1	; select bank1
  2627  0430  00CC               	movwf	_ADMin^(0+128)
  2628                           
  2629                           ;User/newmain.c: 248:         ADMax = ADC_Val + (ADC_Val * 0.12);
  2630  0431  0020               	movlb	0	; select bank0
  2631  0432  0863               	movf	T500ms_Event@ADC_Val,w
  2632  0433  00F0               	movwf	___xxtofl@val
  2633  0434  0864               	movf	T500ms_Event@ADC_Val+1,w
  2634  0435  00F1               	movwf	___xxtofl@val+1
  2635  0436  01F2               	clrf	___xxtofl@val+2
  2636  0437  01F3               	clrf	___xxtofl@val+3
  2637  0438  3000               	movlw	0
  2638  0439  318D  25E3  3183   	fcall	___xxtofl
  2639  043C  0873               	movf	?___xxtofl+3,w
  2640  043D  0020               	movlb	0	; select bank0
  2641  043E  00C1               	movwf	___fladd@a+3
  2642  043F  0872               	movf	?___xxtofl+2,w
  2643  0440  00C0               	movwf	___fladd@a+2
  2644  0441  0871               	movf	?___xxtofl+1,w
  2645  0442  00BF               	movwf	___fladd@a+1
  2646  0443  0870               	movf	?___xxtofl,w
  2647  0444  00BE               	movwf	___fladd@a
  2648  0445  0863               	movf	T500ms_Event@ADC_Val,w
  2649  0446  00F0               	movwf	___xxtofl@val
  2650  0447  0864               	movf	T500ms_Event@ADC_Val+1,w
  2651  0448  00F1               	movwf	___xxtofl@val+1
  2652  0449  01F2               	clrf	___xxtofl@val+2
  2653  044A  01F3               	clrf	___xxtofl@val+3
  2654  044B  3000               	movlw	0
  2655  044C  318D  25E3  3183   	fcall	___xxtofl
  2656  044F  0873               	movf	?___xxtofl+3,w
  2657  0450  0020               	movlb	0	; select bank0
  2658  0451  00A7               	movwf	___flmul@a+3
  2659  0452  0872               	movf	?___xxtofl+2,w
  2660  0453  00A6               	movwf	___flmul@a+2
  2661  0454  0871               	movf	?___xxtofl+1,w
  2662  0455  00A5               	movwf	___flmul@a+1
  2663  0456  0870               	movf	?___xxtofl,w
  2664  0457  00A4               	movwf	___flmul@a
  2665  0458  303D               	movlw	61
  2666  0459  00A3               	movwf	___flmul@b+3
  2667  045A  30F5               	movlw	245
  2668  045B  00A2               	movwf	___flmul@b+2
  2669  045C  30C2               	movlw	194
  2670  045D  00A1               	movwf	___flmul@b+1
  2671  045E  308F               	movlw	143
  2672  045F  00A0               	movwf	___flmul@b
  2673  0460  3185  25A2  3183   	fcall	___flmul
  2674  0463  0020               	movlb	0	; select bank0
  2675  0464  0823               	movf	?___flmul+3,w
  2676  0465  00BD               	movwf	___fladd@b+3
  2677  0466  0822               	movf	?___flmul+2,w
  2678  0467  00BC               	movwf	___fladd@b+2
  2679  0468  0821               	movf	?___flmul+1,w
  2680  0469  00BB               	movwf	___fladd@b+1
  2681  046A  0820               	movf	?___flmul,w
  2682  046B  00BA               	movwf	___fladd@b
  2683  046C  3181  2197  3183   	fcall	___fladd
  2684  046F  0020               	movlb	0	; select bank0
  2685  0470  083D               	movf	?___fladd+3,w
  2686  0471  00D9               	movwf	___fltol@f1+3
  2687  0472  083C               	movf	?___fladd+2,w
  2688  0473  00D8               	movwf	___fltol@f1+2
  2689  0474  083B               	movf	?___fladd+1,w
  2690  0475  00D7               	movwf	___fltol@f1+1
  2691  0476  083A               	movf	?___fladd,w
  2692  0477  00D6               	movwf	___fltol@f1
  2693  0478  318C  24FF  3183   	fcall	___fltol
  2694  047B  0020               	movlb	0	; select bank0
  2695  047C  0857               	movf	?___fltol+1,w
  2696  047D  0021               	movlb	1	; select bank1
  2697  047E  00E7               	movwf	(_ADMax+1)^(0+128)
  2698  047F  0020               	movlb	0	; select bank0
  2699  0480  0856               	movf	?___fltol,w
  2700  0481  0021               	movlb	1	; select bank1
  2701  0482  00E6               	movwf	_ADMax^(0+128)
  2702                           
  2703                           ;User/newmain.c: 250:         ADMin2 = ADC_Val - (ADC_Val * 0.06);
  2704  0483  0020               	movlb	0	; select bank0
  2705  0484  0863               	movf	T500ms_Event@ADC_Val,w
  2706  0485  00F0               	movwf	___xxtofl@val
  2707  0486  0864               	movf	T500ms_Event@ADC_Val+1,w
  2708  0487  00F1               	movwf	___xxtofl@val+1
  2709  0488  01F2               	clrf	___xxtofl@val+2
  2710  0489  01F3               	clrf	___xxtofl@val+3
  2711  048A  3000               	movlw	0
  2712  048B  318D  25E3  3183   	fcall	___xxtofl
  2713  048E  0873               	movf	?___xxtofl+3,w
  2714  048F  0020               	movlb	0	; select bank0
  2715  0490  00D5               	movwf	___flsub@b+3
  2716  0491  0872               	movf	?___xxtofl+2,w
  2717  0492  00D4               	movwf	___flsub@b+2
  2718  0493  0871               	movf	?___xxtofl+1,w
  2719  0494  00D3               	movwf	___flsub@b+1
  2720  0495  0870               	movf	?___xxtofl,w
  2721  0496  00D2               	movwf	___flsub@b
  2722  0497  0863               	movf	T500ms_Event@ADC_Val,w
  2723  0498  00F0               	movwf	___xxtofl@val
  2724  0499  0864               	movf	T500ms_Event@ADC_Val+1,w
  2725  049A  00F1               	movwf	___xxtofl@val+1
  2726  049B  01F2               	clrf	___xxtofl@val+2
  2727  049C  01F3               	clrf	___xxtofl@val+3
  2728  049D  3000               	movlw	0
  2729  049E  318D  25E3  3183   	fcall	___xxtofl
  2730  04A1  0873               	movf	?___xxtofl+3,w
  2731  04A2  0020               	movlb	0	; select bank0
  2732  04A3  00A7               	movwf	___flmul@a+3
  2733  04A4  0872               	movf	?___xxtofl+2,w
  2734  04A5  00A6               	movwf	___flmul@a+2
  2735  04A6  0871               	movf	?___xxtofl+1,w
  2736  04A7  00A5               	movwf	___flmul@a+1
  2737  04A8  0870               	movf	?___xxtofl,w
  2738  04A9  00A4               	movwf	___flmul@a
  2739  04AA  303D               	movlw	61
  2740  04AB  00A3               	movwf	___flmul@b+3
  2741  04AC  3075               	movlw	117
  2742  04AD  00A2               	movwf	___flmul@b+2
  2743  04AE  30C2               	movlw	194
  2744  04AF  00A1               	movwf	___flmul@b+1
  2745  04B0  308F               	movlw	143
  2746  04B1  00A0               	movwf	___flmul@b
  2747  04B2  3185  25A2  3183   	fcall	___flmul
  2748  04B5  0020               	movlb	0	; select bank0
  2749  04B6  0823               	movf	?___flmul+3,w
  2750  04B7  00D1               	movwf	___flsub@a+3
  2751  04B8  0822               	movf	?___flmul+2,w
  2752  04B9  00D0               	movwf	___flsub@a+2
  2753  04BA  0821               	movf	?___flmul+1,w
  2754  04BB  00CF               	movwf	___flsub@a+1
  2755  04BC  0820               	movf	?___flmul,w
  2756  04BD  00CE               	movwf	___flsub@a
  2757  04BE  318A  22F9  3183   	fcall	___flsub
  2758  04C1  0020               	movlb	0	; select bank0
  2759  04C2  0851               	movf	?___flsub+3,w
  2760  04C3  00D9               	movwf	___fltol@f1+3
  2761  04C4  0850               	movf	?___flsub+2,w
  2762  04C5  00D8               	movwf	___fltol@f1+2
  2763  04C6  084F               	movf	?___flsub+1,w
  2764  04C7  00D7               	movwf	___fltol@f1+1
  2765  04C8  084E               	movf	?___flsub,w
  2766  04C9  00D6               	movwf	___fltol@f1
  2767  04CA  318C  24FF  3183   	fcall	___fltol
  2768  04CD  0020               	movlb	0	; select bank0
  2769  04CE  0857               	movf	?___fltol+1,w
  2770  04CF  0021               	movlb	1	; select bank1
  2771  04D0  00D5               	movwf	(_ADMin2+1)^(0+128)
  2772  04D1  0020               	movlb	0	; select bank0
  2773  04D2  0856               	movf	?___fltol,w
  2774  04D3  0021               	movlb	1	; select bank1
  2775  04D4  00D4               	movwf	_ADMin2^(0+128)
  2776                           
  2777                           ;User/newmain.c: 251:         ADMax2 = ADC_Val + (ADC_Val * 0.06);
  2778  04D5  0020               	movlb	0	; select bank0
  2779  04D6  0863               	movf	T500ms_Event@ADC_Val,w
  2780  04D7  00F0               	movwf	___xxtofl@val
  2781  04D8  0864               	movf	T500ms_Event@ADC_Val+1,w
  2782  04D9  00F1               	movwf	___xxtofl@val+1
  2783  04DA  01F2               	clrf	___xxtofl@val+2
  2784  04DB  01F3               	clrf	___xxtofl@val+3
  2785  04DC  3000               	movlw	0
  2786  04DD  318D  25E3  3183   	fcall	___xxtofl
  2787  04E0  0873               	movf	?___xxtofl+3,w
  2788  04E1  0020               	movlb	0	; select bank0
  2789  04E2  00C1               	movwf	___fladd@a+3
  2790  04E3  0872               	movf	?___xxtofl+2,w
  2791  04E4  00C0               	movwf	___fladd@a+2
  2792  04E5  0871               	movf	?___xxtofl+1,w
  2793  04E6  00BF               	movwf	___fladd@a+1
  2794  04E7  0870               	movf	?___xxtofl,w
  2795  04E8  00BE               	movwf	___fladd@a
  2796  04E9  0863               	movf	T500ms_Event@ADC_Val,w
  2797  04EA  00F0               	movwf	___xxtofl@val
  2798  04EB  0864               	movf	T500ms_Event@ADC_Val+1,w
  2799  04EC  00F1               	movwf	___xxtofl@val+1
  2800  04ED  01F2               	clrf	___xxtofl@val+2
  2801  04EE  01F3               	clrf	___xxtofl@val+3
  2802  04EF  3000               	movlw	0
  2803  04F0  318D  25E3  3183   	fcall	___xxtofl
  2804  04F3  0873               	movf	?___xxtofl+3,w
  2805  04F4  0020               	movlb	0	; select bank0
  2806  04F5  00A7               	movwf	___flmul@a+3
  2807  04F6  0872               	movf	?___xxtofl+2,w
  2808  04F7  00A6               	movwf	___flmul@a+2
  2809  04F8  0871               	movf	?___xxtofl+1,w
  2810  04F9  00A5               	movwf	___flmul@a+1
  2811  04FA  0870               	movf	?___xxtofl,w
  2812  04FB  00A4               	movwf	___flmul@a
  2813  04FC  303D               	movlw	61
  2814  04FD  00A3               	movwf	___flmul@b+3
  2815  04FE  3075               	movlw	117
  2816  04FF  00A2               	movwf	___flmul@b+2
  2817  0500  30C2               	movlw	194
  2818  0501  00A1               	movwf	___flmul@b+1
  2819  0502  308F               	movlw	143
  2820  0503  00A0               	movwf	___flmul@b
  2821  0504  3185  25A2  3183   	fcall	___flmul
  2822  0507  0020               	movlb	0	; select bank0
  2823  0508  0823               	movf	?___flmul+3,w
  2824  0509  00BD               	movwf	___fladd@b+3
  2825  050A  0822               	movf	?___flmul+2,w
  2826  050B  00BC               	movwf	___fladd@b+2
  2827  050C  0821               	movf	?___flmul+1,w
  2828  050D  00BB               	movwf	___fladd@b+1
  2829  050E  0820               	movf	?___flmul,w
  2830  050F  00BA               	movwf	___fladd@b
  2831  0510  3181  2197  3183   	fcall	___fladd
  2832  0513  0020               	movlb	0	; select bank0
  2833  0514  083D               	movf	?___fladd+3,w
  2834  0515  00D9               	movwf	___fltol@f1+3
  2835  0516  083C               	movf	?___fladd+2,w
  2836  0517  00D8               	movwf	___fltol@f1+2
  2837  0518  083B               	movf	?___fladd+1,w
  2838  0519  00D7               	movwf	___fltol@f1+1
  2839  051A  083A               	movf	?___fladd,w
  2840  051B  00D6               	movwf	___fltol@f1
  2841  051C  318C  24FF  3183   	fcall	___fltol
  2842  051F  0020               	movlb	0	; select bank0
  2843  0520  0857               	movf	?___fltol+1,w
  2844  0521  0021               	movlb	1	; select bank1
  2845  0522  00E9               	movwf	(_ADMax2+1)^(0+128)
  2846  0523  0020               	movlb	0	; select bank0
  2847  0524  0856               	movf	?___fltol,w
  2848  0525  0021               	movlb	1	; select bank1
  2849  0526  00E8               	movwf	_ADMax2^(0+128)
  2850                           
  2851                           ;User/newmain.c: 253:         Flg2.bits.ADMin_B1 = 1;
  2852  0527  0020               	movlb	0	; select bank0
  2853  0528  14EE               	bsf	_Flg2,1	;volatile
  2854  0529                     l3786:
  2855                           
  2856                           ;User/newmain.c: 257:     if (Flg.bits.PWON_B0 && (PORTAbits.RA3 == 0) && ((Flg2.Flg2Byt
      +                          e & 0x85) == 0))
  2857  0529  0020               	movlb	0	; select bank0
  2858  052A  186F               	btfsc	_Flg,0	;volatile
  2859  052B  198C               	btfsc	12,3	;volatile
  2860  052C  2D7E               	goto	l3832
  2861  052D  086E               	movf	_Flg2,w	;volatile
  2862  052E  3985               	andlw	133
  2863  052F  1D03               	btfss	3,2
  2864  0530  2D7E               	goto	l3832
  2865                           
  2866                           ;User/newmain.c: 258:     {;User/newmain.c: 259:         LED_Show();
  2867  0531  318E  2678  3183   	fcall	_LED_Show
  2868                           
  2869                           ;User/newmain.c: 261:         MinS_Cnt++;
  2870  0534  3001               	movlw	1
  2871  0535  0020               	movlb	0	; select bank0
  2872  0536  00E1               	movwf	??_T500ms_Event
  2873  0537  0861               	movf	??_T500ms_Event,w
  2874  0538  0021               	movlb	1	; select bank1
  2875  0539  07D9               	addwf	_MinS_Cnt^(0+128),f
  2876                           
  2877                           ;User/newmain.c: 262:         if (Flg2.bits.Run_B4 == 0)
  2878  053A  0020               	movlb	0	; select bank0
  2879  053B  1A6E               	btfsc	_Flg2,4	;volatile
  2880  053C  2D40               	goto	l3802
  2881                           
  2882                           ;User/newmain.c: 263:         {;User/newmain.c: 264:             Flg2.bits.Run_B4 = 1;
  2883  053D  166E               	bsf	_Flg2,4	;volatile
  2884                           
  2885                           ;User/newmain.c: 265:             ERRcnt = 0;
  2886  053E  0021               	movlb	1	; select bank1
  2887  053F  01D8               	clrf	_ERRcnt^(0+128)
  2888  0540                     l3802:
  2889                           
  2890                           ;User/newmain.c: 267:         if (LATCbits.LATC5 == 1 && LATCbits.LATC4 == 1)
  2891  0540  0022               	movlb	2	; select bank2
  2892  0541  1A8E               	btfsc	14,5	;volatile
  2893  0542  1E0E               	btfss	14,4	;volatile
  2894  0543  2D4C               	goto	l3810
  2895                           
  2896                           ;User/newmain.c: 268:         {;User/newmain.c: 269:             LATCbits.LATC5 = 0;
  2897  0544  128E               	bcf	14,5	;volatile
  2898                           
  2899                           ;User/newmain.c: 270:             LATCbits.LATC6 = 1;
  2900  0545  170E               	bsf	14,6	;volatile
  2901                           
  2902                           ;User/newmain.c: 271:             hze = 2;
  2903  0546  3002               	movlw	2
  2904  0547  0020               	movlb	0	; select bank0
  2905  0548  00E1               	movwf	??_T500ms_Event
  2906  0549  0861               	movf	??_T500ms_Event,w
  2907  054A  0021               	movlb	1	; select bank1
  2908  054B  00E5               	movwf	_hze^(0+128)
  2909  054C                     l3810:
  2910                           
  2911                           ;User/newmain.c: 273:         if (LATCbits.LATC5 == 0 && LATCbits.LATC4 == 1)
  2912  054C  0022               	movlb	2	; select bank2
  2913  054D  1E8E               	btfss	14,5	;volatile
  2914  054E  1E0E               	btfss	14,4	;volatile
  2915  054F  2D52               	goto	l3816
  2916                           
  2917                           ;User/newmain.c: 274:         {;User/newmain.c: 275:             hze = 2;
  2918  0550  3002               	movlw	2
  2919  0551  2D6E               	goto	L1
  2920  0552                     l3816:	
  2921                           ;User/newmain.c: 276:         }
  2922                           
  2923  0552  0020               	movlb	0	; select bank0
  2924  0553  01E2               	clrf	_T500ms_Event$1203
  2925  0554  0022               	movlb	2	; select bank2
  2926  0555  1A0E               	btfsc	14,4	;volatile
  2927  0556  2D5A               	goto	l3822
  2928  0557  0020               	movlb	0	; select bank0
  2929  0558  01E2               	clrf	_T500ms_Event$1203
  2930  0559  0AE2               	incf	_T500ms_Event$1203,f
  2931  055A                     l3822:
  2932  055A  0020               	movlb	0	; select bank0
  2933  055B  0862               	movf	_T500ms_Event$1203,w
  2934  055C  00E1               	movwf	??_T500ms_Event
  2935  055D  0EE1               	swapf	??_T500ms_Event,f
  2936  055E  0DE1               	rlf	??_T500ms_Event,f
  2937  055F  0022               	movlb	2	; select bank2
  2938  0560  080E               	movf	14,w	;volatile
  2939  0561  0020               	movlb	0	; select bank0
  2940  0562  0661               	xorwf	??_T500ms_Event,w
  2941  0563  39DF               	andlw	-33
  2942  0564  0661               	xorwf	??_T500ms_Event,w
  2943  0565  0022               	movlb	2	; select bank2
  2944  0566  008E               	movwf	14	;volatile
  2945  0567  0E0E               	swapf	14,w	;volatile
  2946  0568  0C89               	rrf	9,f
  2947  0569  3901               	andlw	1
  2948  056A  3A00               	xorlw	0
  2949  056B  1903               	skipnz
  2950  056C  2D73               	goto	l3826
  2951                           
  2952                           ;User/newmain.c: 278:         {;User/newmain.c: 279:             hze = 3;
  2953  056D  3003               	movlw	3
  2954  056E                     L1:
  2955  056E  0020               	movlb	0	; select bank0
  2956  056F  00E1               	movwf	??_T500ms_Event
  2957  0570  0861               	movf	??_T500ms_Event,w
  2958  0571  0021               	movlb	1	; select bank1
  2959  0572  00E5               	movwf	_hze^(0+128)
  2960  0573                     l3826:
  2961                           
  2962                           ;User/newmain.c: 281:         PWMON();
  2963  0573  3180  2005  3183   	fcall	_PWMON
  2964                           
  2965                           ;User/newmain.c: 282:         if (MinS_Cnt > 5)
  2966  0576  3006               	movlw	6
  2967  0577  0021               	movlb	1	; select bank1
  2968  0578  0259               	subwf	_MinS_Cnt^(0+128),w
  2969  0579  1C03               	skipc
  2970  057A  0008               	return
  2971                           
  2972                           ;User/newmain.c: 283:             MinS_Cnt = 1;
  2973  057B  01D9               	clrf	_MinS_Cnt^(0+128)
  2974  057C  0AD9               	incf	_MinS_Cnt^(0+128),f
  2975  057D  0008               	return
  2976  057E                     l3832:
  2977                           
  2978                           ;User/newmain.c: 286:     {;User/newmain.c: 287:         PWMOFF();
  2979  057E  318A  227C  3183   	fcall	_PWMOFF
  2980                           
  2981                           ;User/newmain.c: 288:         MinS_Cnt = 0;
  2982  0581  0021               	movlb	1	; select bank1
  2983  0582  01D9               	clrf	_MinS_Cnt^(0+128)
  2984                           
  2985                           ;User/newmain.c: 289:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbit
      +                          s.LATC0 = LATAbits.LATA2 = 1;
  2986  0583  0022               	movlb	2	; select bank2
  2987  0584  150C               	bsf	12,2	;volatile
  2988  0585  1D0C               	btfss	12,2	;volatile
  2989  0586  2D8A               	goto	u5300
  2990  0587  0022               	movlb	2	; select bank2
  2991  0588  140E               	bsf	14,0	;volatile
  2992  0589  2D8C               	goto	u5314
  2993  058A                     u5300:
  2994  058A  0022               	movlb	2	; select bank2
  2995  058B  100E               	bcf	14,0	;volatile
  2996  058C                     u5314:
  2997  058C  1C0E               	btfss	14,0	;volatile
  2998  058D  2D91               	goto	u5310
  2999  058E  0022               	movlb	2	; select bank2
  3000  058F  148E               	bsf	14,1	;volatile
  3001  0590  2D93               	goto	u5324
  3002  0591                     u5310:
  3003  0591  0022               	movlb	2	; select bank2
  3004  0592  108E               	bcf	14,1	;volatile
  3005  0593                     u5324:
  3006  0593  1C8E               	btfss	14,1	;volatile
  3007  0594  2D98               	goto	u5320
  3008  0595  0022               	movlb	2	; select bank2
  3009  0596  150E               	bsf	14,2	;volatile
  3010  0597  2D9A               	goto	u5334
  3011  0598                     u5320:
  3012  0598  0022               	movlb	2	; select bank2
  3013  0599  110E               	bcf	14,2	;volatile
  3014  059A                     u5334:
  3015  059A  1D0E               	btfss	14,2	;volatile
  3016  059B  2D9F               	goto	u5330
  3017  059C  0022               	movlb	2	; select bank2
  3018  059D  170D               	bsf	13,6	;volatile
  3019  059E  0008               	return
  3020  059F                     u5330:
  3021  059F  0022               	movlb	2	; select bank2
  3022  05A0  130D               	bcf	13,6	;volatile
  3023  05A1  0008               	return
  3024  05A2                     __end_of_T500ms_Event:
  3025                           
  3026                           	psect	text7
  3027  0DE3                     __ptext7:	
  3028 ;; *************** function ___xxtofl *****************
  3029 ;; Defined at:
  3030 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  sign            1    wreg     unsigned char 
  3033 ;;  val             4    0[COMMON] long 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  sign            1    8[COMMON] unsigned char 
  3036 ;;  arg             4   10[COMMON] unsigned long 
  3037 ;;  exp             1    9[COMMON] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  4    0[COMMON] unsigned char 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3047 ;;      Params:         4       0       0       0       0       0       0       0
  3048 ;;      Locals:         6       0       0       0       0       0       0       0
  3049 ;;      Temps:          4       0       0       0       0       0       0       0
  3050 ;;      Totals:        14       0       0       0       0       0       0       0
  3051 ;;Total ram usage:       14 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		_T500ms_Event
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function ___xxtofl
  3062  0DE3                     ___xxtofl:
  3063                           
  3064                           ;incstack = 0
  3065                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3066                           ;___xxtofl@sign stored from wreg
  3067  0DE3  00F8               	movwf	___xxtofl@sign
  3068  0DE4  0878               	movf	___xxtofl@sign,w
  3069  0DE5  1D03               	btfss	3,2
  3070  0DE6  1FF3               	btfss	___xxtofl@val+3,7
  3071  0DE7  2DF8               	goto	l2828
  3072  0DE8  0970               	comf	___xxtofl@val,w
  3073  0DE9  00FA               	movwf	___xxtofl@arg
  3074  0DEA  0971               	comf	___xxtofl@val+1,w
  3075  0DEB  00FB               	movwf	___xxtofl@arg+1
  3076  0DEC  0972               	comf	___xxtofl@val+2,w
  3077  0DED  00FC               	movwf	___xxtofl@arg+2
  3078  0DEE  0973               	comf	___xxtofl@val+3,w
  3079  0DEF  00FD               	movwf	___xxtofl@arg+3
  3080  0DF0  0AFA               	incf	___xxtofl@arg,f
  3081  0DF1  1903               	skipnz
  3082  0DF2  0AFB               	incf	___xxtofl@arg+1,f
  3083  0DF3  1903               	skipnz
  3084  0DF4  0AFC               	incf	___xxtofl@arg+2,f
  3085  0DF5  1903               	skipnz
  3086  0DF6  0AFD               	incf	___xxtofl@arg+3,f
  3087  0DF7  2E00               	goto	l1039
  3088  0DF8                     l2828:
  3089  0DF8  0873               	movf	___xxtofl@val+3,w
  3090  0DF9  00FD               	movwf	___xxtofl@arg+3
  3091  0DFA  0872               	movf	___xxtofl@val+2,w
  3092  0DFB  00FC               	movwf	___xxtofl@arg+2
  3093  0DFC  0871               	movf	___xxtofl@val+1,w
  3094  0DFD  00FB               	movwf	___xxtofl@arg+1
  3095  0DFE  0870               	movf	___xxtofl@val,w
  3096  0DFF  00FA               	movwf	___xxtofl@arg
  3097  0E00                     l1039:
  3098  0E00  0873               	movf	___xxtofl@val+3,w
  3099  0E01  0472               	iorwf	___xxtofl@val+2,w
  3100  0E02  0471               	iorwf	___xxtofl@val+1,w
  3101  0E03  0470               	iorwf	___xxtofl@val,w
  3102  0E04  1D03               	skipz
  3103  0E05  2E0F               	goto	l2834
  3104  0E06  3000               	movlw	0
  3105  0E07  00F3               	movwf	?___xxtofl+3
  3106  0E08  3000               	movlw	0
  3107  0E09  00F2               	movwf	?___xxtofl+2
  3108  0E0A  3000               	movlw	0
  3109  0E0B  00F1               	movwf	?___xxtofl+1
  3110  0E0C  3000               	movlw	0
  3111  0E0D  00F0               	movwf	?___xxtofl
  3112  0E0E  0008               	return
  3113  0E0F                     l2834:
  3114  0E0F  3096               	movlw	150
  3115  0E10  00F4               	movwf	??___xxtofl
  3116  0E11  0874               	movf	??___xxtofl,w
  3117  0E12  00F9               	movwf	___xxtofl@exp
  3118  0E13                     l2838:
  3119  0E13  30FE               	movlw	254
  3120  0E14  057D               	andwf	___xxtofl@arg+3,w
  3121  0E15  1903               	btfsc	3,2
  3122  0E16  2E36               	goto	l1045
  3123  0E17  3001               	movlw	1
  3124  0E18  00F4               	movwf	??___xxtofl
  3125  0E19  0874               	movf	??___xxtofl,w
  3126  0E1A  07F9               	addwf	___xxtofl@exp,f
  3127  0E1B  3001               	movlw	1
  3128  0E1C                     u3395:
  3129  0E1C  36FD               	lsrf	___xxtofl@arg+3,f
  3130  0E1D  0CFC               	rrf	___xxtofl@arg+2,f
  3131  0E1E  0CFB               	rrf	___xxtofl@arg+1,f
  3132  0E1F  0CFA               	rrf	___xxtofl@arg,f
  3133  0E20  0B89               	decfsz	9,f
  3134  0E21  2E1C               	goto	u3395
  3135  0E22  2E13               	goto	l2838
  3136  0E23                     l2840:
  3137  0E23  3001               	movlw	1
  3138  0E24  00F4               	movwf	??___xxtofl
  3139  0E25  0874               	movf	??___xxtofl,w
  3140  0E26  07F9               	addwf	___xxtofl@exp,f
  3141  0E27  3001               	movlw	1
  3142  0E28  07FA               	addwf	___xxtofl@arg,f
  3143  0E29  3000               	movlw	0
  3144  0E2A  3DFB               	addwfc	___xxtofl@arg+1,f
  3145  0E2B  3000               	movlw	0
  3146  0E2C  3DFC               	addwfc	___xxtofl@arg+2,f
  3147  0E2D  3000               	movlw	0
  3148  0E2E  3DFD               	addwfc	___xxtofl@arg+3,f
  3149  0E2F  3001               	movlw	1
  3150  0E30                     u3415:
  3151  0E30  36FD               	lsrf	___xxtofl@arg+3,f
  3152  0E31  0CFC               	rrf	___xxtofl@arg+2,f
  3153  0E32  0CFB               	rrf	___xxtofl@arg+1,f
  3154  0E33  0CFA               	rrf	___xxtofl@arg,f
  3155  0E34  0B89               	decfsz	9,f
  3156  0E35  2E30               	goto	u3415
  3157  0E36                     l1045:
  3158  0E36  30FF               	movlw	255
  3159  0E37  057D               	andwf	___xxtofl@arg+3,w
  3160  0E38  1903               	btfsc	3,2
  3161  0E39  2E48               	goto	l2848
  3162  0E3A  2E23               	goto	l2840
  3163  0E3B                     l2850:
  3164  0E3B  3002               	movlw	2
  3165  0E3C  0279               	subwf	___xxtofl@exp,w
  3166  0E3D  1C03               	btfss	3,0
  3167  0E3E  2E4A               	goto	l1052
  3168  0E3F  3001               	movlw	1
  3169  0E40  02F9               	subwf	___xxtofl@exp,f
  3170  0E41  3001               	movlw	1
  3171  0E42                     u3435:
  3172  0E42  35FA               	lslf	___xxtofl@arg,f
  3173  0E43  0DFB               	rlf	___xxtofl@arg+1,f
  3174  0E44  0DFC               	rlf	___xxtofl@arg+2,f
  3175  0E45  0DFD               	rlf	___xxtofl@arg+3,f
  3176  0E46  0B89               	decfsz	9,f
  3177  0E47  2E42               	goto	u3435
  3178  0E48                     l2848:
  3179  0E48  1FFC               	btfss	___xxtofl@arg+2,7
  3180  0E49  2E3B               	goto	l2850
  3181  0E4A                     l1052:
  3182  0E4A  1879               	btfsc	___xxtofl@exp,0
  3183  0E4B  2E54               	goto	l1053
  3184  0E4C  30FF               	movlw	255
  3185  0E4D  05FA               	andwf	___xxtofl@arg,f
  3186  0E4E  30FF               	movlw	255
  3187  0E4F  05FB               	andwf	___xxtofl@arg+1,f
  3188  0E50  307F               	movlw	127
  3189  0E51  05FC               	andwf	___xxtofl@arg+2,f
  3190  0E52  30FF               	movlw	255
  3191  0E53  05FD               	andwf	___xxtofl@arg+3,f
  3192  0E54                     l1053:
  3193  0E54  1003               	clrc
  3194  0E55  0CF9               	rrf	___xxtofl@exp,f
  3195  0E56  0879               	movf	___xxtofl@exp,w
  3196  0E57  00F4               	movwf	??___xxtofl
  3197  0E58  01F5               	clrf	??___xxtofl+1
  3198  0E59  01F6               	clrf	??___xxtofl+2
  3199  0E5A  01F7               	clrf	??___xxtofl+3
  3200  0E5B  3018               	movlw	24
  3201  0E5C                     u3475:
  3202  0E5C  35F4               	lslf	??___xxtofl,f
  3203  0E5D  0DF5               	rlf	??___xxtofl+1,f
  3204  0E5E  0DF6               	rlf	??___xxtofl+2,f
  3205  0E5F  0DF7               	rlf	??___xxtofl+3,f
  3206  0E60  0B89               	decfsz	9,f
  3207  0E61  2E5C               	goto	u3475
  3208  0E62  0874               	movf	??___xxtofl,w
  3209  0E63  04FA               	iorwf	___xxtofl@arg,f
  3210  0E64  0875               	movf	??___xxtofl+1,w
  3211  0E65  04FB               	iorwf	___xxtofl@arg+1,f
  3212  0E66  0876               	movf	??___xxtofl+2,w
  3213  0E67  04FC               	iorwf	___xxtofl@arg+2,f
  3214  0E68  0877               	movf	??___xxtofl+3,w
  3215  0E69  04FD               	iorwf	___xxtofl@arg+3,f
  3216  0E6A  0878               	movf	___xxtofl@sign,w
  3217  0E6B  1D03               	btfss	3,2
  3218  0E6C  1FF3               	btfss	___xxtofl@val+3,7
  3219  0E6D  2E6F               	goto	l2862
  3220  0E6E  17FD               	bsf	___xxtofl@arg+3,7
  3221  0E6F                     l2862:
  3222  0E6F  087D               	movf	___xxtofl@arg+3,w
  3223  0E70  00F3               	movwf	?___xxtofl+3
  3224  0E71  087C               	movf	___xxtofl@arg+2,w
  3225  0E72  00F2               	movwf	?___xxtofl+2
  3226  0E73  087B               	movf	___xxtofl@arg+1,w
  3227  0E74  00F1               	movwf	?___xxtofl+1
  3228  0E75  087A               	movf	___xxtofl@arg,w
  3229  0E76  00F0               	movwf	?___xxtofl
  3230  0E77  0008               	return
  3231  0E78                     __end_of___xxtofl:
  3232                           
  3233                           	psect	text8
  3234  0CFF                     __ptext8:	
  3235 ;; *************** function ___fltol *****************
  3236 ;; Defined at:
  3237 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  f1              4   54[BANK0 ] unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  exp1            1   64[BANK0 ] unsigned char 
  3242 ;;  sign1           1   63[BANK0 ] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  4   54[BANK0 ] long 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3252 ;;      Params:         0       4       0       0       0       0       0       0
  3253 ;;      Locals:         0       2       0       0       0       0       0       0
  3254 ;;      Temps:          0       5       0       0       0       0       0       0
  3255 ;;      Totals:         0      11       0       0       0       0       0       0
  3256 ;;Total ram usage:       11 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_T500ms_Event
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function ___fltol
  3267  0CFF                     ___fltol:
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3271  0CFF  1003               	clrc
  3272  0D00  0020               	movlb	0	; select bank0
  3273  0D01  0D58               	rlf	___fltol@f1+2,w
  3274  0D02  0D59               	rlf	___fltol@f1+3,w
  3275  0D03  00DA               	movwf	??___fltol
  3276  0D04  085A               	movf	??___fltol,w
  3277  0D05  00E0               	movwf	___fltol@exp1
  3278  0D06  0860               	movf	___fltol@exp1,w
  3279  0D07  1D03               	btfss	3,2
  3280  0D08  2D12               	goto	l2646
  3281  0D09                     l2642:
  3282  0D09  3000               	movlw	0
  3283  0D0A  00D9               	movwf	?___fltol+3
  3284  0D0B  3000               	movlw	0
  3285  0D0C  00D8               	movwf	?___fltol+2
  3286  0D0D  3000               	movlw	0
  3287  0D0E  00D7               	movwf	?___fltol+1
  3288  0D0F  3000               	movlw	0
  3289  0D10  00D6               	movwf	?___fltol
  3290  0D11  0008               	return
  3291  0D12                     l2646:
  3292  0D12  0856               	movf	___fltol@f1,w
  3293  0D13  00DA               	movwf	??___fltol
  3294  0D14  0857               	movf	___fltol@f1+1,w
  3295  0D15  00DB               	movwf	??___fltol+1
  3296  0D16  0858               	movf	___fltol@f1+2,w
  3297  0D17  00DC               	movwf	??___fltol+2
  3298  0D18  0859               	movf	___fltol@f1+3,w
  3299  0D19  00DD               	movwf	??___fltol+3
  3300  0D1A  301F               	movlw	31
  3301  0D1B                     u3015:
  3302  0D1B  36DD               	lsrf	??___fltol+3,f
  3303  0D1C  0CDC               	rrf	??___fltol+2,f
  3304  0D1D  0CDB               	rrf	??___fltol+1,f
  3305  0D1E  0CDA               	rrf	??___fltol,f
  3306  0D1F  0B89               	decfsz	9,f
  3307  0D20  2D1B               	goto	u3015
  3308  0D21  085A               	movf	??___fltol,w
  3309  0D22  00DE               	movwf	??___fltol+4
  3310  0D23  085E               	movf	??___fltol+4,w
  3311  0D24  00DF               	movwf	___fltol@sign1
  3312  0D25  17D8               	bsf	___fltol@f1+2,7
  3313  0D26  30FF               	movlw	255
  3314  0D27  05D6               	andwf	___fltol@f1,f
  3315  0D28  30FF               	movlw	255
  3316  0D29  05D7               	andwf	___fltol@f1+1,f
  3317  0D2A  30FF               	movlw	255
  3318  0D2B  05D8               	andwf	___fltol@f1+2,f
  3319  0D2C  3000               	movlw	0
  3320  0D2D  05D9               	andwf	___fltol@f1+3,f
  3321  0D2E  3096               	movlw	150
  3322  0D2F  02E0               	subwf	___fltol@exp1,f
  3323  0D30  1FE0               	btfss	___fltol@exp1,7
  3324  0D31  2D45               	goto	l2664
  3325  0D32  0860               	movf	___fltol@exp1,w
  3326  0D33  3A80               	xorlw	128
  3327  0D34  3E97               	addlw	151
  3328  0D35  1C03               	btfss	3,0
  3329  0D36  2D09               	goto	l2642
  3330  0D37                     l2662:
  3331  0D37  3001               	movlw	1
  3332  0D38                     u3045:
  3333  0D38  36D9               	lsrf	___fltol@f1+3,f
  3334  0D39  0CD8               	rrf	___fltol@f1+2,f
  3335  0D3A  0CD7               	rrf	___fltol@f1+1,f
  3336  0D3B  0CD6               	rrf	___fltol@f1,f
  3337  0D3C  0B89               	decfsz	9,f
  3338  0D3D  2D38               	goto	u3045
  3339  0D3E  3001               	movlw	1
  3340  0D3F  00DA               	movwf	??___fltol
  3341  0D40  085A               	movf	??___fltol,w
  3342  0D41  07E0               	addwf	___fltol@exp1,f
  3343  0D42  1903               	btfsc	3,2
  3344  0D43  2D56               	goto	l2672
  3345  0D44  2D37               	goto	l2662
  3346  0D45                     l2664:
  3347  0D45  3020               	movlw	32
  3348  0D46  0260               	subwf	___fltol@exp1,w
  3349  0D47  1803               	btfsc	3,0
  3350  0D48  2D09               	goto	l2642
  3351  0D49                     l799:
  3352  0D49  0860               	movf	___fltol@exp1,w
  3353  0D4A  1903               	btfsc	3,2
  3354  0D4B  2D56               	goto	l2672
  3355  0D4C  3001               	movlw	1
  3356  0D4D                     u3075:
  3357  0D4D  35D6               	lslf	___fltol@f1,f
  3358  0D4E  0DD7               	rlf	___fltol@f1+1,f
  3359  0D4F  0DD8               	rlf	___fltol@f1+2,f
  3360  0D50  0DD9               	rlf	___fltol@f1+3,f
  3361  0D51  0B89               	decfsz	9,f
  3362  0D52  2D4D               	goto	u3075
  3363  0D53  3001               	movlw	1
  3364  0D54  02E0               	subwf	___fltol@exp1,f
  3365  0D55  2D49               	goto	l799
  3366  0D56                     l2672:
  3367  0D56  085F               	movf	___fltol@sign1,w
  3368  0D57  1903               	btfsc	3,2
  3369  0D58  0008               	return
  3370  0D59  09D6               	comf	___fltol@f1,f
  3371  0D5A  09D7               	comf	___fltol@f1+1,f
  3372  0D5B  09D8               	comf	___fltol@f1+2,f
  3373  0D5C  09D9               	comf	___fltol@f1+3,f
  3374  0D5D  0AD6               	incf	___fltol@f1,f
  3375  0D5E  1903               	skipnz
  3376  0D5F  0AD7               	incf	___fltol@f1+1,f
  3377  0D60  1903               	skipnz
  3378  0D61  0AD8               	incf	___fltol@f1+2,f
  3379  0D62  1903               	skipnz
  3380  0D63  0AD9               	incf	___fltol@f1+3,f
  3381  0D64  0008               	return
  3382  0D65                     __end_of___fltol:
  3383                           
  3384                           	psect	text9
  3385  0AF9                     __ptext9:	
  3386 ;; *************** function ___flsub *****************
  3387 ;; Defined at:
  3388 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  a               4   46[BANK0 ] long 
  3391 ;;  b               4   50[BANK0 ] long 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4   46[BANK0 ] long 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3403 ;;      Params:         0       8       0       0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0
  3406 ;;      Totals:         0       8       0       0       0       0       0       0
  3407 ;;Total ram usage:        8 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 1
  3410 ;; This function calls:
  3411 ;;		___fladd
  3412 ;; This function is called by:
  3413 ;;		_T500ms_Event
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           
  3418                           ;psect for function ___flsub
  3419  0AF9                     ___flsub:
  3420                           
  3421                           ;incstack = 0
  3422                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  3423  0AF9  3080               	movlw	128
  3424  0AFA  0020               	movlb	0	; select bank0
  3425  0AFB  06D1               	xorwf	___flsub@a+3,f
  3426  0AFC  0855               	movf	___flsub@b+3,w
  3427  0AFD  00BD               	movwf	___fladd@b+3
  3428  0AFE  0854               	movf	___flsub@b+2,w
  3429  0AFF  00BC               	movwf	___fladd@b+2
  3430  0B00  0853               	movf	___flsub@b+1,w
  3431  0B01  00BB               	movwf	___fladd@b+1
  3432  0B02  0852               	movf	___flsub@b,w
  3433  0B03  00BA               	movwf	___fladd@b
  3434  0B04  0851               	movf	___flsub@a+3,w
  3435  0B05  00C1               	movwf	___fladd@a+3
  3436  0B06  0850               	movf	___flsub@a+2,w
  3437  0B07  00C0               	movwf	___fladd@a+2
  3438  0B08  084F               	movf	___flsub@a+1,w
  3439  0B09  00BF               	movwf	___fladd@a+1
  3440  0B0A  084E               	movf	___flsub@a,w
  3441  0B0B  00BE               	movwf	___fladd@a
  3442  0B0C  3181  2197         	fcall	___fladd
  3443  0B0E  0020               	movlb	0	; select bank0
  3444  0B0F  083D               	movf	?___fladd+3,w
  3445  0B10  00D1               	movwf	?___flsub+3
  3446  0B11  083C               	movf	?___fladd+2,w
  3447  0B12  00D0               	movwf	?___flsub+2
  3448  0B13  083B               	movf	?___fladd+1,w
  3449  0B14  00CF               	movwf	?___flsub+1
  3450  0B15  083A               	movf	?___fladd,w
  3451  0B16  00CE               	movwf	?___flsub
  3452  0B17  0008               	return
  3453  0B18                     __end_of___flsub:
  3454                           
  3455                           	psect	text10
  3456  0197                     __ptext10:	
  3457 ;; *************** function ___fladd *****************
  3458 ;; Defined at:
  3459 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  b               4   26[BANK0 ] long 
  3462 ;;  a               4   30[BANK0 ] long 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;  grs             1   45[BANK0 ] unsigned char 
  3465 ;;  bexp            1   44[BANK0 ] unsigned char 
  3466 ;;  aexp            1   43[BANK0 ] unsigned char 
  3467 ;;  signs           1   42[BANK0 ] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  4   26[BANK0 ] unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3477 ;;      Params:         0       8       0       0       0       0       0       0
  3478 ;;      Locals:         0       4       0       0       0       0       0       0
  3479 ;;      Temps:          0       8       0       0       0       0       0       0
  3480 ;;      Totals:         0      20       0       0       0       0       0       0
  3481 ;;Total ram usage:       20 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_T500ms_Event
  3487 ;;		___flsub
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function ___fladd
  3493  0197                     ___fladd:
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3497  0197  0020               	movlb	0	; select bank0
  3498  0198  083D               	movf	___fladd@b+3,w
  3499  0199  3980               	andlw	128
  3500  019A  00C2               	movwf	??___fladd
  3501  019B  0842               	movf	??___fladd,w
  3502  019C  00CA               	movwf	___fladd@signs
  3503  019D  353D               	lslf	___fladd@b+3,w
  3504  019E  00C2               	movwf	??___fladd
  3505  019F  0842               	movf	??___fladd,w
  3506  01A0  00CC               	movwf	___fladd@bexp
  3507  01A1  1BBC               	btfsc	___fladd@b+2,7
  3508  01A2  144C               	bsf	___fladd@bexp,0
  3509  01A3  084C               	movf	___fladd@bexp,w
  3510  01A4  1903               	btfsc	3,2
  3511  01A5  29B4               	goto	l2284
  3512  01A6  0A4C               	incf	___fladd@bexp,w
  3513  01A7  1D03               	btfss	3,2
  3514  01A8  29B1               	goto	l2280
  3515  01A9  3000               	movlw	0
  3516  01AA  00BD               	movwf	___fladd@b+3
  3517  01AB  3000               	movlw	0
  3518  01AC  00BC               	movwf	___fladd@b+2
  3519  01AD  3000               	movlw	0
  3520  01AE  00BB               	movwf	___fladd@b+1
  3521  01AF  3000               	movlw	0
  3522  01B0  00BA               	movwf	___fladd@b
  3523  01B1                     l2280:
  3524  01B1  17BC               	bsf	___fladd@b+2,7
  3525  01B2  01BD               	clrf	___fladd@b+3
  3526  01B3  29BC               	goto	l2286
  3527  01B4                     l2284:
  3528  01B4  3000               	movlw	0
  3529  01B5  00BD               	movwf	___fladd@b+3
  3530  01B6  3000               	movlw	0
  3531  01B7  00BC               	movwf	___fladd@b+2
  3532  01B8  3000               	movlw	0
  3533  01B9  00BB               	movwf	___fladd@b+1
  3534  01BA  3000               	movlw	0
  3535  01BB  00BA               	movwf	___fladd@b
  3536  01BC                     l2286:
  3537  01BC  0841               	movf	___fladd@a+3,w
  3538  01BD  3980               	andlw	128
  3539  01BE  00C2               	movwf	??___fladd
  3540  01BF  0842               	movf	??___fladd,w
  3541  01C0  00CB               	movwf	___fladd@aexp
  3542  01C1  084B               	movf	___fladd@aexp,w
  3543  01C2  064A               	xorwf	___fladd@signs,w
  3544  01C3  1D03               	btfss	3,2
  3545  01C4  174A               	bsf	___fladd@signs,6
  3546  01C5  3541               	lslf	___fladd@a+3,w
  3547  01C6  00C2               	movwf	??___fladd
  3548  01C7  0842               	movf	??___fladd,w
  3549  01C8  00CB               	movwf	___fladd@aexp
  3550  01C9  1BC0               	btfsc	___fladd@a+2,7
  3551  01CA  144B               	bsf	___fladd@aexp,0
  3552  01CB  084B               	movf	___fladd@aexp,w
  3553  01CC  1903               	btfsc	3,2
  3554  01CD  29DC               	goto	l2308
  3555  01CE  0A4B               	incf	___fladd@aexp,w
  3556  01CF  1D03               	btfss	3,2
  3557  01D0  29D9               	goto	l2304
  3558  01D1  3000               	movlw	0
  3559  01D2  00C1               	movwf	___fladd@a+3
  3560  01D3  3000               	movlw	0
  3561  01D4  00C0               	movwf	___fladd@a+2
  3562  01D5  3000               	movlw	0
  3563  01D6  00BF               	movwf	___fladd@a+1
  3564  01D7  3000               	movlw	0
  3565  01D8  00BE               	movwf	___fladd@a
  3566  01D9                     l2304:
  3567  01D9  17C0               	bsf	___fladd@a+2,7
  3568  01DA  01C1               	clrf	___fladd@a+3
  3569  01DB  29E4               	goto	l899
  3570  01DC                     l2308:
  3571  01DC  3000               	movlw	0
  3572  01DD  00C1               	movwf	___fladd@a+3
  3573  01DE  3000               	movlw	0
  3574  01DF  00C0               	movwf	___fladd@a+2
  3575  01E0  3000               	movlw	0
  3576  01E1  00BF               	movwf	___fladd@a+1
  3577  01E2  3000               	movlw	0
  3578  01E3  00BE               	movwf	___fladd@a
  3579  01E4                     l899:
  3580  01E4  084C               	movf	___fladd@bexp,w
  3581  01E5  024B               	subwf	___fladd@aexp,w
  3582  01E6  1803               	skipnc
  3583  01E7  2A2A               	goto	l2344
  3584  01E8  1F4A               	btfss	___fladd@signs,6
  3585  01E9  29EE               	goto	l2314
  3586  01EA  3080               	movlw	128
  3587  01EB  00C2               	movwf	??___fladd
  3588  01EC  0842               	movf	??___fladd,w
  3589  01ED  06CA               	xorwf	___fladd@signs,f
  3590  01EE                     l2314:
  3591  01EE  084C               	movf	___fladd@bexp,w
  3592  01EF  00C2               	movwf	??___fladd
  3593  01F0  0842               	movf	??___fladd,w
  3594  01F1  00CD               	movwf	___fladd@grs
  3595  01F2  084B               	movf	___fladd@aexp,w
  3596  01F3  00C2               	movwf	??___fladd
  3597  01F4  0842               	movf	??___fladd,w
  3598  01F5  00CC               	movwf	___fladd@bexp
  3599  01F6  084D               	movf	___fladd@grs,w
  3600  01F7  00C2               	movwf	??___fladd
  3601  01F8  0842               	movf	??___fladd,w
  3602  01F9  00CB               	movwf	___fladd@aexp
  3603  01FA  083A               	movf	___fladd@b,w
  3604  01FB  00C2               	movwf	??___fladd
  3605  01FC  0842               	movf	??___fladd,w
  3606  01FD  00CD               	movwf	___fladd@grs
  3607  01FE  083E               	movf	___fladd@a,w
  3608  01FF  00C2               	movwf	??___fladd
  3609  0200  0842               	movf	??___fladd,w
  3610  0201  00BA               	movwf	___fladd@b
  3611  0202  084D               	movf	___fladd@grs,w
  3612  0203  00C2               	movwf	??___fladd
  3613  0204  0842               	movf	??___fladd,w
  3614  0205  00BE               	movwf	___fladd@a
  3615  0206  083B               	movf	___fladd@b+1,w
  3616  0207  00C2               	movwf	??___fladd
  3617  0208  0842               	movf	??___fladd,w
  3618  0209  00CD               	movwf	___fladd@grs
  3619  020A  083F               	movf	___fladd@a+1,w
  3620  020B  00C2               	movwf	??___fladd
  3621  020C  0842               	movf	??___fladd,w
  3622  020D  00BB               	movwf	___fladd@b+1
  3623  020E  084D               	movf	___fladd@grs,w
  3624  020F  00C2               	movwf	??___fladd
  3625  0210  0842               	movf	??___fladd,w
  3626  0211  00BF               	movwf	___fladd@a+1
  3627  0212  083C               	movf	___fladd@b+2,w
  3628  0213  00C2               	movwf	??___fladd
  3629  0214  0842               	movf	??___fladd,w
  3630  0215  00CD               	movwf	___fladd@grs
  3631  0216  0840               	movf	___fladd@a+2,w
  3632  0217  00C2               	movwf	??___fladd
  3633  0218  0842               	movf	??___fladd,w
  3634  0219  00BC               	movwf	___fladd@b+2
  3635  021A  084D               	movf	___fladd@grs,w
  3636  021B  00C2               	movwf	??___fladd
  3637  021C  0842               	movf	??___fladd,w
  3638  021D  00C0               	movwf	___fladd@a+2
  3639  021E  083D               	movf	___fladd@b+3,w
  3640  021F  00C2               	movwf	??___fladd
  3641  0220  0842               	movf	??___fladd,w
  3642  0221  00CD               	movwf	___fladd@grs
  3643  0222  0841               	movf	___fladd@a+3,w
  3644  0223  00C2               	movwf	??___fladd
  3645  0224  0842               	movf	??___fladd,w
  3646  0225  00BD               	movwf	___fladd@b+3
  3647  0226  084D               	movf	___fladd@grs,w
  3648  0227  00C2               	movwf	??___fladd
  3649  0228  0842               	movf	??___fladd,w
  3650  0229  00C1               	movwf	___fladd@a+3
  3651  022A                     l2344:
  3652  022A  01CD               	clrf	___fladd@grs
  3653  022B  084B               	movf	___fladd@aexp,w
  3654  022C  00C2               	movwf	??___fladd
  3655  022D  01C3               	clrf	??___fladd+1
  3656  022E  0843               	movf	??___fladd+1,w
  3657  022F  00C5               	movwf	??___fladd+3
  3658  0230  084C               	movf	___fladd@bexp,w
  3659  0231  0242               	subwf	??___fladd,w
  3660  0232  00C4               	movwf	??___fladd+2
  3661  0233  1C03               	skipc
  3662  0234  03C5               	decf	??___fladd+3,f
  3663  0235  0845               	movf	??___fladd+3,w
  3664  0236  3A80               	xorlw	128
  3665  0237  00C6               	movwf	??___fladd+4
  3666  0238  3080               	movlw	128
  3667  0239  0246               	subwf	??___fladd+4,w
  3668  023A  1D03               	skipz
  3669  023B  2A3E               	goto	u2235
  3670  023C  301A               	movlw	26
  3671  023D  0244               	subwf	??___fladd+2,w
  3672  023E                     u2235:
  3673  023E  1C03               	skipc
  3674  023F  2A72               	goto	l2362
  3675  0240  0020               	movlb	0	; select bank0
  3676  0241  083D               	movf	___fladd@b+3,w
  3677  0242  043C               	iorwf	___fladd@b+2,w
  3678  0243  043B               	iorwf	___fladd@b+1,w
  3679  0244  043A               	iorwf	___fladd@b,w
  3680  0245  1903               	btfsc	3,2
  3681  0246  2A49               	goto	u2240
  3682  0247  3001               	movlw	1
  3683  0248  2A4A               	goto	u2250
  3684  0249                     u2240:
  3685  0249  3000               	movlw	0
  3686  024A                     u2250:
  3687  024A  00C2               	movwf	??___fladd
  3688  024B  0842               	movf	??___fladd,w
  3689  024C  00CD               	movwf	___fladd@grs
  3690  024D  3000               	movlw	0
  3691  024E  00BD               	movwf	___fladd@b+3
  3692  024F  3000               	movlw	0
  3693  0250  00BC               	movwf	___fladd@b+2
  3694  0251  3000               	movlw	0
  3695  0252  00BB               	movwf	___fladd@b+1
  3696  0253  3000               	movlw	0
  3697  0254  00BA               	movwf	___fladd@b
  3698  0255  084B               	movf	___fladd@aexp,w
  3699  0256  00C2               	movwf	??___fladd
  3700  0257  0842               	movf	??___fladd,w
  3701  0258  00CC               	movwf	___fladd@bexp
  3702  0259  2A77               	goto	l903
  3703  025A                     l905:
  3704  025A  1C4D               	btfss	___fladd@grs,0
  3705  025B  2A62               	goto	l2352
  3706  025C  364D               	lsrf	___fladd@grs,w
  3707  025D  3801               	iorlw	1
  3708  025E  00C2               	movwf	??___fladd
  3709  025F  0842               	movf	??___fladd,w
  3710  0260  00CD               	movwf	___fladd@grs
  3711  0261  2A64               	goto	l2354
  3712  0262                     l2352:
  3713  0262  1003               	clrc
  3714  0263  0CCD               	rrf	___fladd@grs,f
  3715  0264                     l2354:
  3716  0264  183A               	btfsc	___fladd@b,0
  3717  0265  17CD               	bsf	___fladd@grs,7
  3718  0266  3001               	movlw	1
  3719  0267  00C2               	movwf	??___fladd
  3720  0268                     u2285:
  3721  0268  37BD               	asrf	___fladd@b+3,f
  3722  0269  0CBC               	rrf	___fladd@b+2,f
  3723  026A  0CBB               	rrf	___fladd@b+1,f
  3724  026B  0CBA               	rrf	___fladd@b,f
  3725  026C  0BC2               	decfsz	??___fladd& (0+127),f
  3726  026D  2A68               	goto	u2285
  3727  026E  3001               	movlw	1
  3728  026F  00C2               	movwf	??___fladd
  3729  0270  0842               	movf	??___fladd,w
  3730  0271  07CC               	addwf	___fladd@bexp,f
  3731  0272                     l2362:
  3732  0272  0020               	movlb	0	; select bank0
  3733  0273  084B               	movf	___fladd@aexp,w
  3734  0274  024C               	subwf	___fladd@bexp,w
  3735  0275  1C03               	skipc
  3736  0276  2A5A               	goto	l905
  3737  0277                     l903:
  3738  0277  1B4A               	btfsc	___fladd@signs,6
  3739  0278  2AA8               	goto	l2388
  3740  0279  084C               	movf	___fladd@bexp,w
  3741  027A  1D03               	btfss	3,2
  3742  027B  2A85               	goto	l2370
  3743  027C  3000               	movlw	0
  3744  027D  00BD               	movwf	?___fladd+3
  3745  027E  3000               	movlw	0
  3746  027F  00BC               	movwf	?___fladd+2
  3747  0280  3000               	movlw	0
  3748  0281  00BB               	movwf	?___fladd+1
  3749  0282  3000               	movlw	0
  3750  0283  00BA               	movwf	?___fladd
  3751  0284  0008               	return
  3752  0285                     l2370:
  3753  0285  083E               	movf	___fladd@a,w
  3754  0286  07BA               	addwf	___fladd@b,f
  3755  0287  083F               	movf	___fladd@a+1,w
  3756  0288  3DBB               	addwfc	___fladd@b+1,f
  3757  0289  0840               	movf	___fladd@a+2,w
  3758  028A  3DBC               	addwfc	___fladd@b+2,f
  3759  028B  0841               	movf	___fladd@a+3,w
  3760  028C  3DBD               	addwfc	___fladd@b+3,f
  3761  028D  1C3D               	btfss	___fladd@b+3,0
  3762  028E  2B22               	goto	l2422
  3763  028F  1C4D               	btfss	___fladd@grs,0
  3764  0290  2A97               	goto	l2378
  3765  0291  364D               	lsrf	___fladd@grs,w
  3766  0292  3801               	iorlw	1
  3767  0293  00C2               	movwf	??___fladd
  3768  0294  0842               	movf	??___fladd,w
  3769  0295  00CD               	movwf	___fladd@grs
  3770  0296  2A99               	goto	l2380
  3771  0297                     l2378:
  3772  0297  1003               	clrc
  3773  0298  0CCD               	rrf	___fladd@grs,f
  3774  0299                     l2380:
  3775  0299  183A               	btfsc	___fladd@b,0
  3776  029A  17CD               	bsf	___fladd@grs,7
  3777  029B  3001               	movlw	1
  3778  029C  00C2               	movwf	??___fladd
  3779  029D                     u2355:
  3780  029D  37BD               	asrf	___fladd@b+3,f
  3781  029E  0CBC               	rrf	___fladd@b+2,f
  3782  029F  0CBB               	rrf	___fladd@b+1,f
  3783  02A0  0CBA               	rrf	___fladd@b,f
  3784  02A1  0BC2               	decfsz	??___fladd& (0+127),f
  3785  02A2  2A9D               	goto	u2355
  3786  02A3  3001               	movlw	1
  3787  02A4  00C2               	movwf	??___fladd
  3788  02A5  0842               	movf	??___fladd,w
  3789  02A6  07CC               	addwf	___fladd@bexp,f
  3790  02A7  2B22               	goto	l2422
  3791  02A8                     l2388:
  3792  02A8  083D               	movf	___fladd@b+3,w
  3793  02A9  3A80               	xorlw	128
  3794  02AA  00C2               	movwf	??___fladd
  3795  02AB  0841               	movf	___fladd@a+3,w
  3796  02AC  3A80               	xorlw	128
  3797  02AD  0242               	subwf	??___fladd,w
  3798  02AE  1D03               	skipz
  3799  02AF  2ABA               	goto	u2363
  3800  02B0  0840               	movf	___fladd@a+2,w
  3801  02B1  023C               	subwf	___fladd@b+2,w
  3802  02B2  1D03               	skipz
  3803  02B3  2ABA               	goto	u2363
  3804  02B4  083F               	movf	___fladd@a+1,w
  3805  02B5  023B               	subwf	___fladd@b+1,w
  3806  02B6  1D03               	skipz
  3807  02B7  2ABA               	goto	u2363
  3808  02B8  083E               	movf	___fladd@a,w
  3809  02B9  023A               	subwf	___fladd@b,w
  3810  02BA                     u2363:
  3811  02BA  1803               	skipnc
  3812  02BB  2AF2               	goto	l2398
  3813  02BC  30FF               	movlw	255
  3814  02BD  00C2               	movwf	??___fladd
  3815  02BE  30FF               	movlw	255
  3816  02BF  00C3               	movwf	??___fladd+1
  3817  02C0  30FF               	movlw	255
  3818  02C1  00C4               	movwf	??___fladd+2
  3819  02C2  30FF               	movlw	255
  3820  02C3  00C5               	movwf	??___fladd+3
  3821  02C4  083A               	movf	___fladd@b,w
  3822  02C5  023E               	subwf	___fladd@a,w
  3823  02C6  00C6               	movwf	??___fladd+4
  3824  02C7  083B               	movf	___fladd@b+1,w
  3825  02C8  3B3F               	subwfb	___fladd@a+1,w
  3826  02C9  00C7               	movwf	??___fladd+5
  3827  02CA  083C               	movf	___fladd@b+2,w
  3828  02CB  3B40               	subwfb	___fladd@a+2,w
  3829  02CC  00C8               	movwf	??___fladd+6
  3830  02CD  083D               	movf	___fladd@b+3,w
  3831  02CE  3B41               	subwfb	___fladd@a+3,w
  3832  02CF  00C9               	movwf	??___fladd+7
  3833  02D0  0846               	movf	??___fladd+4,w
  3834  02D1  07C2               	addwf	??___fladd,f
  3835  02D2  0847               	movf	??___fladd+5,w
  3836  02D3  3DC3               	addwfc	??___fladd+1,f
  3837  02D4  0848               	movf	??___fladd+6,w
  3838  02D5  3DC4               	addwfc	??___fladd+2,f
  3839  02D6  0849               	movf	??___fladd+7,w
  3840  02D7  3DC5               	addwfc	??___fladd+3,f
  3841  02D8  0845               	movf	??___fladd+3,w
  3842  02D9  00BD               	movwf	___fladd@b+3
  3843  02DA  0844               	movf	??___fladd+2,w
  3844  02DB  00BC               	movwf	___fladd@b+2
  3845  02DC  0843               	movf	??___fladd+1,w
  3846  02DD  00BB               	movwf	___fladd@b+1
  3847  02DE  0842               	movf	??___fladd,w
  3848  02DF  00BA               	movwf	___fladd@b
  3849  02E0  3080               	movlw	128
  3850  02E1  00C2               	movwf	??___fladd
  3851  02E2  0842               	movf	??___fladd,w
  3852  02E3  06CA               	xorwf	___fladd@signs,f
  3853  02E4  09CD               	comf	___fladd@grs,f
  3854  02E5  0ACD               	incf	___fladd@grs,f
  3855  02E6  084D               	movf	___fladd@grs,w
  3856  02E7  1D03               	btfss	3,2
  3857  02E8  2AFA               	goto	l920
  3858  02E9  3001               	movlw	1
  3859  02EA  07BA               	addwf	___fladd@b,f
  3860  02EB  3000               	movlw	0
  3861  02EC  3DBB               	addwfc	___fladd@b+1,f
  3862  02ED  3000               	movlw	0
  3863  02EE  3DBC               	addwfc	___fladd@b+2,f
  3864  02EF  3000               	movlw	0
  3865  02F0  3DBD               	addwfc	___fladd@b+3,f
  3866  02F1  2AFA               	goto	l920
  3867  02F2                     l2398:
  3868  02F2  083E               	movf	___fladd@a,w
  3869  02F3  02BA               	subwf	___fladd@b,f
  3870  02F4  083F               	movf	___fladd@a+1,w
  3871  02F5  3BBB               	subwfb	___fladd@b+1,f
  3872  02F6  0840               	movf	___fladd@a+2,w
  3873  02F7  3BBC               	subwfb	___fladd@b+2,f
  3874  02F8  0841               	movf	___fladd@a+3,w
  3875  02F9  3BBD               	subwfb	___fladd@b+3,f
  3876  02FA                     l920:
  3877  02FA  083D               	movf	___fladd@b+3,w
  3878  02FB  043C               	iorwf	___fladd@b+2,w
  3879  02FC  043B               	iorwf	___fladd@b+1,w
  3880  02FD  043A               	iorwf	___fladd@b,w
  3881  02FE  1D03               	skipz
  3882  02FF  2B20               	goto	l2420
  3883  0300  084D               	movf	___fladd@grs,w
  3884  0301  1D03               	btfss	3,2
  3885  0302  2B20               	goto	l2420
  3886  0303  3000               	movlw	0
  3887  0304  00BD               	movwf	?___fladd+3
  3888  0305  3000               	movlw	0
  3889  0306  00BC               	movwf	?___fladd+2
  3890  0307  3000               	movlw	0
  3891  0308  00BB               	movwf	?___fladd+1
  3892  0309  3000               	movlw	0
  3893  030A  00BA               	movwf	?___fladd
  3894  030B  0008               	return
  3895  030C                     l2406:
  3896  030C  3001               	movlw	1
  3897  030D                     u2405:
  3898  030D  35BA               	lslf	___fladd@b,f
  3899  030E  0DBB               	rlf	___fladd@b+1,f
  3900  030F  0DBC               	rlf	___fladd@b+2,f
  3901  0310  0DBD               	rlf	___fladd@b+3,f
  3902  0311  0B89               	decfsz	9,f
  3903  0312  2B0D               	goto	u2405
  3904  0313  1BCD               	btfsc	___fladd@grs,7
  3905  0314  143A               	bsf	___fladd@b,0
  3906  0315  1C4D               	btfss	___fladd@grs,0
  3907  0316  2B19               	goto	l2414
  3908  0317  1403               	setc
  3909  0318  2B1A               	goto	L2
  3910  0319                     l2414:
  3911  0319  1003               	clrc
  3912  031A                     L2:
  3913  031A  0DCD               	rlf	___fladd@grs,f
  3914  031B  084C               	movf	___fladd@bexp,w
  3915  031C  1903               	btfsc	3,2
  3916  031D  2B20               	goto	l2420
  3917  031E  3001               	movlw	1
  3918  031F  02CC               	subwf	___fladd@bexp,f
  3919  0320                     l2420:
  3920  0320  1FBC               	btfss	___fladd@b+2,7
  3921  0321  2B0C               	goto	l2406
  3922  0322                     l2422:
  3923  0322  01CB               	clrf	___fladd@aexp
  3924  0323  1FCD               	btfss	___fladd@grs,7
  3925  0324  2B2D               	goto	l2432
  3926  0325  084D               	movf	___fladd@grs,w
  3927  0326  397F               	andlw	127
  3928  0327  1903               	btfsc	3,2
  3929  0328  183A               	btfsc	___fladd@b,0
  3930  0329  2B2B               	goto	l2428
  3931  032A  2B2D               	goto	l2432
  3932  032B                     l2428:
  3933  032B  01CB               	clrf	___fladd@aexp
  3934  032C  0ACB               	incf	___fladd@aexp,f
  3935  032D                     l2432:
  3936  032D  084B               	movf	___fladd@aexp,w
  3937  032E  1903               	btfsc	3,2
  3938  032F  2B59               	goto	l933
  3939  0330  3001               	movlw	1
  3940  0331  07BA               	addwf	___fladd@b,f
  3941  0332  3000               	movlw	0
  3942  0333  3DBB               	addwfc	___fladd@b+1,f
  3943  0334  3000               	movlw	0
  3944  0335  3DBC               	addwfc	___fladd@b+2,f
  3945  0336  3000               	movlw	0
  3946  0337  3DBD               	addwfc	___fladd@b+3,f
  3947  0338  1C3D               	btfss	___fladd@b+3,0
  3948  0339  2B59               	goto	l933
  3949  033A  083A               	movf	___fladd@b,w
  3950  033B  00C2               	movwf	??___fladd
  3951  033C  083B               	movf	___fladd@b+1,w
  3952  033D  00C3               	movwf	??___fladd+1
  3953  033E  083C               	movf	___fladd@b+2,w
  3954  033F  00C4               	movwf	??___fladd+2
  3955  0340  083D               	movf	___fladd@b+3,w
  3956  0341  00C5               	movwf	??___fladd+3
  3957  0342  3001               	movlw	1
  3958  0343  00C6               	movwf	??___fladd+4
  3959  0344                     u2505:
  3960  0344  37C5               	asrf	??___fladd+3,f
  3961  0345  0CC4               	rrf	??___fladd+2,f
  3962  0346  0CC3               	rrf	??___fladd+1,f
  3963  0347  0CC2               	rrf	??___fladd,f
  3964  0348  0BC6               	decfsz	??___fladd+4,f
  3965  0349  2B44               	goto	u2505
  3966  034A  0845               	movf	??___fladd+3,w
  3967  034B  00BD               	movwf	___fladd@b+3
  3968  034C  0844               	movf	??___fladd+2,w
  3969  034D  00BC               	movwf	___fladd@b+2
  3970  034E  0843               	movf	??___fladd+1,w
  3971  034F  00BB               	movwf	___fladd@b+1
  3972  0350  0842               	movf	??___fladd,w
  3973  0351  00BA               	movwf	___fladd@b
  3974  0352  0A4C               	incf	___fladd@bexp,w
  3975  0353  1903               	btfsc	3,2
  3976  0354  2B59               	goto	l933
  3977  0355  3001               	movlw	1
  3978  0356  00C2               	movwf	??___fladd
  3979  0357  0842               	movf	??___fladd,w
  3980  0358  07CC               	addwf	___fladd@bexp,f
  3981  0359                     l933:
  3982  0359  0A4C               	incf	___fladd@bexp,w
  3983  035A  1D03               	btfss	3,2
  3984  035B  084C               	movf	___fladd@bexp,w
  3985  035C  1D03               	btfss	3,2
  3986  035D  2B69               	goto	l2450
  3987  035E  3000               	movlw	0
  3988  035F  00BD               	movwf	___fladd@b+3
  3989  0360  3000               	movlw	0
  3990  0361  00BC               	movwf	___fladd@b+2
  3991  0362  3000               	movlw	0
  3992  0363  00BB               	movwf	___fladd@b+1
  3993  0364  3000               	movlw	0
  3994  0365  00BA               	movwf	___fladd@b
  3995  0366  084C               	movf	___fladd@bexp,w
  3996  0367  1903               	btfsc	3,2
  3997  0368  01CA               	clrf	___fladd@signs
  3998  0369                     l2450:
  3999  0369  1C4C               	btfss	___fladd@bexp,0
  4000  036A  2B6D               	goto	l2454
  4001  036B  17BC               	bsf	___fladd@b+2,7
  4002  036C  2B71               	goto	l941
  4003  036D                     l2454:
  4004  036D  307F               	movlw	127
  4005  036E  00C2               	movwf	??___fladd
  4006  036F  0842               	movf	??___fladd,w
  4007  0370  05BC               	andwf	___fladd@b+2,f
  4008  0371                     l941:
  4009  0371  364C               	lsrf	___fladd@bexp,w
  4010  0372  00C2               	movwf	??___fladd
  4011  0373  0842               	movf	??___fladd,w
  4012  0374  00BD               	movwf	___fladd@b+3
  4013  0375  1FCA               	btfss	___fladd@signs,7
  4014  0376  0008               	return
  4015  0377  17BD               	bsf	___fladd@b+3,7
  4016  0378  0008               	return
  4017  0379                     __end_of___fladd:
  4018                           
  4019                           	psect	text11
  4020  05A2                     __ptext11:	
  4021 ;; *************** function ___flmul *****************
  4022 ;; Defined at:
  4023 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;  b               4    0[BANK0 ] unsigned char 
  4026 ;;  a               4    4[BANK0 ] unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  prod            4   20[BANK0 ] struct .
  4029 ;;  grs             4   14[BANK0 ] unsigned long 
  4030 ;;  temp            2   24[BANK0 ] struct .
  4031 ;;  bexp            1   19[BANK0 ] unsigned char 
  4032 ;;  aexp            1   18[BANK0 ] unsigned char 
  4033 ;;  sign            1   13[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  4    0[BANK0 ] unsigned char 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, pclath, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4043 ;;      Params:         0       8       0       0       0       0       0       0
  4044 ;;      Locals:         0      13       0       0       0       0       0       0
  4045 ;;      Temps:          0       5       0       0       0       0       0       0
  4046 ;;      Totals:         0      26       0       0       0       0       0       0
  4047 ;;Total ram usage:       26 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 1
  4050 ;; This function calls:
  4051 ;;		__Umul8_16
  4052 ;; This function is called by:
  4053 ;;		_T500ms_Event
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function ___flmul
  4059  05A2                     ___flmul:
  4060                           
  4061                           ;incstack = 0
  4062                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4063  05A2  0020               	movlb	0	; select bank0
  4064  05A3  0823               	movf	___flmul@b+3,w
  4065  05A4  3980               	andlw	128
  4066  05A5  00A8               	movwf	??___flmul
  4067  05A6  0828               	movf	??___flmul,w
  4068  05A7  00AD               	movwf	___flmul@sign
  4069  05A8  3523               	lslf	___flmul@b+3,w
  4070  05A9  00A8               	movwf	??___flmul
  4071  05AA  0828               	movf	??___flmul,w
  4072  05AB  00B3               	movwf	___flmul@bexp
  4073  05AC  1BA2               	btfsc	___flmul@b+2,7
  4074  05AD  1433               	bsf	___flmul@bexp,0
  4075  05AE  0833               	movf	___flmul@bexp,w
  4076  05AF  1903               	btfsc	3,2
  4077  05B0  2DBE               	goto	l2698
  4078  05B1  0A33               	incf	___flmul@bexp,w
  4079  05B2  1D03               	btfss	3,2
  4080  05B3  2DBC               	goto	l2696
  4081  05B4  3000               	movlw	0
  4082  05B5  00A3               	movwf	___flmul@b+3
  4083  05B6  3000               	movlw	0
  4084  05B7  00A2               	movwf	___flmul@b+2
  4085  05B8  3000               	movlw	0
  4086  05B9  00A1               	movwf	___flmul@b+1
  4087  05BA  3000               	movlw	0
  4088  05BB  00A0               	movwf	___flmul@b
  4089  05BC                     l2696:
  4090  05BC  17A2               	bsf	___flmul@b+2,7
  4091  05BD  2DC6               	goto	l2700
  4092  05BE                     l2698:
  4093  05BE  3000               	movlw	0
  4094  05BF  00A3               	movwf	___flmul@b+3
  4095  05C0  3000               	movlw	0
  4096  05C1  00A2               	movwf	___flmul@b+2
  4097  05C2  3000               	movlw	0
  4098  05C3  00A1               	movwf	___flmul@b+1
  4099  05C4  3000               	movlw	0
  4100  05C5  00A0               	movwf	___flmul@b
  4101  05C6                     l2700:
  4102  05C6  0827               	movf	___flmul@a+3,w
  4103  05C7  3980               	andlw	128
  4104  05C8  00A8               	movwf	??___flmul
  4105  05C9  0828               	movf	??___flmul,w
  4106  05CA  06AD               	xorwf	___flmul@sign,f
  4107  05CB  3527               	lslf	___flmul@a+3,w
  4108  05CC  00A8               	movwf	??___flmul
  4109  05CD  0828               	movf	??___flmul,w
  4110  05CE  00B2               	movwf	___flmul@aexp
  4111  05CF  1BA6               	btfsc	___flmul@a+2,7
  4112  05D0  1432               	bsf	___flmul@aexp,0
  4113  05D1  0832               	movf	___flmul@aexp,w
  4114  05D2  1903               	btfsc	3,2
  4115  05D3  2DE1               	goto	l2716
  4116  05D4  0A32               	incf	___flmul@aexp,w
  4117  05D5  1D03               	btfss	3,2
  4118  05D6  2DDF               	goto	l2714
  4119  05D7  3000               	movlw	0
  4120  05D8  00A7               	movwf	___flmul@a+3
  4121  05D9  3000               	movlw	0
  4122  05DA  00A6               	movwf	___flmul@a+2
  4123  05DB  3000               	movlw	0
  4124  05DC  00A5               	movwf	___flmul@a+1
  4125  05DD  3000               	movlw	0
  4126  05DE  00A4               	movwf	___flmul@a
  4127  05DF                     l2714:
  4128  05DF  17A6               	bsf	___flmul@a+2,7
  4129  05E0  2DE9               	goto	l2718
  4130  05E1                     l2716:
  4131  05E1  3000               	movlw	0
  4132  05E2  00A7               	movwf	___flmul@a+3
  4133  05E3  3000               	movlw	0
  4134  05E4  00A6               	movwf	___flmul@a+2
  4135  05E5  3000               	movlw	0
  4136  05E6  00A5               	movwf	___flmul@a+1
  4137  05E7  3000               	movlw	0
  4138  05E8  00A4               	movwf	___flmul@a
  4139  05E9                     l2718:
  4140  05E9  0832               	movf	___flmul@aexp,w
  4141  05EA  1D03               	btfss	3,2
  4142  05EB  0833               	movf	___flmul@bexp,w
  4143  05EC  1D03               	btfss	3,2
  4144  05ED  2DF7               	goto	l2726
  4145  05EE  3000               	movlw	0
  4146  05EF  00A3               	movwf	?___flmul+3
  4147  05F0  3000               	movlw	0
  4148  05F1  00A2               	movwf	?___flmul+2
  4149  05F2  3000               	movlw	0
  4150  05F3  00A1               	movwf	?___flmul+1
  4151  05F4  3000               	movlw	0
  4152  05F5  00A0               	movwf	?___flmul
  4153  05F6  0008               	return
  4154  05F7                     l2726:
  4155  05F7  0820               	movf	___flmul@b,w
  4156  05F8  00A8               	movwf	??___flmul
  4157  05F9  0828               	movf	??___flmul,w
  4158  05FA  00F0               	movwf	__Umul8_16@multiplicand
  4159  05FB  0826               	movf	___flmul@a+2,w
  4160  05FC  318A  22DA  3185   	fcall	__Umul8_16
  4161  05FF  0871               	movf	?__Umul8_16+1,w
  4162  0600  0020               	movlb	0	; select bank0
  4163  0601  00B9               	movwf	___flmul@temp+1
  4164  0602  0870               	movf	?__Umul8_16,w
  4165  0603  00B8               	movwf	___flmul@temp
  4166  0604  0838               	movf	___flmul@temp,w
  4167  0605  00A8               	movwf	??___flmul
  4168  0606  01A9               	clrf	??___flmul+1
  4169  0607  01AA               	clrf	??___flmul+2
  4170  0608  01AB               	clrf	??___flmul+3
  4171  0609  082B               	movf	??___flmul+3,w
  4172  060A  00B1               	movwf	___flmul@grs+3
  4173  060B  082A               	movf	??___flmul+2,w
  4174  060C  00B0               	movwf	___flmul@grs+2
  4175  060D  0829               	movf	??___flmul+1,w
  4176  060E  00AF               	movwf	___flmul@grs+1
  4177  060F  0828               	movf	??___flmul,w
  4178  0610  00AE               	movwf	___flmul@grs
  4179  0611  0839               	movf	___flmul@temp+1,w
  4180  0612  00A8               	movwf	??___flmul
  4181  0613  01A9               	clrf	??___flmul+1
  4182  0614  01AA               	clrf	??___flmul+2
  4183  0615  01AB               	clrf	??___flmul+3
  4184  0616  082B               	movf	??___flmul+3,w
  4185  0617  00B7               	movwf	___flmul@prod+3
  4186  0618  082A               	movf	??___flmul+2,w
  4187  0619  00B6               	movwf	___flmul@prod+2
  4188  061A  0829               	movf	??___flmul+1,w
  4189  061B  00B5               	movwf	___flmul@prod+1
  4190  061C  0828               	movf	??___flmul,w
  4191  061D  00B4               	movwf	___flmul@prod
  4192  061E  0821               	movf	___flmul@b+1,w
  4193  061F  00A8               	movwf	??___flmul
  4194  0620  0828               	movf	??___flmul,w
  4195  0621  00F0               	movwf	__Umul8_16@multiplicand
  4196  0622  0825               	movf	___flmul@a+1,w
  4197  0623  318A  22DA  3185   	fcall	__Umul8_16
  4198  0626  0871               	movf	?__Umul8_16+1,w
  4199  0627  0020               	movlb	0	; select bank0
  4200  0628  00B9               	movwf	___flmul@temp+1
  4201  0629  0870               	movf	?__Umul8_16,w
  4202  062A  00B8               	movwf	___flmul@temp
  4203  062B  0838               	movf	___flmul@temp,w
  4204  062C  00A8               	movwf	??___flmul
  4205  062D  01A9               	clrf	??___flmul+1
  4206  062E  01AA               	clrf	??___flmul+2
  4207  062F  01AB               	clrf	??___flmul+3
  4208  0630  0828               	movf	??___flmul,w
  4209  0631  07AE               	addwf	___flmul@grs,f
  4210  0632  0829               	movf	??___flmul+1,w
  4211  0633  3DAF               	addwfc	___flmul@grs+1,f
  4212  0634  082A               	movf	??___flmul+2,w
  4213  0635  3DB0               	addwfc	___flmul@grs+2,f
  4214  0636  082B               	movf	??___flmul+3,w
  4215  0637  3DB1               	addwfc	___flmul@grs+3,f
  4216  0638  0839               	movf	___flmul@temp+1,w
  4217  0639  00A8               	movwf	??___flmul
  4218  063A  01A9               	clrf	??___flmul+1
  4219  063B  01AA               	clrf	??___flmul+2
  4220  063C  01AB               	clrf	??___flmul+3
  4221  063D  0828               	movf	??___flmul,w
  4222  063E  07B4               	addwf	___flmul@prod,f
  4223  063F  0829               	movf	??___flmul+1,w
  4224  0640  3DB5               	addwfc	___flmul@prod+1,f
  4225  0641  082A               	movf	??___flmul+2,w
  4226  0642  3DB6               	addwfc	___flmul@prod+2,f
  4227  0643  082B               	movf	??___flmul+3,w
  4228  0644  3DB7               	addwfc	___flmul@prod+3,f
  4229  0645  0822               	movf	___flmul@b+2,w
  4230  0646  00A8               	movwf	??___flmul
  4231  0647  0828               	movf	??___flmul,w
  4232  0648  00F0               	movwf	__Umul8_16@multiplicand
  4233  0649  0824               	movf	___flmul@a,w
  4234  064A  318A  22DA  3185   	fcall	__Umul8_16
  4235  064D  0871               	movf	?__Umul8_16+1,w
  4236  064E  0020               	movlb	0	; select bank0
  4237  064F  00B9               	movwf	___flmul@temp+1
  4238  0650  0870               	movf	?__Umul8_16,w
  4239  0651  00B8               	movwf	___flmul@temp
  4240  0652  0838               	movf	___flmul@temp,w
  4241  0653  00A8               	movwf	??___flmul
  4242  0654  01A9               	clrf	??___flmul+1
  4243  0655  01AA               	clrf	??___flmul+2
  4244  0656  01AB               	clrf	??___flmul+3
  4245  0657  0828               	movf	??___flmul,w
  4246  0658  07AE               	addwf	___flmul@grs,f
  4247  0659  0829               	movf	??___flmul+1,w
  4248  065A  3DAF               	addwfc	___flmul@grs+1,f
  4249  065B  082A               	movf	??___flmul+2,w
  4250  065C  3DB0               	addwfc	___flmul@grs+2,f
  4251  065D  082B               	movf	??___flmul+3,w
  4252  065E  3DB1               	addwfc	___flmul@grs+3,f
  4253  065F  0839               	movf	___flmul@temp+1,w
  4254  0660  00A8               	movwf	??___flmul
  4255  0661  01A9               	clrf	??___flmul+1
  4256  0662  01AA               	clrf	??___flmul+2
  4257  0663  01AB               	clrf	??___flmul+3
  4258  0664  0828               	movf	??___flmul,w
  4259  0665  07B4               	addwf	___flmul@prod,f
  4260  0666  0829               	movf	??___flmul+1,w
  4261  0667  3DB5               	addwfc	___flmul@prod+1,f
  4262  0668  082A               	movf	??___flmul+2,w
  4263  0669  3DB6               	addwfc	___flmul@prod+2,f
  4264  066A  082B               	movf	??___flmul+3,w
  4265  066B  3DB7               	addwfc	___flmul@prod+3,f
  4266  066C  3008               	movlw	8
  4267  066D                     u3185:
  4268  066D  35AE               	lslf	___flmul@grs,f
  4269  066E  0DAF               	rlf	___flmul@grs+1,f
  4270  066F  0DB0               	rlf	___flmul@grs+2,f
  4271  0670  0DB1               	rlf	___flmul@grs+3,f
  4272  0671  0B89               	decfsz	9,f
  4273  0672  2E6D               	goto	u3185
  4274  0673  0821               	movf	___flmul@b+1,w
  4275  0674  00A8               	movwf	??___flmul
  4276  0675  0828               	movf	??___flmul,w
  4277  0676  00F0               	movwf	__Umul8_16@multiplicand
  4278  0677  0824               	movf	___flmul@a,w
  4279  0678  318A  22DA  3185   	fcall	__Umul8_16
  4280  067B  0871               	movf	?__Umul8_16+1,w
  4281  067C  0020               	movlb	0	; select bank0
  4282  067D  00B9               	movwf	___flmul@temp+1
  4283  067E  0870               	movf	?__Umul8_16,w
  4284  067F  00B8               	movwf	___flmul@temp
  4285  0680  0838               	movf	___flmul@temp,w
  4286  0681  07AE               	addwf	___flmul@grs,f
  4287  0682  0839               	movf	___flmul@temp+1,w
  4288  0683  3DAF               	addwfc	___flmul@grs+1,f
  4289  0684  3000               	movlw	0
  4290  0685  3DB0               	addwfc	___flmul@grs+2,f
  4291  0686  3DB1               	addwfc	___flmul@grs+3,f
  4292  0687  0820               	movf	___flmul@b,w
  4293  0688  00A8               	movwf	??___flmul
  4294  0689  0828               	movf	??___flmul,w
  4295  068A  00F0               	movwf	__Umul8_16@multiplicand
  4296  068B  0825               	movf	___flmul@a+1,w
  4297  068C  318A  22DA  3185   	fcall	__Umul8_16
  4298  068F  0871               	movf	?__Umul8_16+1,w
  4299  0690  0020               	movlb	0	; select bank0
  4300  0691  00B9               	movwf	___flmul@temp+1
  4301  0692  0870               	movf	?__Umul8_16,w
  4302  0693  00B8               	movwf	___flmul@temp
  4303  0694  0838               	movf	___flmul@temp,w
  4304  0695  07AE               	addwf	___flmul@grs,f
  4305  0696  0839               	movf	___flmul@temp+1,w
  4306  0697  3DAF               	addwfc	___flmul@grs+1,f
  4307  0698  3000               	movlw	0
  4308  0699  3DB0               	addwfc	___flmul@grs+2,f
  4309  069A  3DB1               	addwfc	___flmul@grs+3,f
  4310  069B  3008               	movlw	8
  4311  069C                     u3195:
  4312  069C  35AE               	lslf	___flmul@grs,f
  4313  069D  0DAF               	rlf	___flmul@grs+1,f
  4314  069E  0DB0               	rlf	___flmul@grs+2,f
  4315  069F  0DB1               	rlf	___flmul@grs+3,f
  4316  06A0  0B89               	decfsz	9,f
  4317  06A1  2E9C               	goto	u3195
  4318  06A2  0820               	movf	___flmul@b,w
  4319  06A3  00A8               	movwf	??___flmul
  4320  06A4  0828               	movf	??___flmul,w
  4321  06A5  00F0               	movwf	__Umul8_16@multiplicand
  4322  06A6  0824               	movf	___flmul@a,w
  4323  06A7  318A  22DA  3185   	fcall	__Umul8_16
  4324  06AA  0871               	movf	?__Umul8_16+1,w
  4325  06AB  0020               	movlb	0	; select bank0
  4326  06AC  00B9               	movwf	___flmul@temp+1
  4327  06AD  0870               	movf	?__Umul8_16,w
  4328  06AE  00B8               	movwf	___flmul@temp
  4329  06AF  0838               	movf	___flmul@temp,w
  4330  06B0  07AE               	addwf	___flmul@grs,f
  4331  06B1  0839               	movf	___flmul@temp+1,w
  4332  06B2  3DAF               	addwfc	___flmul@grs+1,f
  4333  06B3  3000               	movlw	0
  4334  06B4  3DB0               	addwfc	___flmul@grs+2,f
  4335  06B5  3DB1               	addwfc	___flmul@grs+3,f
  4336  06B6  0821               	movf	___flmul@b+1,w
  4337  06B7  00A8               	movwf	??___flmul
  4338  06B8  0828               	movf	??___flmul,w
  4339  06B9  00F0               	movwf	__Umul8_16@multiplicand
  4340  06BA  0826               	movf	___flmul@a+2,w
  4341  06BB  318A  22DA  3185   	fcall	__Umul8_16
  4342  06BE  0871               	movf	?__Umul8_16+1,w
  4343  06BF  0020               	movlb	0	; select bank0
  4344  06C0  00B9               	movwf	___flmul@temp+1
  4345  06C1  0870               	movf	?__Umul8_16,w
  4346  06C2  00B8               	movwf	___flmul@temp
  4347  06C3  0838               	movf	___flmul@temp,w
  4348  06C4  07B4               	addwf	___flmul@prod,f
  4349  06C5  0839               	movf	___flmul@temp+1,w
  4350  06C6  3DB5               	addwfc	___flmul@prod+1,f
  4351  06C7  3000               	movlw	0
  4352  06C8  3DB6               	addwfc	___flmul@prod+2,f
  4353  06C9  3DB7               	addwfc	___flmul@prod+3,f
  4354  06CA  0822               	movf	___flmul@b+2,w
  4355  06CB  00A8               	movwf	??___flmul
  4356  06CC  0828               	movf	??___flmul,w
  4357  06CD  00F0               	movwf	__Umul8_16@multiplicand
  4358  06CE  0825               	movf	___flmul@a+1,w
  4359  06CF  318A  22DA  3185   	fcall	__Umul8_16
  4360  06D2  0871               	movf	?__Umul8_16+1,w
  4361  06D3  0020               	movlb	0	; select bank0
  4362  06D4  00B9               	movwf	___flmul@temp+1
  4363  06D5  0870               	movf	?__Umul8_16,w
  4364  06D6  00B8               	movwf	___flmul@temp
  4365  06D7  0838               	movf	___flmul@temp,w
  4366  06D8  07B4               	addwf	___flmul@prod,f
  4367  06D9  0839               	movf	___flmul@temp+1,w
  4368  06DA  3DB5               	addwfc	___flmul@prod+1,f
  4369  06DB  3000               	movlw	0
  4370  06DC  3DB6               	addwfc	___flmul@prod+2,f
  4371  06DD  3DB7               	addwfc	___flmul@prod+3,f
  4372  06DE  0822               	movf	___flmul@b+2,w
  4373  06DF  00A8               	movwf	??___flmul
  4374  06E0  0828               	movf	??___flmul,w
  4375  06E1  00F0               	movwf	__Umul8_16@multiplicand
  4376  06E2  0826               	movf	___flmul@a+2,w
  4377  06E3  318A  22DA  3185   	fcall	__Umul8_16
  4378  06E6  0871               	movf	?__Umul8_16+1,w
  4379  06E7  0020               	movlb	0	; select bank0
  4380  06E8  00B9               	movwf	___flmul@temp+1
  4381  06E9  0870               	movf	?__Umul8_16,w
  4382  06EA  00B8               	movwf	___flmul@temp
  4383  06EB  0838               	movf	___flmul@temp,w
  4384  06EC  00A8               	movwf	??___flmul
  4385  06ED  0839               	movf	___flmul@temp+1,w
  4386  06EE  00A9               	movwf	??___flmul+1
  4387  06EF  01AA               	clrf	??___flmul+2
  4388  06F0  01AB               	clrf	??___flmul+3
  4389  06F1  3008               	movlw	8
  4390  06F2                     u3205:
  4391  06F2  35A8               	lslf	??___flmul,f
  4392  06F3  0DA9               	rlf	??___flmul+1,f
  4393  06F4  0DAA               	rlf	??___flmul+2,f
  4394  06F5  0DAB               	rlf	??___flmul+3,f
  4395  06F6  0B89               	decfsz	9,f
  4396  06F7  2EF2               	goto	u3205
  4397  06F8  0828               	movf	??___flmul,w
  4398  06F9  07B4               	addwf	___flmul@prod,f
  4399  06FA  0829               	movf	??___flmul+1,w
  4400  06FB  3DB5               	addwfc	___flmul@prod+1,f
  4401  06FC  082A               	movf	??___flmul+2,w
  4402  06FD  3DB6               	addwfc	___flmul@prod+2,f
  4403  06FE  082B               	movf	??___flmul+3,w
  4404  06FF  3DB7               	addwfc	___flmul@prod+3,f
  4405  0700  082E               	movf	___flmul@grs,w
  4406  0701  00A8               	movwf	??___flmul
  4407  0702  082F               	movf	___flmul@grs+1,w
  4408  0703  00A9               	movwf	??___flmul+1
  4409  0704  0830               	movf	___flmul@grs+2,w
  4410  0705  00AA               	movwf	??___flmul+2
  4411  0706  0831               	movf	___flmul@grs+3,w
  4412  0707  00AB               	movwf	??___flmul+3
  4413  0708  3018               	movlw	24
  4414  0709                     u3215:
  4415  0709  36AB               	lsrf	??___flmul+3,f
  4416  070A  0CAA               	rrf	??___flmul+2,f
  4417  070B  0CA9               	rrf	??___flmul+1,f
  4418  070C  0CA8               	rrf	??___flmul,f
  4419  070D  0B89               	decfsz	9,f
  4420  070E  2F09               	goto	u3215
  4421  070F  0828               	movf	??___flmul,w
  4422  0710  07B4               	addwf	___flmul@prod,f
  4423  0711  0829               	movf	??___flmul+1,w
  4424  0712  3DB5               	addwfc	___flmul@prod+1,f
  4425  0713  082A               	movf	??___flmul+2,w
  4426  0714  3DB6               	addwfc	___flmul@prod+2,f
  4427  0715  082B               	movf	??___flmul+3,w
  4428  0716  3DB7               	addwfc	___flmul@prod+3,f
  4429  0717  3008               	movlw	8
  4430  0718                     u3225:
  4431  0718  35AE               	lslf	___flmul@grs,f
  4432  0719  0DAF               	rlf	___flmul@grs+1,f
  4433  071A  0DB0               	rlf	___flmul@grs+2,f
  4434  071B  0DB1               	rlf	___flmul@grs+3,f
  4435  071C  0B89               	decfsz	9,f
  4436  071D  2F18               	goto	u3225
  4437  071E  0833               	movf	___flmul@bexp,w
  4438  071F  0732               	addwf	___flmul@aexp,w
  4439  0720  00A8               	movwf	??___flmul
  4440  0721  01A9               	clrf	??___flmul+1
  4441  0722  0DA9               	rlf	??___flmul+1,f
  4442  0723  0828               	movf	??___flmul,w
  4443  0724  3E82               	addlw	130
  4444  0725  00B8               	movwf	___flmul@temp
  4445  0726  30FF               	movlw	255
  4446  0727  3D29               	addwfc	??___flmul+1,w
  4447  0728  00B9               	movwf	___flmul@temp+1
  4448  0729                     l2778:
  4449  0729  1BB6               	btfsc	___flmul@prod+2,7
  4450  072A  2F40               	goto	l2780
  4451  072B  3001               	movlw	1
  4452  072C                     u3235:
  4453  072C  35B4               	lslf	___flmul@prod,f
  4454  072D  0DB5               	rlf	___flmul@prod+1,f
  4455  072E  0DB6               	rlf	___flmul@prod+2,f
  4456  072F  0DB7               	rlf	___flmul@prod+3,f
  4457  0730  0B89               	decfsz	9,f
  4458  0731  2F2C               	goto	u3235
  4459  0732  1BB1               	btfsc	___flmul@grs+3,7
  4460  0733  1434               	bsf	___flmul@prod,0
  4461  0734  3001               	movlw	1
  4462  0735                     u3255:
  4463  0735  35AE               	lslf	___flmul@grs,f
  4464  0736  0DAF               	rlf	___flmul@grs+1,f
  4465  0737  0DB0               	rlf	___flmul@grs+2,f
  4466  0738  0DB1               	rlf	___flmul@grs+3,f
  4467  0739  0B89               	decfsz	9,f
  4468  073A  2F35               	goto	u3255
  4469  073B  30FF               	movlw	255
  4470  073C  07B8               	addwf	___flmul@temp,f
  4471  073D  30FF               	movlw	255
  4472  073E  3DB9               	addwfc	___flmul@temp+1,f
  4473  073F  2F29               	goto	l2778
  4474  0740                     l2780:
  4475  0740  01B2               	clrf	___flmul@aexp
  4476  0741  1FB1               	btfss	___flmul@grs+3,7
  4477  0742  2F59               	goto	l2790
  4478  0743  30FF               	movlw	255
  4479  0744  052E               	andwf	___flmul@grs,w
  4480  0745  00A8               	movwf	??___flmul
  4481  0746  30FF               	movlw	255
  4482  0747  052F               	andwf	___flmul@grs+1,w
  4483  0748  00A9               	movwf	??___flmul+1
  4484  0749  30FF               	movlw	255
  4485  074A  0530               	andwf	___flmul@grs+2,w
  4486  074B  00AA               	movwf	??___flmul+2
  4487  074C  307F               	movlw	127
  4488  074D  0531               	andwf	___flmul@grs+3,w
  4489  074E  00AB               	movwf	??___flmul+3
  4490  074F  082B               	movf	??___flmul+3,w
  4491  0750  042A               	iorwf	??___flmul+2,w
  4492  0751  0429               	iorwf	??___flmul+1,w
  4493  0752  0428               	iorwf	??___flmul,w
  4494  0753  1903               	skipnz
  4495  0754  1834               	btfsc	___flmul@prod,0
  4496  0755  2F57               	goto	l2786
  4497  0756  2F59               	goto	l2790
  4498  0757                     l2786:
  4499  0757  01B2               	clrf	___flmul@aexp
  4500  0758  0AB2               	incf	___flmul@aexp,f
  4501  0759                     l2790:
  4502  0759  0832               	movf	___flmul@aexp,w
  4503  075A  1903               	btfsc	3,2
  4504  075B  2F82               	goto	l2800
  4505  075C  3001               	movlw	1
  4506  075D  07B4               	addwf	___flmul@prod,f
  4507  075E  3000               	movlw	0
  4508  075F  3DB5               	addwfc	___flmul@prod+1,f
  4509  0760  3000               	movlw	0
  4510  0761  3DB6               	addwfc	___flmul@prod+2,f
  4511  0762  3000               	movlw	0
  4512  0763  3DB7               	addwfc	___flmul@prod+3,f
  4513  0764  1C37               	btfss	___flmul@prod+3,0
  4514  0765  2F82               	goto	l2800
  4515  0766  0834               	movf	___flmul@prod,w
  4516  0767  00A8               	movwf	??___flmul
  4517  0768  0835               	movf	___flmul@prod+1,w
  4518  0769  00A9               	movwf	??___flmul+1
  4519  076A  0836               	movf	___flmul@prod+2,w
  4520  076B  00AA               	movwf	??___flmul+2
  4521  076C  0837               	movf	___flmul@prod+3,w
  4522  076D  00AB               	movwf	??___flmul+3
  4523  076E  3001               	movlw	1
  4524  076F  00AC               	movwf	??___flmul+4
  4525  0770                     u3325:
  4526  0770  37AB               	asrf	??___flmul+3,f
  4527  0771  0CAA               	rrf	??___flmul+2,f
  4528  0772  0CA9               	rrf	??___flmul+1,f
  4529  0773  0CA8               	rrf	??___flmul,f
  4530  0774  0BAC               	decfsz	??___flmul+4,f
  4531  0775  2F70               	goto	u3325
  4532  0776  082B               	movf	??___flmul+3,w
  4533  0777  00B7               	movwf	___flmul@prod+3
  4534  0778  082A               	movf	??___flmul+2,w
  4535  0779  00B6               	movwf	___flmul@prod+2
  4536  077A  0829               	movf	??___flmul+1,w
  4537  077B  00B5               	movwf	___flmul@prod+1
  4538  077C  0828               	movf	??___flmul,w
  4539  077D  00B4               	movwf	___flmul@prod
  4540  077E  3001               	movlw	1
  4541  077F  07B8               	addwf	___flmul@temp,f
  4542  0780  3000               	movlw	0
  4543  0781  3DB9               	addwfc	___flmul@temp+1,f
  4544  0782                     l2800:
  4545  0782  0839               	movf	___flmul@temp+1,w
  4546  0783  3A80               	xorlw	128
  4547  0784  00A8               	movwf	??___flmul
  4548  0785  3080               	movlw	128
  4549  0786  0228               	subwf	??___flmul,w
  4550  0787  1D03               	skipz
  4551  0788  2F8B               	goto	u3335
  4552  0789  30FF               	movlw	255
  4553  078A  0238               	subwf	___flmul@temp,w
  4554  078B                     u3335:
  4555  078B  1C03               	skipc
  4556  078C  2F97               	goto	l2804
  4557  078D  307F               	movlw	127
  4558  078E  0020               	movlb	0	; select bank0
  4559  078F  00B7               	movwf	___flmul@prod+3
  4560  0790  3080               	movlw	128
  4561  0791  00B6               	movwf	___flmul@prod+2
  4562  0792  3000               	movlw	0
  4563  0793  00B5               	movwf	___flmul@prod+1
  4564  0794  3000               	movlw	0
  4565  0795  00B4               	movwf	___flmul@prod
  4566  0796  2FC1               	goto	l1007
  4567  0797                     l2804:
  4568  0797  0020               	movlb	0	; select bank0
  4569  0798  0839               	movf	___flmul@temp+1,w
  4570  0799  3A80               	xorlw	128
  4571  079A  00A8               	movwf	??___flmul
  4572  079B  3080               	movlw	128
  4573  079C  0228               	subwf	??___flmul,w
  4574  079D  1D03               	skipz
  4575  079E  2FA1               	goto	u3345
  4576  079F  3001               	movlw	1
  4577  07A0  0238               	subwf	___flmul@temp,w
  4578  07A1                     u3345:
  4579  07A1  1803               	skipnc
  4580  07A2  2FAE               	goto	l2810
  4581  07A3  3000               	movlw	0
  4582  07A4  0020               	movlb	0	; select bank0
  4583  07A5  00B7               	movwf	___flmul@prod+3
  4584  07A6  3000               	movlw	0
  4585  07A7  00B6               	movwf	___flmul@prod+2
  4586  07A8  3000               	movlw	0
  4587  07A9  00B5               	movwf	___flmul@prod+1
  4588  07AA  3000               	movlw	0
  4589  07AB  00B4               	movwf	___flmul@prod
  4590  07AC  01AD               	clrf	___flmul@sign
  4591  07AD  2FC1               	goto	l1007
  4592  07AE                     l2810:
  4593  07AE  0020               	movlb	0	; select bank0
  4594  07AF  0838               	movf	___flmul@temp,w
  4595  07B0  00A8               	movwf	??___flmul
  4596  07B1  0828               	movf	??___flmul,w
  4597  07B2  00B3               	movwf	___flmul@bexp
  4598  07B3  30FF               	movlw	255
  4599  07B4  05B4               	andwf	___flmul@prod,f
  4600  07B5  30FF               	movlw	255
  4601  07B6  05B5               	andwf	___flmul@prod+1,f
  4602  07B7  307F               	movlw	127
  4603  07B8  05B6               	andwf	___flmul@prod+2,f
  4604  07B9  3000               	movlw	0
  4605  07BA  05B7               	andwf	___flmul@prod+3,f
  4606  07BB  1833               	btfsc	___flmul@bexp,0
  4607  07BC  17B6               	bsf	___flmul@prod+2,7
  4608  07BD  3633               	lsrf	___flmul@bexp,w
  4609  07BE  00A8               	movwf	??___flmul
  4610  07BF  0828               	movf	??___flmul,w
  4611  07C0  00B7               	movwf	___flmul@prod+3
  4612  07C1                     l1007:
  4613  07C1  082D               	movf	___flmul@sign,w
  4614  07C2  00A8               	movwf	??___flmul
  4615  07C3  0828               	movf	??___flmul,w
  4616  07C4  04B7               	iorwf	___flmul@prod+3,f
  4617  07C5  0837               	movf	___flmul@prod+3,w
  4618  07C6  00A3               	movwf	?___flmul+3
  4619  07C7  0836               	movf	___flmul@prod+2,w
  4620  07C8  00A2               	movwf	?___flmul+2
  4621  07C9  0835               	movf	___flmul@prod+1,w
  4622  07CA  00A1               	movwf	?___flmul+1
  4623  07CB  0834               	movf	___flmul@prod,w
  4624  07CC  00A0               	movwf	?___flmul
  4625  07CD  0008               	return
  4626  07CE                     __end_of___flmul:
  4627                           
  4628                           	psect	text12
  4629  0ADA                     __ptext12:	
  4630 ;; *************** function __Umul8_16 *****************
  4631 ;; Defined at:
  4632 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  multiplier      1    wreg     unsigned char 
  4635 ;;  multiplicand    1    0[COMMON] unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  multiplier      1    8[COMMON] unsigned char 
  4638 ;;  word_mpld       2    6[COMMON] unsigned int 
  4639 ;;  product         2    4[COMMON] unsigned int 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2    0[COMMON] unsigned int 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4649 ;;      Params:         2       0       0       0       0       0       0       0
  4650 ;;      Locals:         5       0       0       0       0       0       0       0
  4651 ;;      Temps:          2       0       0       0       0       0       0       0
  4652 ;;      Totals:         9       0       0       0       0       0       0       0
  4653 ;;Total ram usage:        9 bytes
  4654 ;; Hardware stack levels used: 1
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		___flmul
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function __Umul8_16
  4664  0ADA                     __Umul8_16:
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4668                           ;__Umul8_16@multiplier stored from wreg
  4669  0ADA  00F8               	movwf	__Umul8_16@multiplier
  4670  0ADB  01F4               	clrf	__Umul8_16@product
  4671  0ADC  01F5               	clrf	__Umul8_16@product+1
  4672  0ADD  0870               	movf	__Umul8_16@multiplicand,w
  4673  0ADE  00F2               	movwf	??__Umul8_16
  4674  0ADF  01F3               	clrf	??__Umul8_16+1
  4675  0AE0  0872               	movf	??__Umul8_16,w
  4676  0AE1  00F6               	movwf	__Umul8_16@word_mpld
  4677  0AE2  0873               	movf	??__Umul8_16+1,w
  4678  0AE3  00F7               	movwf	__Umul8_16@word_mpld+1
  4679  0AE4                     l2464:
  4680  0AE4  1C78               	btfss	__Umul8_16@multiplier,0
  4681  0AE5  2AEA               	goto	l1014
  4682  0AE6  0876               	movf	__Umul8_16@word_mpld,w
  4683  0AE7  07F4               	addwf	__Umul8_16@product,f
  4684  0AE8  0877               	movf	__Umul8_16@word_mpld+1,w
  4685  0AE9  3DF5               	addwfc	__Umul8_16@product+1,f
  4686  0AEA                     l1014:
  4687  0AEA  3001               	movlw	1
  4688  0AEB                     u2585:
  4689  0AEB  35F6               	lslf	__Umul8_16@word_mpld,f
  4690  0AEC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4691  0AED  0B89               	decfsz	9,f
  4692  0AEE  2AEB               	goto	u2585
  4693  0AEF  1003               	clrc
  4694  0AF0  0CF8               	rrf	__Umul8_16@multiplier,f
  4695  0AF1  0878               	movf	__Umul8_16@multiplier,w
  4696  0AF2  1D03               	btfss	3,2
  4697  0AF3  2AE4               	goto	l2464
  4698  0AF4  0875               	movf	__Umul8_16@product+1,w
  4699  0AF5  00F1               	movwf	?__Umul8_16+1
  4700  0AF6  0874               	movf	__Umul8_16@product,w
  4701  0AF7  00F0               	movwf	?__Umul8_16
  4702  0AF8  0008               	return
  4703  0AF9                     __end_of__Umul8_16:
  4704                           
  4705                           	psect	text13
  4706  0BB2                     __ptext13:	
  4707 ;; *************** function _TwoData_COM *****************
  4708 ;; Defined at:
  4709 ;;		line 155 in file "User/Fog.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0, pclath, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4723 ;;      Params:         0       0       0       0       0       0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0
  4725 ;;      Temps:          1       0       0       0       0       0       0       0
  4726 ;;      Totals:         1       0       0       0       0       0       0       0
  4727 ;;Total ram usage:        1 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 3
  4730 ;; This function calls:
  4731 ;;		_ErrInf
  4732 ;;		_GetADC
  4733 ;; This function is called by:
  4734 ;;		_T500ms_Event
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           
  4739                           ;psect for function _TwoData_COM
  4740  0BB2                     _TwoData_COM:
  4741                           
  4742                           ;User/Fog.c: 157:     AD_Cur[0] = GetADC(10);
  4743                           
  4744                           ;incstack = 0
  4745                           ; Regs used in _TwoData_COM: [wreg+status,2+status,0+pclath+cstack]
  4746  0BB2  300A               	movlw	10
  4747  0BB3  318C  244B  318B   	fcall	_GetADC
  4748  0BB6  0876               	movf	?_GetADC+1,w
  4749  0BB7  0021               	movlb	1	; select bank1
  4750  0BB8  00A1               	movwf	(_AD_Cur+1)^(0+128)
  4751  0BB9  0875               	movf	?_GetADC,w
  4752  0BBA  00A0               	movwf	_AD_Cur^(0+128)
  4753                           
  4754                           ;User/Fog.c: 159:     if ((AD_Cur[0] < ADMin2) || (AD_Cur[0] > ADMax2))
  4755  0BBB  0855               	movf	(_ADMin2+1)^(0+128),w
  4756  0BBC  0221               	subwf	(_AD_Cur+1)^(0+128),w
  4757  0BBD  1D03               	skipz
  4758  0BBE  2BC1               	goto	u4915
  4759  0BBF  0854               	movf	_ADMin2^(0+128),w
  4760  0BC0  0220               	subwf	_AD_Cur^(0+128),w
  4761  0BC1                     u4915:
  4762  0BC1  1C03               	skipc
  4763  0BC2  2BCB               	goto	l3588
  4764  0BC3  0821               	movf	(_AD_Cur+1)^(0+128),w
  4765  0BC4  0269               	subwf	(_ADMax2+1)^(0+128),w
  4766  0BC5  1D03               	skipz
  4767  0BC6  2BC9               	goto	u4925
  4768  0BC7  0820               	movf	_AD_Cur^(0+128),w
  4769  0BC8  0268               	subwf	_ADMax2^(0+128),w
  4770  0BC9                     u4925:
  4771  0BC9  1803               	skipnc
  4772  0BCA  2BD1               	goto	l3592
  4773  0BCB                     l3588:
  4774                           
  4775                           ;User/Fog.c: 160:     {;User/Fog.c: 161:         adc_true_cnt++;
  4776  0BCB  3001               	movlw	1
  4777  0BCC  00F9               	movwf	??_TwoData_COM
  4778  0BCD  0879               	movf	??_TwoData_COM,w
  4779  0BCE  07DF               	addwf	_adc_true_cnt^(0+128),f
  4780                           
  4781                           ;User/Fog.c: 162:         adc_false_cnt = 0;
  4782  0BCF  01DE               	clrf	_adc_false_cnt^(0+128)
  4783                           
  4784                           ;User/Fog.c: 163:     }
  4785  0BD0  2BD5               	goto	l3594
  4786  0BD1                     l3592:
  4787                           
  4788                           ;User/Fog.c: 165:         adc_false_cnt++;
  4789  0BD1  3001               	movlw	1
  4790  0BD2  00F9               	movwf	??_TwoData_COM
  4791  0BD3  0879               	movf	??_TwoData_COM,w
  4792  0BD4  07DE               	addwf	_adc_false_cnt^(0+128),f
  4793  0BD5                     l3594:
  4794                           
  4795                           ;User/Fog.c: 167:     if (adc_true_cnt > 5)
  4796  0BD5  3006               	movlw	6
  4797  0BD6  025F               	subwf	_adc_true_cnt^(0+128),w
  4798  0BD7  1C03               	skipc
  4799  0BD8  2BEB               	goto	l3608
  4800                           
  4801                           ;User/Fog.c: 168:     {;User/Fog.c: 169:         ErrInf();
  4802  0BD9  318A  223E         	fcall	_ErrInf
  4803                           
  4804                           ;User/Fog.c: 170:         Flg2.bits.WafterF_B7 = 1;
  4805  0BDB  0020               	movlb	0	; select bank0
  4806  0BDC  17EE               	bsf	_Flg2,7	;volatile
  4807                           
  4808                           ;User/Fog.c: 171:         hze = 6;
  4809  0BDD  3006               	movlw	6
  4810  0BDE  00F9               	movwf	??_TwoData_COM
  4811  0BDF  0879               	movf	??_TwoData_COM,w
  4812  0BE0  0021               	movlb	1	; select bank1
  4813  0BE1  00E5               	movwf	_hze^(0+128)
  4814                           
  4815                           ;User/Fog.c: 172:         NoWater = 0;
  4816  0BE2  0020               	movlb	0	; select bank0
  4817  0BE3  01ED               	clrf	_NoWater
  4818                           
  4819                           ;User/Fog.c: 173:         PWMTime_Val = 2;
  4820  0BE4  3002               	movlw	2
  4821  0BE5  00F9               	movwf	??_TwoData_COM
  4822  0BE6  0879               	movf	??_TwoData_COM,w
  4823  0BE7  0021               	movlb	1	; select bank1
  4824  0BE8  00EA               	movwf	_PWMTime_Val^(0+128)
  4825                           
  4826                           ;User/Fog.c: 174:         PWMTime = 0;
  4827  0BE9  01E4               	clrf	_PWMTime^(0+128)
  4828                           
  4829                           ;User/Fog.c: 175:     }
  4830  0BEA  0008               	return
  4831  0BEB                     l3608:
  4832  0BEB  3004               	movlw	4
  4833  0BEC  025E               	subwf	_adc_false_cnt^(0+128),w
  4834  0BED  1C03               	skipc
  4835  0BEE  0008               	return
  4836                           
  4837                           ;User/Fog.c: 178:     {;User/Fog.c: 179:         NoWater = 0;
  4838  0BEF  0020               	movlb	0	; select bank0
  4839  0BF0  01ED               	clrf	_NoWater
  4840                           
  4841                           ;User/Fog.c: 180:         PWMTime_Val = 2;
  4842  0BF1  3002               	movlw	2
  4843  0BF2  00F9               	movwf	??_TwoData_COM
  4844  0BF3  0879               	movf	??_TwoData_COM,w
  4845  0BF4  0021               	movlb	1	; select bank1
  4846  0BF5  00EA               	movwf	_PWMTime_Val^(0+128)
  4847                           
  4848                           ;User/Fog.c: 181:         PWMTime = 0;
  4849  0BF6  01E4               	clrf	_PWMTime^(0+128)
  4850                           
  4851                           ;User/Fog.c: 182:         Flg2.bits.ADMin_B1 = 0;
  4852  0BF7  0020               	movlb	0	; select bank0
  4853  0BF8  10EE               	bcf	_Flg2,1	;volatile
  4854  0BF9  0008               	return
  4855  0BFA                     __end_of_TwoData_COM:
  4856                           
  4857                           	psect	text14
  4858  0E78                     __ptext14:	
  4859 ;; *************** function _LED_Show *****************
  4860 ;; Defined at:
  4861 ;;		line 335 in file "User/newmain.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4875 ;;      Params:         0       0       0       0       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0
  4877 ;;      Temps:          2       0       0       0       0       0       0       0
  4878 ;;      Totals:         2       0       0       0       0       0       0       0
  4879 ;;Total ram usage:        2 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_T500ms_Event
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _LED_Show
  4890  0E78                     _LED_Show:
  4891                           
  4892                           ;User/newmain.c: 337:     switch (MinS_Cnt)
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _LED_Show: [wreg-fsr0h+status,2+status,0]
  4896  0E78  2F0F               	goto	l2634
  4897  0E79                     l476:	
  4898                           ;User/newmain.c: 338:     {;User/newmain.c: 339:     case 1:
  4899                           
  4900                           
  4901                           ;User/newmain.c: 340:         LATBbits.LATB6 = 0;
  4902  0E79  0022               	movlb	2	; select bank2
  4903  0E7A  130D               	bcf	13,6	;volatile
  4904                           
  4905                           ;User/newmain.c: 341:         LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4906  0E7B  150C               	bsf	12,2	;volatile
  4907  0E7C  1D0C               	btfss	12,2	;volatile
  4908  0E7D  2E81               	goto	u2760
  4909  0E7E  0022               	movlb	2	; select bank2
  4910  0E7F  140E               	bsf	14,0	;volatile
  4911  0E80  2E83               	goto	u2774
  4912  0E81                     u2760:
  4913  0E81  0022               	movlb	2	; select bank2
  4914  0E82  100E               	bcf	14,0	;volatile
  4915  0E83                     u2774:
  4916  0E83  1C0E               	btfss	14,0	;volatile
  4917  0E84  2E88               	goto	u2770
  4918  0E85  0022               	movlb	2	; select bank2
  4919  0E86  148E               	bsf	14,1	;volatile
  4920  0E87  2E8A               	goto	u2784
  4921  0E88                     u2770:
  4922  0E88  0022               	movlb	2	; select bank2
  4923  0E89  108E               	bcf	14,1	;volatile
  4924  0E8A                     u2784:
  4925  0E8A  1C8E               	btfss	14,1	;volatile
  4926  0E8B  2E8F               	goto	u2780
  4927  0E8C  0022               	movlb	2	; select bank2
  4928  0E8D  150E               	bsf	14,2	;volatile
  4929  0E8E  0008               	return
  4930  0E8F                     u2780:
  4931  0E8F  0022               	movlb	2	; select bank2
  4932  0E90  110E               	bcf	14,2	;volatile
  4933                           
  4934                           ;User/newmain.c: 342:         break;
  4935  0E91  0008               	return
  4936  0E92                     l478:	
  4937                           ;User/newmain.c: 343:     case 2:
  4938                           
  4939                           
  4940                           ;User/newmain.c: 344:         LATCbits.LATC2 = 0;
  4941  0E92  0022               	movlb	2	; select bank2
  4942  0E93  110E               	bcf	14,2	;volatile
  4943                           
  4944                           ;User/newmain.c: 345:         LATBbits.LATB6 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4945  0E94  150C               	bsf	12,2	;volatile
  4946  0E95  1D0C               	btfss	12,2	;volatile
  4947  0E96  2E9A               	goto	u2800
  4948  0E97  0022               	movlb	2	; select bank2
  4949  0E98  140E               	bsf	14,0	;volatile
  4950  0E99  2E9C               	goto	u2814
  4951  0E9A                     u2800:
  4952  0E9A  0022               	movlb	2	; select bank2
  4953  0E9B  100E               	bcf	14,0	;volatile
  4954  0E9C                     u2814:
  4955  0E9C  1C0E               	btfss	14,0	;volatile
  4956  0E9D  2EA1               	goto	u2810
  4957  0E9E  0022               	movlb	2	; select bank2
  4958  0E9F  148E               	bsf	14,1	;volatile
  4959  0EA0  2EA3               	goto	u2824
  4960  0EA1                     u2810:
  4961  0EA1  0022               	movlb	2	; select bank2
  4962  0EA2  108E               	bcf	14,1	;volatile
  4963  0EA3                     u2824:
  4964  0EA3  1C8E               	btfss	14,1	;volatile
  4965  0EA4  2EA8               	goto	u2820
  4966  0EA5  0022               	movlb	2	; select bank2
  4967  0EA6  170D               	bsf	13,6	;volatile
  4968  0EA7  0008               	return
  4969  0EA8                     u2820:
  4970  0EA8  0022               	movlb	2	; select bank2
  4971  0EA9  130D               	bcf	13,6	;volatile
  4972                           
  4973                           ;User/newmain.c: 346:         break;
  4974  0EAA  0008               	return
  4975  0EAB                     l479:	
  4976                           ;User/newmain.c: 347:     case 3:
  4977                           
  4978                           
  4979                           ;User/newmain.c: 348:         LATCbits.LATC1 = 0;
  4980  0EAB  0022               	movlb	2	; select bank2
  4981  0EAC  108E               	bcf	14,1	;volatile
  4982                           
  4983                           ;User/newmain.c: 349:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4984  0EAD  150C               	bsf	12,2	;volatile
  4985  0EAE  1D0C               	btfss	12,2	;volatile
  4986  0EAF  2EB3               	goto	u2840
  4987  0EB0  0022               	movlb	2	; select bank2
  4988  0EB1  140E               	bsf	14,0	;volatile
  4989  0EB2  2EB5               	goto	u2854
  4990  0EB3                     u2840:
  4991  0EB3  0022               	movlb	2	; select bank2
  4992  0EB4  100E               	bcf	14,0	;volatile
  4993  0EB5                     u2854:
  4994  0EB5  1C0E               	btfss	14,0	;volatile
  4995  0EB6  2EBA               	goto	u2850
  4996  0EB7  0022               	movlb	2	; select bank2
  4997  0EB8  150E               	bsf	14,2	;volatile
  4998  0EB9  2EBC               	goto	u2864
  4999  0EBA                     u2850:
  5000  0EBA  0022               	movlb	2	; select bank2
  5001  0EBB  110E               	bcf	14,2	;volatile
  5002  0EBC                     u2864:
  5003  0EBC  1D0E               	btfss	14,2	;volatile
  5004  0EBD  2EC1               	goto	u2860
  5005  0EBE  0022               	movlb	2	; select bank2
  5006  0EBF  170D               	bsf	13,6	;volatile
  5007  0EC0  0008               	return
  5008  0EC1                     u2860:
  5009  0EC1  0022               	movlb	2	; select bank2
  5010  0EC2  130D               	bcf	13,6	;volatile
  5011                           
  5012                           ;User/newmain.c: 350:         break;
  5013  0EC3  0008               	return
  5014  0EC4                     l480:	
  5015                           ;User/newmain.c: 351:     case 4:
  5016                           
  5017                           
  5018                           ;User/newmain.c: 352:         LATCbits.LATC0 = 0;
  5019  0EC4  0022               	movlb	2	; select bank2
  5020  0EC5  100E               	bcf	14,0	;volatile
  5021                           
  5022                           ;User/newmain.c: 353:         LATCbits.LATC2 = LATCbits.LATC1 = LATBbits.LATB6 = LATAbit
      +                          s.LATA2 = 1;
  5023  0EC6  150C               	bsf	12,2	;volatile
  5024  0EC7  1D0C               	btfss	12,2	;volatile
  5025  0EC8  2ECC               	goto	u2880
  5026  0EC9  0022               	movlb	2	; select bank2
  5027  0ECA  170D               	bsf	13,6	;volatile
  5028  0ECB  2ECE               	goto	u2894
  5029  0ECC                     u2880:
  5030  0ECC  0022               	movlb	2	; select bank2
  5031  0ECD  130D               	bcf	13,6	;volatile
  5032  0ECE                     u2894:
  5033  0ECE  1F0D               	btfss	13,6	;volatile
  5034  0ECF  2ED3               	goto	u2890
  5035  0ED0  0022               	movlb	2	; select bank2
  5036  0ED1  148E               	bsf	14,1	;volatile
  5037  0ED2  2ED5               	goto	u2904
  5038  0ED3                     u2890:
  5039  0ED3  0022               	movlb	2	; select bank2
  5040  0ED4  108E               	bcf	14,1	;volatile
  5041  0ED5                     u2904:
  5042  0ED5  1C8E               	btfss	14,1	;volatile
  5043  0ED6  2EDA               	goto	u2900
  5044  0ED7  0022               	movlb	2	; select bank2
  5045  0ED8  150E               	bsf	14,2	;volatile
  5046  0ED9  0008               	return
  5047  0EDA                     u2900:
  5048  0EDA  0022               	movlb	2	; select bank2
  5049  0EDB  110E               	bcf	14,2	;volatile
  5050                           
  5051                           ;User/newmain.c: 354:         break;
  5052  0EDC  0008               	return
  5053  0EDD                     l481:	
  5054                           ;User/newmain.c: 355:     case 5:
  5055                           
  5056                           
  5057                           ;User/newmain.c: 356:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbit
      +                          s.LATC0 = 1;
  5058  0EDD  0022               	movlb	2	; select bank2
  5059  0EDE  140E               	bsf	14,0	;volatile
  5060  0EDF  1C0E               	btfss	14,0	;volatile
  5061  0EE0  2EE4               	goto	u2920
  5062  0EE1  0022               	movlb	2	; select bank2
  5063  0EE2  148E               	bsf	14,1	;volatile
  5064  0EE3  2EE6               	goto	u2934
  5065  0EE4                     u2920:
  5066  0EE4  0022               	movlb	2	; select bank2
  5067  0EE5  108E               	bcf	14,1	;volatile
  5068  0EE6                     u2934:
  5069  0EE6  1C8E               	btfss	14,1	;volatile
  5070  0EE7  2EEB               	goto	u2930
  5071  0EE8  0022               	movlb	2	; select bank2
  5072  0EE9  150E               	bsf	14,2	;volatile
  5073  0EEA  2EED               	goto	u2944
  5074  0EEB                     u2930:
  5075  0EEB  0022               	movlb	2	; select bank2
  5076  0EEC  110E               	bcf	14,2	;volatile
  5077  0EED                     u2944:
  5078  0EED  1D0E               	btfss	14,2	;volatile
  5079  0EEE  2EF2               	goto	u2940
  5080  0EEF  0022               	movlb	2	; select bank2
  5081  0EF0  170D               	bsf	13,6	;volatile
  5082  0EF1  2EF4               	goto	u2954
  5083  0EF2                     u2940:
  5084  0EF2  0022               	movlb	2	; select bank2
  5085  0EF3  130D               	bcf	13,6	;volatile
  5086  0EF4                     u2954:
  5087                           
  5088                           ;User/newmain.c: 357:         LATAbits.LATA2 = 0;
  5089  0EF4  110C               	bcf	12,2	;volatile
  5090                           
  5091                           ;User/newmain.c: 358:         break;
  5092  0EF5  0008               	return
  5093  0EF6                     l482:	
  5094                           ;User/newmain.c: 359:     default:
  5095                           
  5096                           
  5097                           ;User/newmain.c: 360:         LATBbits.LATB6 = 1;
  5098  0EF6  0022               	movlb	2	; select bank2
  5099  0EF7  170D               	bsf	13,6	;volatile
  5100                           
  5101                           ;User/newmain.c: 361:         LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  5102  0EF8  150C               	bsf	12,2	;volatile
  5103  0EF9  1D0C               	btfss	12,2	;volatile
  5104  0EFA  2EFE               	goto	u2960
  5105  0EFB  0022               	movlb	2	; select bank2
  5106  0EFC  140E               	bsf	14,0	;volatile
  5107  0EFD  2F00               	goto	u2974
  5108  0EFE                     u2960:
  5109  0EFE  0022               	movlb	2	; select bank2
  5110  0EFF  100E               	bcf	14,0	;volatile
  5111  0F00                     u2974:
  5112  0F00  1C0E               	btfss	14,0	;volatile
  5113  0F01  2F05               	goto	u2970
  5114  0F02  0022               	movlb	2	; select bank2
  5115  0F03  148E               	bsf	14,1	;volatile
  5116  0F04  2F07               	goto	u2984
  5117  0F05                     u2970:
  5118  0F05  0022               	movlb	2	; select bank2
  5119  0F06  108E               	bcf	14,1	;volatile
  5120  0F07                     u2984:
  5121  0F07  1C8E               	btfss	14,1	;volatile
  5122  0F08  2F0C               	goto	u2980
  5123  0F09  0022               	movlb	2	; select bank2
  5124  0F0A  150E               	bsf	14,2	;volatile
  5125  0F0B  0008               	return
  5126  0F0C                     u2980:
  5127  0F0C  0022               	movlb	2	; select bank2
  5128  0F0D  110E               	bcf	14,2	;volatile
  5129                           
  5130                           ;User/newmain.c: 362:         break;
  5131  0F0E  0008               	return
  5132  0F0F                     l2634:
  5133  0F0F  0021               	movlb	1	; select bank1
  5134  0F10  0859               	movf	_MinS_Cnt^(0+128),w
  5135  0F11  00F0               	movwf	??_LED_Show
  5136  0F12  01F1               	clrf	??_LED_Show+1
  5137                           
  5138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5139                           ; Switch size 1, requested type "simple"
  5140                           ; Number of cases is 1, Range of values is 0 to 0
  5141                           ; switch strategies available:
  5142                           ; Name         Instructions Cycles
  5143                           ; simple_byte            4     3 (average)
  5144                           ; direct_byte            8     6 (fixed)
  5145                           ; jumptable            260     6 (fixed)
  5146                           ;	Chosen strategy is simple_byte
  5147  0F13  0871               	movf	??_LED_Show+1,w
  5148  0F14  3A00               	xorlw	0	; case 0
  5149  0F15  1903               	skipnz
  5150  0F16  2F18               	goto	l4026
  5151  0F17  2EF6               	goto	l482
  5152  0F18                     l4026:
  5153                           
  5154                           ; Switch size 1, requested type "simple"
  5155                           ; Number of cases is 5, Range of values is 1 to 5
  5156                           ; switch strategies available:
  5157                           ; Name         Instructions Cycles
  5158                           ; simple_byte           16     9 (average)
  5159                           ; direct_byte           19     9 (fixed)
  5160                           ; jumptable            263     9 (fixed)
  5161                           ;	Chosen strategy is simple_byte
  5162  0F18  0870               	movf	??_LED_Show,w
  5163  0F19  3A01               	xorlw	1	; case 1
  5164  0F1A  1903               	skipnz
  5165  0F1B  2E79               	goto	l476
  5166  0F1C  3A03               	xorlw	3	; case 2
  5167  0F1D  1903               	skipnz
  5168  0F1E  2E92               	goto	l478
  5169  0F1F  3A01               	xorlw	1	; case 3
  5170  0F20  1903               	skipnz
  5171  0F21  2EAB               	goto	l479
  5172  0F22  3A07               	xorlw	7	; case 4
  5173  0F23  1903               	skipnz
  5174  0F24  2EC4               	goto	l480
  5175  0F25  3A01               	xorlw	1	; case 5
  5176  0F26  1903               	skipnz
  5177  0F27  2EDD               	goto	l481
  5178  0F28  2EF6               	goto	l482
  5179  0F29  0008               	return
  5180  0F2A                     __end_of_LED_Show:
  5181                           
  5182                           	psect	text15
  5183  0AA7                     __ptext15:	
  5184 ;; *************** function _T1s_Event *****************
  5185 ;; Defined at:
  5186 ;;		line 293 in file "User/newmain.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5200 ;;      Params:         0       0       0       0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _T1s_Event
  5215  0AA7                     _T1s_Event:
  5216                           
  5217                           ;User/newmain.c: 295:     Flg.bits.T1s_B4 = 0;
  5218                           
  5219                           ;incstack = 0
  5220                           ; Regs used in _T1s_Event: [wreg+status,2+status,0]
  5221  0AA7  0020               	movlb	0	; select bank0
  5222  0AA8  126F               	bcf	_Flg,4	;volatile
  5223                           
  5224                           ;User/newmain.c: 298:     if (Flg.bits.PWON_B0 == 1)
  5225  0AA9  1C6F               	btfss	_Flg,0	;volatile
  5226  0AAA  0008               	return
  5227                           
  5228                           ;User/newmain.c: 299:     {;User/newmain.c: 300:         if ((Flg2.Flg2Byte & 0x85) != 0
      +                          )
  5229  0AAB  086E               	movf	_Flg2,w	;volatile
  5230  0AAC  3985               	andlw	133
  5231  0AAD  1903               	btfsc	3,2
  5232  0AAE  2ABC               	goto	l464
  5233                           
  5234                           ;User/newmain.c: 301:         {;User/newmain.c: 302:             LATAbits.LATA1 = 1;
  5235  0AAF  0022               	movlb	2	; select bank2
  5236  0AB0  148C               	bsf	12,1	;volatile
  5237                           
  5238                           ;User/newmain.c: 303:             LATAbits.LATA5 = !LATAbits.LATA5;
  5239  0AB1  1003               	clrc
  5240  0AB2  1E8C               	btfss	12,5	;volatile
  5241  0AB3  1403               	setc
  5242  0AB4  1C03               	btfss	3,0
  5243  0AB5  2AB9               	goto	u3930
  5244  0AB6  0022               	movlb	2	; select bank2
  5245  0AB7  168C               	bsf	12,5	;volatile
  5246  0AB8  0008               	return
  5247  0AB9                     u3930:
  5248  0AB9  0022               	movlb	2	; select bank2
  5249  0ABA  128C               	bcf	12,5	;volatile
  5250                           
  5251                           ;User/newmain.c: 304:         }
  5252  0ABB  0008               	return
  5253  0ABC                     l464:	
  5254                           ;User/newmain.c: 305:         else
  5255                           
  5256                           
  5257                           ;User/newmain.c: 306:         {;User/newmain.c: 307:             LATAbits.LATA5 = 1;
  5258  0ABC  0022               	movlb	2	; select bank2
  5259  0ABD  168C               	bsf	12,5	;volatile
  5260                           
  5261                           ;User/newmain.c: 308:             LATAbits.LATA1 = 0;
  5262  0ABE  108C               	bcf	12,1	;volatile
  5263  0ABF  0008               	return
  5264  0AC0                     __end_of_T1s_Event:
  5265                           
  5266                           	psect	text16
  5267  0A36                     __ptext16:	
  5268 ;; *************** function _T100ms_Event *****************
  5269 ;; Defined at:
  5270 ;;		line 201 in file "User/newmain.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		None
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5284 ;;      Params:         0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used: 1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function _T100ms_Event
  5299  0A36                     _T100ms_Event:
  5300                           
  5301                           ;User/newmain.c: 203:     Flg.bits.T100ms_B2 = 0;
  5302                           
  5303                           ;incstack = 0
  5304                           ; Regs used in _T100ms_Event: []
  5305  0A36  0020               	movlb	0	; select bank0
  5306  0A37  116F               	bcf	_Flg,2	;volatile
  5307  0A38  0008               	return
  5308  0A39                     __end_of_T100ms_Event:
  5309                           
  5310                           	psect	text17
  5311  000B                     __ptext17:	
  5312 ;; *************** function _ScanF *****************
  5313 ;; Defined at:
  5314 ;;		line 57 in file "User/Fog.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  j1              1    9[COMMON] unsigned char 
  5319 ;;  j               1    0        unsigned char 
  5320 ;;  i               1    0        unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5330 ;;      Params:         0       0       0       0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0       0       0       0
  5332 ;;      Temps:          0       6       0       0       0       0       0       0
  5333 ;;      Totals:         1       6       0       0       0       0       0       0
  5334 ;;Total ram usage:        7 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 2
  5337 ;; This function calls:
  5338 ;;		_GetADC
  5339 ;;		_PWMOFF
  5340 ;;		_PWMON
  5341 ;; This function is called by:
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           
  5347                           ;psect for function _ScanF
  5348  000B                     _ScanF:
  5349                           
  5350                           ;User/Fog.c: 59:     ubyte i, j, j1;;User/Fog.c: 61:     getcnt = 0;
  5351                           
  5352                           ;incstack = 0
  5353                           ; Regs used in _ScanF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5354  000B  0021               	movlb	1	; select bank1
  5355  000C  01E2               	clrf	_getcnt^(0+128)
  5356                           
  5357                           ;User/Fog.c: 62:     CurMax = 0;
  5358  000D  01D2               	clrf	_CurMax^(0+128)
  5359  000E  01D3               	clrf	(_CurMax+1)^(0+128)
  5360                           
  5361                           ;User/Fog.c: 64:     bFors_High = LATCbits.LATC6;
  5362  000F  3000               	movlw	0
  5363  0010  0022               	movlb	2	; select bank2
  5364  0011  1B0E               	btfsc	14,6	;volatile
  5365  0012  3001               	movlw	1
  5366  0013  0021               	movlb	1	; select bank1
  5367  0014  00E1               	movwf	_bFors_High^(0+128)
  5368                           
  5369                           ;User/Fog.c: 65:     LATCbits.LATC6 = 0;
  5370  0015  0022               	movlb	2	; select bank2
  5371  0016  130E               	bcf	14,6	;volatile
  5372  0017                     l69:	
  5373                           ;User/Fog.c: 68:         ;
  5374                           
  5375                           
  5376                           ;User/Fog.c: 67:     while (Flg.bits.T4ms_B7 == 0)
  5377  0017  0020               	movlb	0	; select bank0
  5378  0018  1FEF               	btfss	_Flg,7	;volatile
  5379  0019  2817               	goto	l69
  5380                           
  5381                           ;User/Fog.c: 69:     Flg.bits.T4ms_B7 = 0;
  5382  001A  13EF               	bcf	_Flg,7	;volatile
  5383  001B                     l72:	
  5384                           ;User/Fog.c: 71:         ;
  5385                           
  5386                           
  5387                           ;User/Fog.c: 70:     while (Flg.bits.T4ms_B7 == 0)
  5388  001B  1FEF               	btfss	_Flg,7	;volatile
  5389  001C  281B               	goto	l72
  5390                           
  5391                           ;User/Fog.c: 72:     Flg.bits.T4ms_B7 = 0;
  5392  001D  13EF               	bcf	_Flg,7	;volatile
  5393                           
  5394                           ;User/Fog.c: 75:     for (frq = 0; frq < 44; frq++)
  5395  001E  01EC               	clrf	_frq
  5396  001F                     l3630:
  5397                           
  5398                           ;User/Fog.c: 76:     {;User/Fog.c: 77:         PWM3PRH = PWMT[frq] >> 8;
  5399  001F  086C               	movf	_frq,w
  5400  0020  00A6               	movwf	??_ScanF
  5401  0021  01A7               	clrf	??_ScanF+1
  5402  0022  35A6               	lslf	??_ScanF,f
  5403  0023  0DA7               	rlf	??_ScanF+1,f
  5404  0024  3000               	movlw	low (_PWMT| (0+32768))
  5405  0025  0726               	addwf	??_ScanF,w
  5406  0026  0084               	movwf	4
  5407  0027  3088               	movlw	high (_PWMT| (0+32768))
  5408  0028  3D27               	addwfc	??_ScanF+1,w
  5409  0029  0085               	movwf	5
  5410  002A  3F00               	moviw [0]fsr0
  5411  002B  00A8               	movwf	??_ScanF+2
  5412  002C  3F01               	moviw [1]fsr0
  5413  002D  00A9               	movwf	??_ScanF+3
  5414  002E  0829               	movf	??_ScanF+3,w
  5415  002F  003B               	movlb	27	; select bank27
  5416  0030  00B6               	movwf	54	;volatile
  5417                           
  5418                           ;User/Fog.c: 78:         PWM3PRL = PWMT[frq] & 0xFF;
  5419  0031  0020               	movlb	0	; select bank0
  5420  0032  086C               	movf	_frq,w
  5421  0033  00A6               	movwf	??_ScanF
  5422  0034  01A7               	clrf	??_ScanF+1
  5423  0035  35A6               	lslf	??_ScanF,f
  5424  0036  0DA7               	rlf	??_ScanF+1,f
  5425  0037  3000               	movlw	low (_PWMT| (0+32768))
  5426  0038  0726               	addwf	??_ScanF,w
  5427  0039  0084               	movwf	4
  5428  003A  3088               	movlw	high (_PWMT| (0+32768))
  5429  003B  3D27               	addwfc	??_ScanF+1,w
  5430  003C  0085               	movwf	5
  5431  003D  0800               	movf	0,w	;code access
  5432  003E  003B               	movlb	27	; select bank27
  5433  003F  00B5               	movwf	53	;volatile
  5434                           
  5435                           ;User/Fog.c: 79:         PWM3DCH = 0;
  5436  0040  01B4               	clrf	52	;volatile
  5437                           
  5438                           ;User/Fog.c: 80:         PWM3DCL = (PWMT[frq] >> 1) + 1;
  5439  0041  0020               	movlb	0	; select bank0
  5440  0042  086C               	movf	_frq,w
  5441  0043  00A6               	movwf	??_ScanF
  5442  0044  01A7               	clrf	??_ScanF+1
  5443  0045  35A6               	lslf	??_ScanF,f
  5444  0046  0DA7               	rlf	??_ScanF+1,f
  5445  0047  3000               	movlw	low (_PWMT| (0+32768))
  5446  0048  0726               	addwf	??_ScanF,w
  5447  0049  0084               	movwf	4
  5448  004A  3088               	movlw	high (_PWMT| (0+32768))
  5449  004B  3D27               	addwfc	??_ScanF+1,w
  5450  004C  0085               	movwf	5
  5451  004D  3F00               	moviw [0]fsr0
  5452  004E  00A8               	movwf	??_ScanF+2
  5453  004F  3F01               	moviw [1]fsr0
  5454  0050  00A9               	movwf	??_ScanF+3
  5455  0051  36A9               	lsrf	??_ScanF+3,f
  5456  0052  0CA8               	rrf	??_ScanF+2,f
  5457  0053  0828               	movf	??_ScanF+2,w
  5458  0054  3E01               	addlw	1
  5459  0055  003B               	movlb	27	; select bank27
  5460  0056  00B3               	movwf	51	;volatile
  5461                           
  5462                           ;User/Fog.c: 81:         PWMON();
  5463  0057  3180  2005  3180   	fcall	_PWMON
  5464                           
  5465                           ;User/Fog.c: 84:         Flg.bits.T4ms_B7 = 0;
  5466  005A  0020               	movlb	0	; select bank0
  5467  005B  13EF               	bcf	_Flg,7	;volatile
  5468  005C                     l77:	
  5469                           ;User/Fog.c: 86:             ;
  5470                           
  5471                           
  5472                           ;User/Fog.c: 85:         while (Flg.bits.T4ms_B7 == 0)
  5473  005C  1FEF               	btfss	_Flg,7	;volatile
  5474  005D  285C               	goto	l77
  5475                           
  5476                           ;User/Fog.c: 87:         Flg.bits.T4ms_B7 = 0;
  5477  005E  13EF               	bcf	_Flg,7	;volatile
  5478                           
  5479                           ;User/Fog.c: 89:         for (j1 = 0; j1 < ScanWait; j1++)
  5480  005F  01F9               	clrf	ScanF@j1
  5481  0060                     l3644:
  5482  0060  0021               	movlb	1	; select bank1
  5483  0061  0860               	movf	_ScanWait^(0+128),w	;volatile
  5484  0062  0279               	subwf	ScanF@j1,w
  5485  0063  1803               	btfsc	3,0
  5486  0064  286C               	goto	l3646
  5487                           
  5488                           ;User/Fog.c: 90:         {;User/Fog.c: 92:             Flg.bits.T4ms_B7 = 0;
  5489  0065  0020               	movlb	0	; select bank0
  5490  0066  13EF               	bcf	_Flg,7	;volatile
  5491                           
  5492                           ;User/Fog.c: 93:         }
  5493  0067  3001               	movlw	1
  5494  0068  00A6               	movwf	??_ScanF
  5495  0069  0826               	movf	??_ScanF,w
  5496  006A  07F9               	addwf	ScanF@j1,f
  5497  006B  2860               	goto	l3644
  5498  006C                     l3646:
  5499                           
  5500                           ;User/Fog.c: 95:         CTA[frq] = GetADC(10);
  5501  006C  300A               	movlw	10
  5502  006D  318C  244B  3180   	fcall	_GetADC
  5503  0070  0020               	movlb	0	; select bank0
  5504  0071  086C               	movf	_frq,w
  5505  0072  00A6               	movwf	??_ScanF
  5506  0073  01A7               	clrf	??_ScanF+1
  5507  0074  35A6               	lslf	??_ScanF,f
  5508  0075  0DA7               	rlf	??_ScanF+1,f
  5509  0076  3098               	movlw	152
  5510  0077  00A8               	movwf	??_ScanF+2
  5511  0078  3021               	movlw	33
  5512  0079  00A9               	movwf	??_ScanF+3
  5513  007A  0826               	movf	??_ScanF,w
  5514  007B  0728               	addwf	??_ScanF+2,w
  5515  007C  0086               	movwf	6
  5516  007D  0827               	movf	??_ScanF+1,w
  5517  007E  3D29               	addwfc	??_ScanF+3,w
  5518  007F  0087               	movwf	7
  5519  0080  0875               	movf	?_GetADC,w
  5520  0081  3FC0               	movwi [0]fsr1
  5521  0082  0876               	movf	?_GetADC+1,w
  5522  0083  3FC1               	movwi [1]fsr1
  5523                           
  5524                           ;User/Fog.c: 97:         if (CTA[frq] > CurMax)
  5525  0084  086C               	movf	_frq,w
  5526  0085  00A6               	movwf	??_ScanF
  5527  0086  01A7               	clrf	??_ScanF+1
  5528  0087  35A6               	lslf	??_ScanF,f
  5529  0088  0DA7               	rlf	??_ScanF+1,f
  5530  0089  3098               	movlw	152
  5531  008A  00A8               	movwf	??_ScanF+2
  5532  008B  3021               	movlw	33
  5533  008C  00A9               	movwf	??_ScanF+3
  5534  008D  0826               	movf	??_ScanF,w
  5535  008E  0728               	addwf	??_ScanF+2,w
  5536  008F  0086               	movwf	6
  5537  0090  0827               	movf	??_ScanF+1,w
  5538  0091  3D29               	addwfc	??_ScanF+3,w
  5539  0092  0087               	movwf	7
  5540  0093  3F40               	moviw [0]fsr1
  5541  0094  00AA               	movwf	??_ScanF+4
  5542  0095  3F41               	moviw [1]fsr1
  5543  0096  00AB               	movwf	??_ScanF+5
  5544  0097  082B               	movf	??_ScanF+5,w
  5545  0098  0021               	movlb	1	; select bank1
  5546  0099  0253               	subwf	(_CurMax+1)^(0+128),w
  5547  009A  1D03               	skipz
  5548  009B  28A0               	goto	u4995
  5549  009C  0020               	movlb	0	; select bank0
  5550  009D  082A               	movf	??_ScanF+4,w
  5551  009E  0021               	movlb	1	; select bank1
  5552  009F  0252               	subwf	_CurMax^(0+128),w
  5553  00A0                     u4995:
  5554  00A0  1803               	skipnc
  5555  00A1  28B7               	goto	l3652
  5556                           
  5557                           ;User/Fog.c: 98:             CurMax = CTA[frq];
  5558  00A2  0020               	movlb	0	; select bank0
  5559  00A3  086C               	movf	_frq,w
  5560  00A4  00A6               	movwf	??_ScanF
  5561  00A5  01A7               	clrf	??_ScanF+1
  5562  00A6  35A6               	lslf	??_ScanF,f
  5563  00A7  0DA7               	rlf	??_ScanF+1,f
  5564  00A8  3098               	movlw	152
  5565  00A9  00A8               	movwf	??_ScanF+2
  5566  00AA  3021               	movlw	33
  5567  00AB  00A9               	movwf	??_ScanF+3
  5568  00AC  0826               	movf	??_ScanF,w
  5569  00AD  0728               	addwf	??_ScanF+2,w
  5570  00AE  0086               	movwf	6
  5571  00AF  0827               	movf	??_ScanF+1,w
  5572  00B0  3D29               	addwfc	??_ScanF+3,w
  5573  00B1  0087               	movwf	7
  5574  00B2  3F40               	moviw [0]fsr1
  5575  00B3  0021               	movlb	1	; select bank1
  5576  00B4  00D2               	movwf	_CurMax^(0+128)
  5577  00B5  3F41               	moviw [1]fsr1
  5578  00B6  00D3               	movwf	(_CurMax+1)^(0+128)
  5579  00B7                     l3652:
  5580                           
  5581                           ;User/Fog.c: 99:     }
  5582  00B7  3001               	movlw	1
  5583  00B8  0020               	movlb	0	; select bank0
  5584  00B9  00A6               	movwf	??_ScanF
  5585  00BA  0826               	movf	??_ScanF,w
  5586  00BB  07EC               	addwf	_frq,f
  5587  00BC  302C               	movlw	44
  5588  00BD  026C               	subwf	_frq,w
  5589  00BE  1C03               	skipc
  5590  00BF  281F               	goto	l3630
  5591                           
  5592                           ;User/Fog.c: 100:     PWMOFF();
  5593  00C0  318A  227C  3180   	fcall	_PWMOFF
  5594                           
  5595                           ;User/Fog.c: 101:     __nop();
  5596  00C3  0000               	nop
  5597                           
  5598                           ;User/Fog.c: 102:     __nop();
  5599  00C4  0000               	nop
  5600                           
  5601                           ;User/Fog.c: 103:     __nop();
  5602  00C5  0000               	nop
  5603                           
  5604                           ;User/Fog.c: 105:     for (frq = 0; frq < 44; frq++)
  5605  00C6  0020               	movlb	0	; select bank0
  5606  00C7  01EC               	clrf	_frq
  5607  00C8                     l3670:
  5608                           
  5609                           ;User/Fog.c: 107:         if ((CTA[frq] < CurMax) && (CTA[frq] > CurMax2))
  5610  00C8  086C               	movf	_frq,w
  5611  00C9  00A6               	movwf	??_ScanF
  5612  00CA  01A7               	clrf	??_ScanF+1
  5613  00CB  35A6               	lslf	??_ScanF,f
  5614  00CC  0DA7               	rlf	??_ScanF+1,f
  5615  00CD  3098               	movlw	152
  5616  00CE  00A8               	movwf	??_ScanF+2
  5617  00CF  3021               	movlw	33
  5618  00D0  00A9               	movwf	??_ScanF+3
  5619  00D1  0826               	movf	??_ScanF,w
  5620  00D2  0728               	addwf	??_ScanF+2,w
  5621  00D3  0086               	movwf	6
  5622  00D4  0827               	movf	??_ScanF+1,w
  5623  00D5  3D29               	addwfc	??_ScanF+3,w
  5624  00D6  0087               	movwf	7
  5625  00D7  3F40               	moviw [0]fsr1
  5626  00D8  00AA               	movwf	??_ScanF+4
  5627  00D9  3F41               	moviw [1]fsr1
  5628  00DA  00AB               	movwf	??_ScanF+5
  5629  00DB  0021               	movlb	1	; select bank1
  5630  00DC  0853               	movf	(_CurMax+1)^(0+128),w
  5631  00DD  0020               	movlb	0	; select bank0
  5632  00DE  022B               	subwf	??_ScanF+5,w
  5633  00DF  1D03               	skipz
  5634  00E0  28E5               	goto	u5015
  5635  00E1  0021               	movlb	1	; select bank1
  5636  00E2  0852               	movf	_CurMax^(0+128),w
  5637  00E3  0020               	movlb	0	; select bank0
  5638  00E4  022A               	subwf	??_ScanF+4,w
  5639  00E5                     u5015:
  5640  00E5  1803               	skipnc
  5641  00E6  291A               	goto	l3676
  5642  00E7  086C               	movf	_frq,w
  5643  00E8  00A6               	movwf	??_ScanF
  5644  00E9  01A7               	clrf	??_ScanF+1
  5645  00EA  35A6               	lslf	??_ScanF,f
  5646  00EB  0DA7               	rlf	??_ScanF+1,f
  5647  00EC  3098               	movlw	152
  5648  00ED  00A8               	movwf	??_ScanF+2
  5649  00EE  3021               	movlw	33
  5650  00EF  00A9               	movwf	??_ScanF+3
  5651  00F0  0826               	movf	??_ScanF,w
  5652  00F1  0728               	addwf	??_ScanF+2,w
  5653  00F2  0086               	movwf	6
  5654  00F3  0827               	movf	??_ScanF+1,w
  5655  00F4  3D29               	addwfc	??_ScanF+3,w
  5656  00F5  0087               	movwf	7
  5657  00F6  3F40               	moviw [0]fsr1
  5658  00F7  00AA               	movwf	??_ScanF+4
  5659  00F8  3F41               	moviw [1]fsr1
  5660  00F9  00AB               	movwf	??_ScanF+5
  5661  00FA  082B               	movf	??_ScanF+5,w
  5662  00FB  0021               	movlb	1	; select bank1
  5663  00FC  0251               	subwf	(_CurMax2+1)^(0+128),w
  5664  00FD  1D03               	skipz
  5665  00FE  2903               	goto	u5025
  5666  00FF  0020               	movlb	0	; select bank0
  5667  0100  082A               	movf	??_ScanF+4,w
  5668  0101  0021               	movlb	1	; select bank1
  5669  0102  0250               	subwf	_CurMax2^(0+128),w
  5670  0103                     u5025:
  5671  0103  1803               	skipnc
  5672  0104  291A               	goto	l3676
  5673                           
  5674                           ;User/Fog.c: 108:             CurMax2 = CTA[frq];
  5675  0105  0020               	movlb	0	; select bank0
  5676  0106  086C               	movf	_frq,w
  5677  0107  00A6               	movwf	??_ScanF
  5678  0108  01A7               	clrf	??_ScanF+1
  5679  0109  35A6               	lslf	??_ScanF,f
  5680  010A  0DA7               	rlf	??_ScanF+1,f
  5681  010B  3098               	movlw	152
  5682  010C  00A8               	movwf	??_ScanF+2
  5683  010D  3021               	movlw	33
  5684  010E  00A9               	movwf	??_ScanF+3
  5685  010F  0826               	movf	??_ScanF,w
  5686  0110  0728               	addwf	??_ScanF+2,w
  5687  0111  0086               	movwf	6
  5688  0112  0827               	movf	??_ScanF+1,w
  5689  0113  3D29               	addwfc	??_ScanF+3,w
  5690  0114  0087               	movwf	7
  5691  0115  3F40               	moviw [0]fsr1
  5692  0116  0021               	movlb	1	; select bank1
  5693  0117  00D0               	movwf	_CurMax2^(0+128)
  5694  0118  3F41               	moviw [1]fsr1
  5695  0119  00D1               	movwf	(_CurMax2+1)^(0+128)
  5696  011A                     l3676:
  5697  011A  3001               	movlw	1
  5698  011B  0020               	movlb	0	; select bank0
  5699  011C  00A6               	movwf	??_ScanF
  5700  011D  0826               	movf	??_ScanF,w
  5701  011E  07EC               	addwf	_frq,f
  5702  011F  302C               	movlw	44
  5703  0120  026C               	subwf	_frq,w
  5704  0121  1C03               	skipc
  5705  0122  28C8               	goto	l3670
  5706                           
  5707                           ;User/Fog.c: 109:     __nop();
  5708  0123  0000               	nop
  5709                           
  5710                           ;User/Fog.c: 110:     __nop();
  5711  0124  0000               	nop
  5712                           
  5713                           ;User/Fog.c: 111:     for (frq = 0; frq < 44; frq++)
  5714  0125  0020               	movlb	0	; select bank0
  5715  0126  01EC               	clrf	_frq
  5716  0127                     l3686:
  5717                           
  5718                           ;User/Fog.c: 112:         if (CTA[frq] == CurMax2)
  5719  0127  086C               	movf	_frq,w
  5720  0128  00A6               	movwf	??_ScanF
  5721  0129  01A7               	clrf	??_ScanF+1
  5722  012A  35A6               	lslf	??_ScanF,f
  5723  012B  0DA7               	rlf	??_ScanF+1,f
  5724  012C  3098               	movlw	152
  5725  012D  00A8               	movwf	??_ScanF+2
  5726  012E  3021               	movlw	33
  5727  012F  00A9               	movwf	??_ScanF+3
  5728  0130  0826               	movf	??_ScanF,w
  5729  0131  0728               	addwf	??_ScanF+2,w
  5730  0132  0086               	movwf	6
  5731  0133  0827               	movf	??_ScanF+1,w
  5732  0134  3D29               	addwfc	??_ScanF+3,w
  5733  0135  0087               	movwf	7
  5734  0136  3F40               	moviw [0]fsr1
  5735  0137  00AA               	movwf	??_ScanF+4
  5736  0138  3F41               	moviw [1]fsr1
  5737  0139  00AB               	movwf	??_ScanF+5
  5738  013A  0021               	movlb	1	; select bank1
  5739  013B  0851               	movf	(_CurMax2+1)^(0+128),w
  5740  013C  0020               	movlb	0	; select bank0
  5741  013D  062B               	xorwf	??_ScanF+5,w
  5742  013E  1D03               	skipz
  5743  013F  2944               	goto	u5045
  5744  0140  0021               	movlb	1	; select bank1
  5745  0141  0850               	movf	_CurMax2^(0+128),w
  5746  0142  0020               	movlb	0	; select bank0
  5747  0143  062A               	xorwf	??_ScanF+4,w
  5748  0144                     u5045:
  5749  0144  1903               	btfsc	3,2
  5750  0145  294E               	goto	l3694
  5751  0146  3001               	movlw	1
  5752  0147  00A6               	movwf	??_ScanF
  5753  0148  0826               	movf	??_ScanF,w
  5754  0149  07EC               	addwf	_frq,f
  5755  014A  302C               	movlw	44
  5756  014B  026C               	subwf	_frq,w
  5757  014C  1C03               	skipc
  5758  014D  2927               	goto	l3686
  5759  014E                     l3694:
  5760                           
  5761                           ;User/Fog.c: 116:     frq -= 5;
  5762  014E  3005               	movlw	5
  5763  014F  02EC               	subwf	_frq,f
  5764                           
  5765                           ;User/Fog.c: 117:     PWM3PRH = PWMT[frq] >> 8;
  5766  0150  086C               	movf	_frq,w
  5767  0151  00A6               	movwf	??_ScanF
  5768  0152  01A7               	clrf	??_ScanF+1
  5769  0153  35A6               	lslf	??_ScanF,f
  5770  0154  0DA7               	rlf	??_ScanF+1,f
  5771  0155  3000               	movlw	low (_PWMT| (0+32768))
  5772  0156  0726               	addwf	??_ScanF,w
  5773  0157  0084               	movwf	4
  5774  0158  3088               	movlw	high (_PWMT| (0+32768))
  5775  0159  3D27               	addwfc	??_ScanF+1,w
  5776  015A  0085               	movwf	5
  5777  015B  3F00               	moviw [0]fsr0
  5778  015C  00A8               	movwf	??_ScanF+2
  5779  015D  3F01               	moviw [1]fsr0
  5780  015E  00A9               	movwf	??_ScanF+3
  5781  015F  0829               	movf	??_ScanF+3,w
  5782  0160  003B               	movlb	27	; select bank27
  5783  0161  00B6               	movwf	54	;volatile
  5784                           
  5785                           ;User/Fog.c: 118:     PWM3PRL = PWMT[frq] & 0xFF;
  5786  0162  0020               	movlb	0	; select bank0
  5787  0163  086C               	movf	_frq,w
  5788  0164  00A6               	movwf	??_ScanF
  5789  0165  01A7               	clrf	??_ScanF+1
  5790  0166  35A6               	lslf	??_ScanF,f
  5791  0167  0DA7               	rlf	??_ScanF+1,f
  5792  0168  3000               	movlw	low (_PWMT| (0+32768))
  5793  0169  0726               	addwf	??_ScanF,w
  5794  016A  0084               	movwf	4
  5795  016B  3088               	movlw	high (_PWMT| (0+32768))
  5796  016C  3D27               	addwfc	??_ScanF+1,w
  5797  016D  0085               	movwf	5
  5798  016E  0800               	movf	0,w	;code access
  5799  016F  003B               	movlb	27	; select bank27
  5800  0170  00B5               	movwf	53	;volatile
  5801                           
  5802                           ;User/Fog.c: 119:     PWM3DCH = 0;
  5803  0171  01B4               	clrf	52	;volatile
  5804                           
  5805                           ;User/Fog.c: 120:     PWM3DCL = (PWMT[frq] >> 1) + 1;
  5806  0172  0020               	movlb	0	; select bank0
  5807  0173  086C               	movf	_frq,w
  5808  0174  00A6               	movwf	??_ScanF
  5809  0175  01A7               	clrf	??_ScanF+1
  5810  0176  35A6               	lslf	??_ScanF,f
  5811  0177  0DA7               	rlf	??_ScanF+1,f
  5812  0178  3000               	movlw	low (_PWMT| (0+32768))
  5813  0179  0726               	addwf	??_ScanF,w
  5814  017A  0084               	movwf	4
  5815  017B  3088               	movlw	high (_PWMT| (0+32768))
  5816  017C  3D27               	addwfc	??_ScanF+1,w
  5817  017D  0085               	movwf	5
  5818  017E  3F00               	moviw [0]fsr0
  5819  017F  00A8               	movwf	??_ScanF+2
  5820  0180  3F01               	moviw [1]fsr0
  5821  0181  00A9               	movwf	??_ScanF+3
  5822  0182  36A9               	lsrf	??_ScanF+3,f
  5823  0183  0CA8               	rrf	??_ScanF+2,f
  5824  0184  0828               	movf	??_ScanF+2,w
  5825  0185  3E01               	addlw	1
  5826  0186  003B               	movlb	27	; select bank27
  5827  0187  00B3               	movwf	51	;volatile
  5828                           
  5829                           ;User/Fog.c: 124:     LATCbits.LATC6 = bFors_High;
  5830  0188  0021               	movlb	1	; select bank1
  5831  0189  0C61               	rrf	_bFors_High^(0+128),w
  5832  018A  0022               	movlb	2	; select bank2
  5833  018B  1C03               	skipc
  5834  018C  130E               	bcf	14,6	;volatile
  5835  018D  1803               	skipnc
  5836  018E  170E               	bsf	14,6	;volatile
  5837                           
  5838                           ;User/Fog.c: 126:     __nop();
  5839  018F  0000               	nop
  5840                           
  5841                           ;User/Fog.c: 127:     __nop();
  5842  0190  0000               	nop
  5843                           
  5844                           ;User/Fog.c: 128:     __nop();
  5845  0191  0000               	nop
  5846                           
  5847                           ;User/Fog.c: 129:     PWMON();
  5848  0192  3180  2005         	fcall	_PWMON
  5849                           
  5850                           ;User/Fog.c: 131:     OSCTUNE = 0;
  5851  0194  0021               	movlb	1	; select bank1
  5852  0195  0198               	clrf	24	;volatile
  5853  0196  0008               	return
  5854  0197                     __end_of_ScanF:
  5855                           
  5856                           	psect	text18
  5857  0B71                     __ptext18:	
  5858 ;; *************** function _KeyPro *****************
  5859 ;; Defined at:
  5860 ;;		line 381 in file "User/newmain.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;  i               1    0        unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  1    wreg      void 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5874 ;;      Params:         0       0       0       0       0       0       0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0
  5876 ;;      Temps:          1       0       0       0       0       0       0       0
  5877 ;;      Totals:         1       0       0       0       0       0       0       0
  5878 ;;Total ram usage:        1 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; Hardware stack levels required when called: 2
  5881 ;; This function calls:
  5882 ;;		_LED_OFF
  5883 ;;		_PWMON
  5884 ;; This function is called by:
  5885 ;;		_main
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           
  5889                           
  5890                           ;psect for function _KeyPro
  5891  0B71                     _KeyPro:
  5892                           
  5893                           ;User/newmain.c: 383:     ubyte i;;User/newmain.c: 384:     KeyTime = 0;
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _KeyPro: [wreg+status,2+status,0+pclath+cstack]
  5897  0B71  0021               	movlb	1	; select bank1
  5898  0B72  01DD               	clrf	_KeyTime^(0+128)
  5899                           
  5900                           ;User/newmain.c: 386:     if (Key.bits.PWO_B1)
  5901  0B73  0020               	movlb	0	; select bank0
  5902  0B74  1CEB               	btfss	_Key,1	;volatile
  5903  0B75  2B8F               	goto	l3932
  5904                           
  5905                           ;User/newmain.c: 387:     {;User/newmain.c: 388:         Flg.bits.PWON_B0 = !Flg.bits.PW
      +                          ON_B0;
  5906  0B76  1003               	clrc
  5907  0B77  1C6F               	btfss	_Flg,0	;volatile
  5908  0B78  1403               	setc
  5909  0B79  1C03               	btfss	3,0
  5910  0B7A  2B7E               	goto	u5560
  5911  0B7B  0020               	movlb	0	; select bank0
  5912  0B7C  146F               	bsf	_Flg,0	;volatile
  5913  0B7D  2B80               	goto	l3920
  5914  0B7E                     u5560:
  5915  0B7E  0020               	movlb	0	; select bank0
  5916  0B7F  106F               	bcf	_Flg,0	;volatile
  5917  0B80                     l3920:
  5918                           
  5919                           ;User/newmain.c: 390:         if (Flg.bits.PWON_B0 == 0)
  5920  0B80  186F               	btfsc	_Flg,0	;volatile
  5921  0B81  2B8C               	goto	l3930
  5922                           
  5923                           ;User/newmain.c: 391:         {;User/newmain.c: 392:             LED_OFF();
  5924  0B82  318B  2339  318B   	fcall	_LED_OFF
  5925                           
  5926                           ;User/newmain.c: 393:             hze = 0;
  5927  0B85  0021               	movlb	1	; select bank1
  5928  0B86  01E5               	clrf	_hze^(0+128)
  5929                           
  5930                           ;User/newmain.c: 394:             LATAbits.LATA1 = 1;
  5931  0B87  0022               	movlb	2	; select bank2
  5932  0B88  148C               	bsf	12,1	;volatile
  5933                           
  5934                           ;User/newmain.c: 395:             ERRcnt = 0;
  5935  0B89  0021               	movlb	1	; select bank1
  5936  0B8A  01D8               	clrf	_ERRcnt^(0+128)
  5937                           
  5938                           ;User/newmain.c: 396:         }
  5939  0B8B  2B8F               	goto	l3932
  5940  0B8C                     l3930:
  5941                           
  5942                           ;User/newmain.c: 398:         {;User/newmain.c: 407:             PWMON();
  5943  0B8C  3180  2005  318B   	fcall	_PWMON
  5944  0B8F                     l3932:
  5945                           
  5946                           ;User/newmain.c: 413:     if (Key.bits.HB_B2 && Flg.bits.PWON_B0)
  5947  0B8F  0020               	movlb	0	; select bank0
  5948  0B90  196B               	btfsc	_Key,2	;volatile
  5949  0B91  1C6F               	btfss	_Flg,0	;volatile
  5950  0B92  2B9F               	goto	l3942
  5951                           
  5952                           ;User/newmain.c: 414:     {;User/newmain.c: 415:         LATCbits.LATC5 = 1;
  5953  0B93  0022               	movlb	2	; select bank2
  5954  0B94  168E               	bsf	14,5	;volatile
  5955                           
  5956                           ;User/newmain.c: 416:         LATCbits.LATC4 = 0;
  5957  0B95  120E               	bcf	14,4	;volatile
  5958                           
  5959                           ;User/newmain.c: 417:         LATCbits.LATC6 = 0;
  5960  0B96  130E               	bcf	14,6	;volatile
  5961                           
  5962                           ;User/newmain.c: 418:         Flg2.bits.ADMin_B1 = 0;
  5963  0B97  0020               	movlb	0	; select bank0
  5964  0B98  10EE               	bcf	_Flg2,1	;volatile
  5965                           
  5966                           ;User/newmain.c: 419:         PWMTime = 0;
  5967  0B99  0021               	movlb	1	; select bank1
  5968  0B9A  01E4               	clrf	_PWMTime^(0+128)
  5969                           
  5970                           ;User/newmain.c: 420:         hze = 3;
  5971  0B9B  3003               	movlw	3
  5972  0B9C  00F2               	movwf	??_KeyPro
  5973  0B9D  0872               	movf	??_KeyPro,w
  5974  0B9E  00E5               	movwf	_hze^(0+128)
  5975  0B9F                     l3942:
  5976                           
  5977                           ;User/newmain.c: 423:     if (Key.bits.LB_B3 && Flg.bits.PWON_B0)
  5978  0B9F  0020               	movlb	0	; select bank0
  5979  0BA0  19EB               	btfsc	_Key,3	;volatile
  5980  0BA1  1C6F               	btfss	_Flg,0	;volatile
  5981  0BA2  2BAF               	goto	l3952
  5982                           
  5983                           ;User/newmain.c: 424:     {;User/newmain.c: 425:         LATCbits.LATC5 = 0;
  5984  0BA3  0022               	movlb	2	; select bank2
  5985  0BA4  128E               	bcf	14,5	;volatile
  5986                           
  5987                           ;User/newmain.c: 426:         LATCbits.LATC4 = 1;
  5988  0BA5  160E               	bsf	14,4	;volatile
  5989                           
  5990                           ;User/newmain.c: 427:         LATCbits.LATC6 = 1;
  5991  0BA6  170E               	bsf	14,6	;volatile
  5992                           
  5993                           ;User/newmain.c: 428:         Flg2.bits.ADMin_B1 = 0;
  5994  0BA7  0020               	movlb	0	; select bank0
  5995  0BA8  10EE               	bcf	_Flg2,1	;volatile
  5996                           
  5997                           ;User/newmain.c: 429:         PWMTime = 0;
  5998  0BA9  0021               	movlb	1	; select bank1
  5999  0BAA  01E4               	clrf	_PWMTime^(0+128)
  6000                           
  6001                           ;User/newmain.c: 430:         hze = 2;
  6002  0BAB  3002               	movlw	2
  6003  0BAC  00F2               	movwf	??_KeyPro
  6004  0BAD  0872               	movf	??_KeyPro,w
  6005  0BAE  00E5               	movwf	_hze^(0+128)
  6006  0BAF                     l3952:
  6007                           
  6008                           ;User/newmain.c: 433:     Key.KeyByte = 0;
  6009  0BAF  0020               	movlb	0	; select bank0
  6010  0BB0  01EB               	clrf	_Key	;volatile
  6011  0BB1  0008               	return
  6012  0BB2                     __end_of_KeyPro:
  6013                           
  6014                           	psect	text19
  6015  0B18                     __ptext19:	
  6016 ;; *************** function _GetWater *****************
  6017 ;; Defined at:
  6018 ;;		line 134 in file "User/Fog.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  j               1    7[BANK0 ] unsigned char 
  6023 ;;  i               1    6[BANK0 ] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6033 ;;      Params:         0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       2       0       0       0       0       0       0
  6035 ;;      Temps:          1       0       0       0       0       0       0       0
  6036 ;;      Totals:         1       2       0       0       0       0       0       0
  6037 ;;Total ram usage:        3 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 4
  6040 ;; This function calls:
  6041 ;;		_PWMOFF
  6042 ;;		_PWMON
  6043 ;;		_ReadCurrent
  6044 ;; This function is called by:
  6045 ;;		_main
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           
  6050                           ;psect for function _GetWater
  6051  0B18                     _GetWater:
  6052                           
  6053                           ;User/Fog.c: 136:     PWMON();
  6054                           
  6055                           ;incstack = 0
  6056                           ; Regs used in _GetWater: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6057  0B18  3180  2005  318B   	fcall	_PWMON
  6058                           
  6059                           ;User/Fog.c: 137:     ubyte i, j;;User/Fog.c: 138:     for (j = 0; j < 5; j++)
  6060  0B1B  0020               	movlb	0	; select bank0
  6061  0B1C  01A7               	clrf	GetWater@j
  6062  0B1D                     l3724:
  6063                           
  6064                           ;User/Fog.c: 139:     {;User/Fog.c: 140:         for (i = 0; i < 4; i++)
  6065  0B1D  01A6               	clrf	GetWater@i
  6066  0B1E                     l95:
  6067                           
  6068                           ;User/Fog.c: 141:         {;User/Fog.c: 142:             Flg.bits.T4ms_B7 = 0;
  6069  0B1E  13EF               	bcf	_Flg,7	;volatile
  6070  0B1F                     l97:	
  6071                           ;User/Fog.c: 144:                 ;
  6072                           
  6073                           
  6074                           ;User/Fog.c: 143:             while (Flg.bits.T4ms_B7 == 0)
  6075  0B1F  1FEF               	btfss	_Flg,7	;volatile
  6076  0B20  2B1F               	goto	l97
  6077                           
  6078                           ;User/Fog.c: 145:         }
  6079  0B21  3001               	movlw	1
  6080  0B22  00FC               	movwf	??_GetWater
  6081  0B23  087C               	movf	??_GetWater,w
  6082  0B24  07A6               	addwf	GetWater@i,f
  6083  0B25  3004               	movlw	4
  6084  0B26  0226               	subwf	GetWater@i,w
  6085  0B27  1C03               	skipc
  6086  0B28  2B1E               	goto	l95
  6087                           
  6088                           ;User/Fog.c: 146:         ReadCurrent();
  6089  0B29  318D  2565  318B   	fcall	_ReadCurrent
  6090                           
  6091                           ;User/Fog.c: 147:     }
  6092  0B2C  3001               	movlw	1
  6093  0B2D  00FC               	movwf	??_GetWater
  6094  0B2E  087C               	movf	??_GetWater,w
  6095  0B2F  0020               	movlb	0	; select bank0
  6096  0B30  07A7               	addwf	GetWater@j,f
  6097  0B31  3005               	movlw	5
  6098  0B32  0227               	subwf	GetWater@j,w
  6099  0B33  1C03               	skipc
  6100  0B34  2B1D               	goto	l3724
  6101                           
  6102                           ;User/Fog.c: 148:     Flg.bits.T4ms_B7 = 0;
  6103  0B35  13EF               	bcf	_Flg,7	;volatile
  6104                           
  6105                           ;User/Fog.c: 149:     PWMOFF();
  6106  0B36  318A  227C         	fcall	_PWMOFF
  6107  0B38  0008               	return
  6108  0B39                     __end_of_GetWater:
  6109                           
  6110                           	psect	text20
  6111  0D65                     __ptext20:	
  6112 ;; *************** function _ReadCurrent *****************
  6113 ;; Defined at:
  6114 ;;		line 124 in file "User/newmain.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  i               1   11[COMMON] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2   24[None  ] unsigned int 
  6121 ;; Registers used:
  6122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6128 ;;      Params:         0       0       0       0       0       0       0       0
  6129 ;;      Locals:         1       0       0       0       0       0       0       0
  6130 ;;      Temps:          2       0       0       0       0       0       0       0
  6131 ;;      Totals:         3       0       0       0       0       0       0       0
  6132 ;;Total ram usage:        3 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 3
  6135 ;; This function calls:
  6136 ;;		_ErrInf
  6137 ;;		_GetADC
  6138 ;; This function is called by:
  6139 ;;		_GetWater
  6140 ;;		_main
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           
  6145                           ;psect for function _ReadCurrent
  6146  0D65                     _ReadCurrent:
  6147                           
  6148                           ;User/newmain.c: 126:     ubyte i;;User/newmain.c: 130:     GetADC(10) >> 5;
  6149                           
  6150                           ;incstack = 0
  6151                           ; Regs used in _ReadCurrent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6152  0D65  300A               	movlw	10
  6153  0D66  318C  244B  318D   	fcall	_GetADC
  6154                           
  6155                           ;User/newmain.c: 132:     for (i = 0; i < 16; i++)
  6156  0D69  01FB               	clrf	ReadCurrent@i
  6157  0D6A                     l3524:
  6158                           
  6159                           ;User/newmain.c: 133:     {;User/newmain.c: 134:         AD_Cur[i] = (GetADC(10) >> 5);
  6160  0D6A  300A               	movlw	10
  6161  0D6B  318C  244B  318D   	fcall	_GetADC
  6162  0D6E  0875               	movf	?_GetADC,w
  6163  0D6F  00F9               	movwf	??_ReadCurrent
  6164  0D70  0876               	movf	?_GetADC+1,w
  6165  0D71  00FA               	movwf	??_ReadCurrent+1
  6166  0D72  3005               	movlw	5
  6167  0D73                     u4795:
  6168  0D73  36FA               	lsrf	??_ReadCurrent+1,f
  6169  0D74  0CF9               	rrf	??_ReadCurrent,f
  6170  0D75  0B89               	decfsz	9,f
  6171  0D76  2D73               	goto	u4795
  6172  0D77  357B               	lslf	ReadCurrent@i,w
  6173  0D78  3EA0               	addlw	(low (_AD_Cur| 0))& (0+255)
  6174  0D79  0086               	movwf	6
  6175  0D7A  0187               	clrf	7
  6176  0D7B  0879               	movf	??_ReadCurrent,w
  6177  0D7C  3FC0               	movwi [0]fsr1
  6178  0D7D  087A               	movf	??_ReadCurrent+1,w
  6179  0D7E  3FC1               	movwi [1]fsr1
  6180                           
  6181                           ;User/newmain.c: 135:         AD_Tal += AD_Cur[i];
  6182  0D7F  357B               	lslf	ReadCurrent@i,w
  6183  0D80  3EA0               	addlw	(low (_AD_Cur| 0))& (0+255)
  6184  0D81  0086               	movwf	6
  6185  0D82  0187               	clrf	7
  6186  0D83  3F40               	moviw [0]fsr1
  6187  0D84  00F9               	movwf	??_ReadCurrent
  6188  0D85  3F41               	moviw [1]fsr1
  6189  0D86  00FA               	movwf	??_ReadCurrent+1
  6190  0D87  0879               	movf	??_ReadCurrent,w
  6191  0D88  0021               	movlb	1	; select bank1
  6192  0D89  07CA               	addwf	_AD_Tal^(0+128),f
  6193  0D8A  087A               	movf	??_ReadCurrent+1,w
  6194  0D8B  3DCB               	addwfc	(_AD_Tal+1)^(0+128),f
  6195                           
  6196                           ;User/newmain.c: 136:     }
  6197  0D8C  3001               	movlw	1
  6198  0D8D  00F9               	movwf	??_ReadCurrent
  6199  0D8E  0879               	movf	??_ReadCurrent,w
  6200  0D8F  07FB               	addwf	ReadCurrent@i,f
  6201  0D90  3010               	movlw	16
  6202  0D91  027B               	subwf	ReadCurrent@i,w
  6203  0D92  1C03               	skipc
  6204  0D93  2D6A               	goto	l3524
  6205                           
  6206                           ;User/newmain.c: 138:     AD_Tal >>= 4;
  6207  0D94  3004               	movlw	4
  6208  0D95                     u4815:
  6209  0D95  36CB               	lsrf	(_AD_Tal+1)^(0+128),f
  6210  0D96  0CCA               	rrf	_AD_Tal^(0+128),f
  6211  0D97  0B89               	decfsz	9,f
  6212  0D98  2D95               	goto	u4815
  6213                           
  6214                           ;User/newmain.c: 141:     if (PORTBbits.RB5 == 1)
  6215  0D99  0020               	movlb	0	; select bank0
  6216  0D9A  1E8D               	btfss	13,5	;volatile
  6217  0D9B  2DA3               	goto	l3540
  6218                           
  6219                           ;User/newmain.c: 142:     {;User/newmain.c: 143:         ERRcnt++;
  6220  0D9C  3001               	movlw	1
  6221  0D9D  00F9               	movwf	??_ReadCurrent
  6222  0D9E  0879               	movf	??_ReadCurrent,w
  6223  0D9F  0021               	movlb	1	; select bank1
  6224  0DA0  07D8               	addwf	_ERRcnt^(0+128),f
  6225                           
  6226                           ;User/newmain.c: 144:         Failcnt = 0;
  6227  0DA1  01D7               	clrf	_Failcnt^(0+128)
  6228                           
  6229                           ;User/newmain.c: 145:     }
  6230  0DA2  2DB5               	goto	l3554
  6231  0DA3                     l3540:
  6232                           
  6233                           ;User/newmain.c: 147:     {;User/newmain.c: 148:         ERRcnt = 0;
  6234  0DA3  0021               	movlb	1	; select bank1
  6235  0DA4  01D8               	clrf	_ERRcnt^(0+128)
  6236                           
  6237                           ;User/newmain.c: 149:         if ((Flg2.Flg2Byte & 0x85) == 0 && (Flg.bits.PWON_B0 == 1)
      +                          )
  6238  0DA5  0020               	movlb	0	; select bank0
  6239  0DA6  086E               	movf	_Flg2,w	;volatile
  6240  0DA7  3985               	andlw	133
  6241  0DA8  1903               	btfsc	3,2
  6242  0DA9  1C6F               	btfss	_Flg,0	;volatile
  6243  0DAA  2DAD               	goto	l422
  6244                           
  6245                           ;User/newmain.c: 150:             LATAbits.LATA1 = 0;
  6246  0DAB  0022               	movlb	2	; select bank2
  6247  0DAC  108C               	bcf	12,1	;volatile
  6248  0DAD                     l422:
  6249                           
  6250                           ;User/newmain.c: 152:         if (Flg2.bits.Error_B0 && (Flg.bits.PWON_B0 == 1))
  6251  0DAD  0020               	movlb	0	; select bank0
  6252  0DAE  186E               	btfsc	_Flg2,0	;volatile
  6253  0DAF  1C6F               	btfss	_Flg,0	;volatile
  6254  0DB0  2DB3               	goto	l3552
  6255                           
  6256                           ;User/newmain.c: 153:             hze = 0;
  6257  0DB1  0021               	movlb	1	; select bank1
  6258  0DB2  01E5               	clrf	_hze^(0+128)
  6259  0DB3                     l3552:
  6260                           
  6261                           ;User/newmain.c: 155:         Flg2.bits.Error_B0 = 0;
  6262  0DB3  0020               	movlb	0	; select bank0
  6263  0DB4  106E               	bcf	_Flg2,0	;volatile
  6264  0DB5                     l3554:
  6265                           
  6266                           ;User/newmain.c: 158:     if (AD_Tal > 0x490)
  6267  0DB5  3004               	movlw	4
  6268  0DB6  0021               	movlb	1	; select bank1
  6269  0DB7  024B               	subwf	(_AD_Tal+1)^(0+128),w
  6270  0DB8  3091               	movlw	145
  6271  0DB9  1903               	skipnz
  6272  0DBA  024A               	subwf	_AD_Tal^(0+128),w
  6273  0DBB  1C03               	skipc
  6274  0DBC  2DC3               	goto	l3560
  6275                           
  6276                           ;User/newmain.c: 159:     {;User/newmain.c: 160:         ERRcnt = 0;
  6277  0DBD  01D8               	clrf	_ERRcnt^(0+128)
  6278                           
  6279                           ;User/newmain.c: 161:         Failcnt++;
  6280  0DBE  3001               	movlw	1
  6281  0DBF  00F9               	movwf	??_ReadCurrent
  6282  0DC0  0879               	movf	??_ReadCurrent,w
  6283  0DC1  07D7               	addwf	_Failcnt^(0+128),f
  6284                           
  6285                           ;User/newmain.c: 162:     }
  6286  0DC2  2DC4               	goto	l3562
  6287  0DC3                     l3560:
  6288                           
  6289                           ;User/newmain.c: 165:     {;User/newmain.c: 166:         Failcnt = 0;
  6290  0DC3  01D7               	clrf	_Failcnt^(0+128)
  6291  0DC4                     l3562:
  6292                           
  6293                           ;User/newmain.c: 169:     if (ERRcnt > 1)
  6294  0DC4  3002               	movlw	2
  6295  0DC5  0258               	subwf	_ERRcnt^(0+128),w
  6296  0DC6  1C03               	skipc
  6297  0DC7  2DD9               	goto	l3576
  6298                           
  6299                           ;User/newmain.c: 170:     {;User/newmain.c: 173:         if (PORTAbits.RA3 == 0)
  6300  0DC8  0020               	movlb	0	; select bank0
  6301  0DC9  198C               	btfsc	12,3	;volatile
  6302  0DCA  2DCD               	goto	l3568
  6303                           
  6304                           ;User/newmain.c: 174:             hze = 5;
  6305  0DCB  3005               	movlw	5
  6306  0DCC  2DCE               	goto	L3
  6307  0DCD                     l3568:
  6308                           
  6309                           ;User/newmain.c: 176:             hze = 4;
  6310  0DCD  3004               	movlw	4
  6311  0DCE                     L3:
  6312  0DCE  00F9               	movwf	??_ReadCurrent
  6313  0DCF  0879               	movf	??_ReadCurrent,w
  6314  0DD0  0021               	movlb	1	; select bank1
  6315  0DD1  00E5               	movwf	_hze^(0+128)
  6316                           
  6317                           ;User/newmain.c: 178:         ErrInf();
  6318  0DD2  318A  223E  318D   	fcall	_ErrInf
  6319                           
  6320                           ;User/newmain.c: 179:         Flg2.bits.Error_B0 = 1;
  6321  0DD5  0020               	movlb	0	; select bank0
  6322  0DD6  146E               	bsf	_Flg2,0	;volatile
  6323                           
  6324                           ;User/newmain.c: 180:         ERRcnt = 0;
  6325  0DD7  0021               	movlb	1	; select bank1
  6326  0DD8  01D8               	clrf	_ERRcnt^(0+128)
  6327  0DD9                     l3576:
  6328                           
  6329                           ;User/newmain.c: 183:     if (Failcnt > 1)
  6330  0DD9  3002               	movlw	2
  6331  0DDA  0257               	subwf	_Failcnt^(0+128),w
  6332  0DDB  1C03               	skipc
  6333  0DDC  0008               	return
  6334                           
  6335                           ;User/newmain.c: 184:     {;User/newmain.c: 185:         ErrInf();
  6336  0DDD  318A  223E  318D   	fcall	_ErrInf
  6337                           
  6338                           ;User/newmain.c: 186:         Flg2.bits.Fail_B2 = 1;
  6339  0DE0  0020               	movlb	0	; select bank0
  6340  0DE1  156E               	bsf	_Flg2,2	;volatile
  6341  0DE2                     l430:	
  6342                           ;User/newmain.c: 187:         while (1)
  6343                           
  6344                           
  6345                           ;User/newmain.c: 188:             ;
  6346  0DE2  2DE2               	goto	l430
  6347  0DE3                     __end_of_ReadCurrent:
  6348                           
  6349                           	psect	text21
  6350  0A3E                     __ptext21:	
  6351 ;; *************** function _ErrInf *****************
  6352 ;; Defined at:
  6353 ;;		line 194 in file "User/newmain.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;		None
  6358 ;; Return value:  Size  Location     Type
  6359 ;;                  1    wreg      void 
  6360 ;; Registers used:
  6361 ;;		wreg, status,2, status,0, pclath, cstack
  6362 ;; Tracked objects:
  6363 ;;		On entry : 0/0
  6364 ;;		On exit  : 0/0
  6365 ;;		Unchanged: 0/0
  6366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6367 ;;      Params:         0       0       0       0       0       0       0       0
  6368 ;;      Locals:         0       0       0       0       0       0       0       0
  6369 ;;      Temps:          0       0       0       0       0       0       0       0
  6370 ;;      Totals:         0       0       0       0       0       0       0       0
  6371 ;;Total ram usage:        0 bytes
  6372 ;; Hardware stack levels used: 1
  6373 ;; Hardware stack levels required when called: 2
  6374 ;; This function calls:
  6375 ;;		_LED_OFF
  6376 ;;		_PWMOFF
  6377 ;; This function is called by:
  6378 ;;		_TwoData_COM
  6379 ;;		_ReadCurrent
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           
  6384                           ;psect for function _ErrInf
  6385  0A3E                     _ErrInf:
  6386                           
  6387                           ;User/newmain.c: 196:     PWMOFF();
  6388                           
  6389                           ;incstack = 0
  6390                           ; Regs used in _ErrInf: [wreg+status,2+status,0+pclath+cstack]
  6391  0A3E  318A  227C  318A   	fcall	_PWMOFF
  6392                           
  6393                           ;User/newmain.c: 197:     LED_OFF();
  6394  0A41  318B  2339         	fcall	_LED_OFF
  6395                           
  6396                           ;User/newmain.c: 198:     LATAbits.LATA1 = 1;
  6397  0A43  0022               	movlb	2	; select bank2
  6398  0A44  148C               	bsf	12,1	;volatile
  6399  0A45  0008               	return
  6400  0A46                     __end_of_ErrInf:
  6401                           
  6402                           	psect	text22
  6403  0B39                     __ptext22:	
  6404 ;; *************** function _LED_OFF *****************
  6405 ;; Defined at:
  6406 ;;		line 366 in file "User/newmain.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0, pclath, cstack
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6420 ;;      Params:         0       0       0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0
  6422 ;;      Temps:          1       0       0       0       0       0       0       0
  6423 ;;      Totals:         1       0       0       0       0       0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used: 1
  6426 ;; Hardware stack levels required when called: 1
  6427 ;; This function calls:
  6428 ;;		_PWMOFF
  6429 ;; This function is called by:
  6430 ;;		_ErrInf
  6431 ;;		_KeyPro
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           
  6436                           ;psect for function _LED_OFF
  6437  0B39                     _LED_OFF:
  6438                           
  6439                           ;User/newmain.c: 369:     LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LA
      +                          TC0 = LATAbits.LATA2 = 1;
  6440                           
  6441                           ;incstack = 0
  6442                           ; Regs used in _LED_OFF: [wreg+status,2+status,0+pclath+cstack]
  6443  0B39  0022               	movlb	2	; select bank2
  6444  0B3A  150C               	bsf	12,2	;volatile
  6445  0B3B  1D0C               	btfss	12,2	;volatile
  6446  0B3C  2B40               	goto	u4660
  6447  0B3D  0022               	movlb	2	; select bank2
  6448  0B3E  140E               	bsf	14,0	;volatile
  6449  0B3F  2B42               	goto	u4674
  6450  0B40                     u4660:
  6451  0B40  0022               	movlb	2	; select bank2
  6452  0B41  100E               	bcf	14,0	;volatile
  6453  0B42                     u4674:
  6454  0B42  1C0E               	btfss	14,0	;volatile
  6455  0B43  2B47               	goto	u4670
  6456  0B44  0022               	movlb	2	; select bank2
  6457  0B45  148E               	bsf	14,1	;volatile
  6458  0B46  2B49               	goto	u4684
  6459  0B47                     u4670:
  6460  0B47  0022               	movlb	2	; select bank2
  6461  0B48  108E               	bcf	14,1	;volatile
  6462  0B49                     u4684:
  6463  0B49  1C8E               	btfss	14,1	;volatile
  6464  0B4A  2B4E               	goto	u4680
  6465  0B4B  0022               	movlb	2	; select bank2
  6466  0B4C  150E               	bsf	14,2	;volatile
  6467  0B4D  2B50               	goto	u4694
  6468  0B4E                     u4680:
  6469  0B4E  0022               	movlb	2	; select bank2
  6470  0B4F  110E               	bcf	14,2	;volatile
  6471  0B50                     u4694:
  6472  0B50  1D0E               	btfss	14,2	;volatile
  6473  0B51  2B55               	goto	u4690
  6474  0B52  0022               	movlb	2	; select bank2
  6475  0B53  170D               	bsf	13,6	;volatile
  6476  0B54  2B57               	goto	u4704
  6477  0B55                     u4690:
  6478  0B55  0022               	movlb	2	; select bank2
  6479  0B56  130D               	bcf	13,6	;volatile
  6480  0B57                     u4704:
  6481                           
  6482                           ;User/newmain.c: 370:     LATCbits.LATC4 = LATCbits.LATC5 = 1;
  6483  0B57  168E               	bsf	14,5	;volatile
  6484  0B58  1E8E               	btfss	14,5	;volatile
  6485  0B59  2B5D               	goto	u4710
  6486  0B5A  0022               	movlb	2	; select bank2
  6487  0B5B  160E               	bsf	14,4	;volatile
  6488  0B5C  2B5F               	goto	u4724
  6489  0B5D                     u4710:
  6490  0B5D  0022               	movlb	2	; select bank2
  6491  0B5E  120E               	bcf	14,4	;volatile
  6492  0B5F                     u4724:
  6493                           
  6494                           ;User/newmain.c: 371:     LATAbits.LATA1 = 0;
  6495  0B5F  108C               	bcf	12,1	;volatile
  6496                           
  6497                           ;User/newmain.c: 372:     MinS_Cnt = 0;
  6498  0B60  0021               	movlb	1	; select bank1
  6499  0B61  01D9               	clrf	_MinS_Cnt^(0+128)
  6500                           
  6501                           ;User/newmain.c: 373:     Flg2.Flg2Byte = 0;
  6502  0B62  0020               	movlb	0	; select bank0
  6503  0B63  01EE               	clrf	_Flg2	;volatile
  6504                           
  6505                           ;User/newmain.c: 374:     Key.KeyByte &= 2;
  6506  0B64  3002               	movlw	2
  6507  0B65  00F1               	movwf	??_LED_OFF
  6508  0B66  0871               	movf	??_LED_OFF,w
  6509  0B67  05EB               	andwf	_Key,f	;volatile
  6510                           
  6511                           ;User/newmain.c: 375:     ERRcnt = 0;
  6512  0B68  0021               	movlb	1	; select bank1
  6513  0B69  01D8               	clrf	_ERRcnt^(0+128)
  6514                           
  6515                           ;User/newmain.c: 376:     ADMax = 0;
  6516  0B6A  01E6               	clrf	_ADMax^(0+128)
  6517  0B6B  01E7               	clrf	(_ADMax+1)^(0+128)
  6518                           
  6519                           ;User/newmain.c: 377:     ADMin = 0;
  6520  0B6C  01CC               	clrf	_ADMin^(0+128)
  6521  0B6D  01CD               	clrf	(_ADMin+1)^(0+128)
  6522                           
  6523                           ;User/newmain.c: 378:     PWMOFF();
  6524  0B6E  318A  227C         	fcall	_PWMOFF
  6525  0B70  0008               	return
  6526  0B71                     __end_of_LED_OFF:
  6527                           
  6528                           	psect	text23
  6529  0A7C                     __ptext23:	
  6530 ;; *************** function _PWMOFF *****************
  6531 ;; Defined at:
  6532 ;;		line 321 in file "User/newmain.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;		None
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      void 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6546 ;;      Params:         0       0       0       0       0       0       0       0
  6547 ;;      Locals:         0       0       0       0       0       0       0       0
  6548 ;;      Temps:          1       0       0       0       0       0       0       0
  6549 ;;      Totals:         1       0       0       0       0       0       0       0
  6550 ;;Total ram usage:        1 bytes
  6551 ;; Hardware stack levels used: 1
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_ScanF
  6556 ;;		_GetWater
  6557 ;;		_ErrInf
  6558 ;;		_T500ms_Event
  6559 ;;		_LED_OFF
  6560 ;; This function uses a non-reentrant model
  6561 ;;
  6562                           
  6563                           
  6564                           ;psect for function _PWMOFF
  6565  0A7C                     _PWMOFF:
  6566                           
  6567                           ;User/newmain.c: 323:     PWM3LDCONbits.LDA = 1;
  6568                           
  6569                           ;incstack = 0
  6570                           ; Regs used in _PWMOFF: [wreg+status,2]
  6571  0A7C  003B               	movlb	27	; select bank27
  6572  0A7D  17BF               	bsf	63,7	;volatile
  6573                           
  6574                           ;User/newmain.c: 324:     PWM3LDCONbits.LDT = 0;
  6575  0A7E  133F               	bcf	63,6	;volatile
  6576                           
  6577                           ;User/newmain.c: 325:     PWM3CONbits.EN = 0;
  6578  0A7F  13BB               	bcf	59,7	;volatile
  6579                           
  6580                           ;User/newmain.c: 326:     PWM3INTEbits.PRIE = 0;
  6581  0A80  103C               	bcf	60,0	;volatile
  6582                           
  6583                           ;User/newmain.c: 327:     LATCbits.LATC3 = 0;
  6584  0A81  0022               	movlb	2	; select bank2
  6585  0A82  118E               	bcf	14,3	;volatile
  6586                           
  6587                           ;User/newmain.c: 328:     Flg.bits.ADMax_B1 = 0;
  6588  0A83  0020               	movlb	0	; select bank0
  6589  0A84  10EF               	bcf	_Flg,1	;volatile
  6590                           
  6591                           ;User/newmain.c: 329:     NoWater = PWMTime = 0;
  6592  0A85  0021               	movlb	1	; select bank1
  6593  0A86  01E4               	clrf	_PWMTime^(0+128)
  6594  0A87  0020               	movlb	0	; select bank0
  6595  0A88  01ED               	clrf	_NoWater
  6596                           
  6597                           ;User/newmain.c: 330:     PWMTime_Val = 2;
  6598  0A89  3002               	movlw	2
  6599  0A8A  00F0               	movwf	??_PWMOFF
  6600  0A8B  0870               	movf	??_PWMOFF,w
  6601  0A8C  0021               	movlb	1	; select bank1
  6602  0A8D  00EA               	movwf	_PWMTime_Val^(0+128)
  6603                           
  6604                           ;User/newmain.c: 331:     adc_true_cnt = 0;
  6605  0A8E  01DF               	clrf	_adc_true_cnt^(0+128)
  6606                           
  6607                           ;User/newmain.c: 332:     adc_false_cnt = 0;
  6608  0A8F  01DE               	clrf	_adc_false_cnt^(0+128)
  6609  0A90  0008               	return
  6610  0A91                     __end_of_PWMOFF:
  6611                           
  6612                           	psect	text24
  6613  0005                     __ptext24:	
  6614 ;; *************** function _PWMON *****************
  6615 ;; Defined at:
  6616 ;;		line 313 in file "User/newmain.c"
  6617 ;; Parameters:    Size  Location     Type
  6618 ;;		None
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;		None
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  1    wreg      void 
  6623 ;; Registers used:
  6624 ;;		None
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6630 ;;      Params:         0       0       0       0       0       0       0       0
  6631 ;;      Locals:         0       0       0       0       0       0       0       0
  6632 ;;      Temps:          0       0       0       0       0       0       0       0
  6633 ;;      Totals:         0       0       0       0       0       0       0       0
  6634 ;;Total ram usage:        0 bytes
  6635 ;; Hardware stack levels used: 1
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_ScanF
  6640 ;;		_GetWater
  6641 ;;		_T500ms_Event
  6642 ;;		_KeyPro
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           
  6647                           ;psect for function _PWMON
  6648  0005                     _PWMON:
  6649                           
  6650                           ;User/newmain.c: 315:     PWM3LDCONbits.LDA = 1;
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in _PWMON: []
  6654  0005  003B               	movlb	27	; select bank27
  6655  0006  17BF               	bsf	63,7	;volatile
  6656                           
  6657                           ;User/newmain.c: 316:     PWM3LDCONbits.LDT = 0;
  6658  0007  133F               	bcf	63,6	;volatile
  6659                           
  6660                           ;User/newmain.c: 317:     PWM3CONbits.EN = 1;
  6661  0008  17BB               	bsf	59,7	;volatile
  6662                           
  6663                           ;User/newmain.c: 318:     PWM3INTEbits.PRIE = 1;
  6664  0009  143C               	bsf	60,0	;volatile
  6665  000A  0008               	return
  6666  000B                     __end_of_PWMON:
  6667                           
  6668                           	psect	text25
  6669  0F2A                     __ptext25:	
  6670 ;; *************** function _GetKey *****************
  6671 ;; Defined at:
  6672 ;;		line 441 in file "User/newmain.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  i               1   11[COMMON] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6686 ;;      Params:         0       0       0       0       0       0       0       0
  6687 ;;      Locals:         1       0       0       0       0       0       0       0
  6688 ;;      Temps:          2       0       0       0       0       0       0       0
  6689 ;;      Totals:         3       0       0       0       0       0       0       0
  6690 ;;Total ram usage:        3 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 2
  6693 ;; This function calls:
  6694 ;;		_GetADC
  6695 ;; This function is called by:
  6696 ;;		_main
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           
  6701                           ;psect for function _GetKey
  6702  0F2A                     _GetKey:
  6703                           
  6704                           ;User/newmain.c: 444:     ubyte i;;User/newmain.c: 445:     adkey = (GetADC(9) >> 5);
  6705                           
  6706                           ;incstack = 0
  6707                           ; Regs used in _GetKey: [wreg+status,2+status,0+pclath+cstack]
  6708  0F2A  3009               	movlw	9
  6709  0F2B  318C  244B  318F   	fcall	_GetADC
  6710  0F2E  0875               	movf	?_GetADC,w
  6711  0F2F  00F9               	movwf	??_GetKey
  6712  0F30  0876               	movf	?_GetADC+1,w
  6713  0F31  00FA               	movwf	??_GetKey+1
  6714  0F32  3005               	movlw	5
  6715  0F33                     u5355:
  6716  0F33  36FA               	lsrf	??_GetKey+1,f
  6717  0F34  0CF9               	rrf	??_GetKey,f
  6718  0F35  0B89               	decfsz	9,f
  6719  0F36  2F33               	goto	u5355
  6720  0F37  0879               	movf	??_GetKey,w
  6721  0F38  0020               	movlb	0	; select bank0
  6722  0F39  00E6               	movwf	_adkey
  6723  0F3A  087A               	movf	??_GetKey+1,w
  6724  0F3B  00E7               	movwf	_adkey+1
  6725                           
  6726                           ;User/newmain.c: 446:     KeyADC = 0;
  6727  0F3C  0021               	movlb	1	; select bank1
  6728  0F3D  01C8               	clrf	_KeyADC^(0+128)
  6729  0F3E  01C9               	clrf	(_KeyADC+1)^(0+128)
  6730                           
  6731                           ;User/newmain.c: 447:     Flg2.bits.GetKeyM_B3 = 1;
  6732  0F3F  0020               	movlb	0	; select bank0
  6733  0F40  15EE               	bsf	_Flg2,3	;volatile
  6734                           
  6735                           ;User/newmain.c: 449:     for (i = 0; i < 16; i++)
  6736  0F41  01FB               	clrf	GetKey@i
  6737  0F42                     l3850:
  6738                           
  6739                           ;User/newmain.c: 450:         KeyADC += (GetADC(9) >> 5);
  6740  0F42  3009               	movlw	9
  6741  0F43  318C  244B  318F   	fcall	_GetADC
  6742  0F46  0875               	movf	?_GetADC,w
  6743  0F47  00F9               	movwf	??_GetKey
  6744  0F48  0876               	movf	?_GetADC+1,w
  6745  0F49  00FA               	movwf	??_GetKey+1
  6746  0F4A  3005               	movlw	5
  6747  0F4B                     u5365:
  6748  0F4B  36FA               	lsrf	??_GetKey+1,f
  6749  0F4C  0CF9               	rrf	??_GetKey,f
  6750  0F4D  0B89               	decfsz	9,f
  6751  0F4E  2F4B               	goto	u5365
  6752  0F4F  0879               	movf	??_GetKey,w
  6753  0F50  0021               	movlb	1	; select bank1
  6754  0F51  07C8               	addwf	_KeyADC^(0+128),f
  6755  0F52  087A               	movf	??_GetKey+1,w
  6756  0F53  3DC9               	addwfc	(_KeyADC+1)^(0+128),f
  6757  0F54  3001               	movlw	1
  6758  0F55  00F9               	movwf	??_GetKey
  6759  0F56  0879               	movf	??_GetKey,w
  6760  0F57  07FB               	addwf	GetKey@i,f
  6761  0F58  3010               	movlw	16
  6762  0F59  027B               	subwf	GetKey@i,w
  6763  0F5A  1C03               	skipc
  6764  0F5B  2F42               	goto	l3850
  6765                           
  6766                           ;User/newmain.c: 452:     if (Flg2.bits.GetKeyM_B3)
  6767  0F5C  0020               	movlb	0	; select bank0
  6768  0F5D  1DEE               	btfss	_Flg2,3	;volatile
  6769  0F5E  2F6F               	goto	L4
  6770                           
  6771                           ;User/newmain.c: 453:         adkey = KeyADC >> 4;
  6772  0F5F  0021               	movlb	1	; select bank1
  6773  0F60  0E48               	swapf	_KeyADC^(0+128),w
  6774  0F61  390F               	andlw	15
  6775  0F62  0020               	movlb	0	; select bank0
  6776  0F63  00E6               	movwf	_adkey
  6777  0F64  0021               	movlb	1	; select bank1
  6778  0F65  0E49               	swapf	(_KeyADC+1)^(0+128),w
  6779  0F66  39F0               	andlw	240
  6780  0F67  0020               	movlb	0	; select bank0
  6781  0F68  04E6               	iorwf	_adkey,f
  6782  0F69  0021               	movlb	1	; select bank1
  6783  0F6A  0E49               	swapf	(_KeyADC+1)^(0+128),w
  6784  0F6B  390F               	andlw	15
  6785  0F6C  0020               	movlb	0	; select bank0
  6786  0F6D  00E7               	movwf	_adkey+1
  6787                           
  6788                           ;User/newmain.c: 454:     Flg2.bits.GetKeyM_B3 = 0;
  6789  0F6E  11EE               	bcf	_Flg2,3	;volatile
  6790  0F6F                     L4:
  6791                           
  6792                           ;User/newmain.c: 456:     if (((adkey + 30) > 0x148) && ((adkey - 30) < 0x148) && (Touch
      +                          Time == 0))
  6793  0F6F  0866               	movf	_adkey,w
  6794  0F70  3E1E               	addlw	30
  6795  0F71  00F9               	movwf	??_GetKey
  6796  0F72  3000               	movlw	0
  6797  0F73  3D67               	addwfc	_adkey+1,w
  6798  0F74  00FA               	movwf	??_GetKey+1
  6799  0F75  3001               	movlw	1
  6800  0F76  027A               	subwf	??_GetKey+1,w
  6801  0F77  3049               	movlw	73
  6802  0F78  1903               	skipnz
  6803  0F79  0279               	subwf	??_GetKey,w
  6804  0F7A  1C03               	skipc
  6805  0F7B  2F99               	goto	l3872
  6806  0F7C  0866               	movf	_adkey,w
  6807  0F7D  3EE2               	addlw	226
  6808  0F7E  00F9               	movwf	??_GetKey
  6809  0F7F  30FF               	movlw	255
  6810  0F80  3D67               	addwfc	_adkey+1,w
  6811  0F81  00FA               	movwf	??_GetKey+1
  6812  0F82  3001               	movlw	1
  6813  0F83  027A               	subwf	??_GetKey+1,w
  6814  0F84  3048               	movlw	72
  6815  0F85  1903               	skipnz
  6816  0F86  0279               	subwf	??_GetKey,w
  6817  0F87  1803               	skipnc
  6818  0F88  2F99               	goto	l3872
  6819  0F89  086A               	movf	_TouchTime,w
  6820  0F8A  1D03               	btfss	3,2
  6821  0F8B  2F99               	goto	l3872
  6822                           
  6823                           ;User/newmain.c: 457:     {;User/newmain.c: 458:         if (Flg.bits.PWON_B0 == 0)
  6824  0F8C  186F               	btfsc	_Flg,0	;volatile
  6825  0F8D  2F90               	goto	l3868
  6826                           
  6827                           ;User/newmain.c: 459:             Key.bits.PWO_B1 = 1;
  6828  0F8E  14EB               	bsf	_Key,1	;volatile
  6829  0F8F  2F9E               	goto	l3876
  6830  0F90                     l3868:
  6831  0F90  3029               	movlw	41
  6832  0F91  0268               	subwf	_stakeytime,w
  6833  0F92  1803               	skipnc
  6834  0F93  2F9E               	goto	l3876
  6835                           
  6836                           ;User/newmain.c: 461:             stakeytime++;
  6837  0F94  3001               	movlw	1
  6838  0F95  00F9               	movwf	??_GetKey
  6839  0F96  0879               	movf	??_GetKey,w
  6840  0F97  07E8               	addwf	_stakeytime,f
  6841  0F98  2F9E               	goto	l3876
  6842  0F99                     l3872:
  6843  0F99  0868               	movf	_stakeytime,w
  6844  0F9A  1903               	btfsc	3,2
  6845  0F9B  2F9E               	goto	l3876
  6846                           
  6847                           ;User/newmain.c: 464:         stakeytime--;
  6848  0F9C  3001               	movlw	1
  6849  0F9D  02E8               	subwf	_stakeytime,f
  6850  0F9E                     l3876:
  6851                           
  6852                           ;User/newmain.c: 466:     if (adkey > 0x310 && stakeytime > 0)
  6853  0F9E  3003               	movlw	3
  6854  0F9F  0267               	subwf	_adkey+1,w
  6855  0FA0  3011               	movlw	17
  6856  0FA1  1903               	skipnz
  6857  0FA2  0266               	subwf	_adkey,w
  6858  0FA3  1C03               	skipc
  6859  0FA4  2FB6               	goto	l3892
  6860  0FA5  0868               	movf	_stakeytime,w
  6861  0FA6  1903               	btfsc	3,2
  6862  0FA7  2FB6               	goto	l3892
  6863                           
  6864                           ;User/newmain.c: 467:     {;User/newmain.c: 469:         if (((Flg2.Flg2Byte & 0x85) != 
      +                          0) && Flg.bits.PWON_B0)
  6865  0FA8  086E               	movf	_Flg2,w	;volatile
  6866  0FA9  3985               	andlw	133
  6867  0FAA  1D03               	btfss	3,2
  6868  0FAB  1C6F               	btfss	_Flg,0	;volatile
  6869  0FAC  2FB1               	goto	l3886
  6870                           
  6871                           ;User/newmain.c: 470:             Flg2.Flg2Byte &= 0x7A;
  6872  0FAD  307A               	movlw	122
  6873  0FAE  00F9               	movwf	??_GetKey
  6874  0FAF  0879               	movf	??_GetKey,w
  6875  0FB0  05EE               	andwf	_Flg2,f	;volatile
  6876  0FB1                     l3886:
  6877                           
  6878                           ;User/newmain.c: 472:         stakeytime = 0;
  6879  0FB1  01E8               	clrf	_stakeytime
  6880                           
  6881                           ;User/newmain.c: 473:         LATAbits.LATA1 = 0;
  6882  0FB2  0022               	movlb	2	; select bank2
  6883  0FB3  108C               	bcf	12,1	;volatile
  6884                           
  6885                           ;User/newmain.c: 474:         hze = 0;
  6886  0FB4  0021               	movlb	1	; select bank1
  6887  0FB5  01E5               	clrf	_hze^(0+128)
  6888  0FB6                     l3892:
  6889                           
  6890                           ;User/newmain.c: 478:     if (stakeytime >= 40)
  6891  0FB6  3028               	movlw	40
  6892  0FB7  0020               	movlb	0	; select bank0
  6893  0FB8  0268               	subwf	_stakeytime,w
  6894  0FB9  1C03               	skipc
  6895  0FBA  2FCA               	goto	l3902
  6896                           
  6897                           ;User/newmain.c: 479:     {;User/newmain.c: 480:         stakeytime = 0;
  6898  0FBB  01E8               	clrf	_stakeytime
  6899                           
  6900                           ;User/newmain.c: 481:         if (TouchTime == 0)
  6901  0FBC  086A               	movf	_TouchTime,w
  6902  0FBD  1D03               	btfss	3,2
  6903  0FBE  2FCA               	goto	l3902
  6904                           
  6905                           ;User/newmain.c: 482:         {;User/newmain.c: 483:             KeyTime = 10;
  6906  0FBF  300A               	movlw	10
  6907  0FC0  00F9               	movwf	??_GetKey
  6908  0FC1  0879               	movf	??_GetKey,w
  6909  0FC2  0021               	movlb	1	; select bank1
  6910  0FC3  00DD               	movwf	_KeyTime^(0+128)
  6911                           
  6912                           ;User/newmain.c: 484:             Key.bits.PWO_B1 = 1;
  6913  0FC4  0020               	movlb	0	; select bank0
  6914  0FC5  14EB               	bsf	_Key,1	;volatile
  6915                           
  6916                           ;User/newmain.c: 485:             TouchTime = 10;
  6917  0FC6  300A               	movlw	10
  6918  0FC7  00F9               	movwf	??_GetKey
  6919  0FC8  0879               	movf	??_GetKey,w
  6920  0FC9  00EA               	movwf	_TouchTime
  6921  0FCA                     l3902:
  6922                           
  6923                           ;User/newmain.c: 489:     if (((adkey + 30) > 0xC9) && ((adkey - 30) < 0xC9))
  6924  0FCA  0866               	movf	_adkey,w
  6925  0FCB  3E1E               	addlw	30
  6926  0FCC  00F9               	movwf	??_GetKey
  6927  0FCD  3000               	movlw	0
  6928  0FCE  3D67               	addwfc	_adkey+1,w
  6929  0FCF  00FA               	movwf	??_GetKey+1
  6930  0FD0  3000               	movlw	0
  6931  0FD1  027A               	subwf	??_GetKey+1,w
  6932  0FD2  30CA               	movlw	202
  6933  0FD3  1903               	skipnz
  6934  0FD4  0279               	subwf	??_GetKey,w
  6935  0FD5  1C03               	skipc
  6936  0FD6  2FE4               	goto	l3908
  6937  0FD7  0866               	movf	_adkey,w
  6938  0FD8  3EE2               	addlw	226
  6939  0FD9  00F9               	movwf	??_GetKey
  6940  0FDA  30FF               	movlw	255
  6941  0FDB  3D67               	addwfc	_adkey+1,w
  6942  0FDC  00FA               	movwf	??_GetKey+1
  6943  0FDD  3000               	movlw	0
  6944  0FDE  027A               	subwf	??_GetKey+1,w
  6945  0FDF  30C9               	movlw	201
  6946  0FE0  1903               	skipnz
  6947  0FE1  0279               	subwf	??_GetKey,w
  6948  0FE2  1C03               	btfss	3,0
  6949                           
  6950                           ;User/newmain.c: 490:         Key.bits.HB_B2 = 1;
  6951  0FE3  156B               	bsf	_Key,2	;volatile
  6952  0FE4                     l3908:
  6953                           
  6954                           ;User/newmain.c: 492:     if (((adkey + 30) > 0x5d) && ((adkey - 30) < 0x5d))
  6955  0FE4  0866               	movf	_adkey,w
  6956  0FE5  3E1E               	addlw	30
  6957  0FE6  00F9               	movwf	??_GetKey
  6958  0FE7  3000               	movlw	0
  6959  0FE8  3D67               	addwfc	_adkey+1,w
  6960  0FE9  00FA               	movwf	??_GetKey+1
  6961  0FEA  3000               	movlw	0
  6962  0FEB  027A               	subwf	??_GetKey+1,w
  6963  0FEC  305E               	movlw	94
  6964  0FED  1903               	skipnz
  6965  0FEE  0279               	subwf	??_GetKey,w
  6966  0FEF  1C03               	skipc
  6967  0FF0  0008               	return
  6968  0FF1  0866               	movf	_adkey,w
  6969  0FF2  3EE2               	addlw	226
  6970  0FF3  00F9               	movwf	??_GetKey
  6971  0FF4  30FF               	movlw	255
  6972  0FF5  3D67               	addwfc	_adkey+1,w
  6973  0FF6  00FA               	movwf	??_GetKey+1
  6974  0FF7  3000               	movlw	0
  6975  0FF8  027A               	subwf	??_GetKey+1,w
  6976  0FF9  305D               	movlw	93
  6977  0FFA  1903               	skipnz
  6978  0FFB  0279               	subwf	??_GetKey,w
  6979  0FFC  1803               	skipnc
  6980  0FFD  0008               	return
  6981                           
  6982                           ;User/newmain.c: 493:         Key.bits.LB_B3 = 1;
  6983  0FFE  15EB               	bsf	_Key,3	;volatile
  6984  0FFF  0008               	return
  6985  1000                     __end_of_GetKey:
  6986                           
  6987                           	psect	text26
  6988  0C4B                     __ptext26:	
  6989 ;; *************** function _GetADC *****************
  6990 ;; Defined at:
  6991 ;;		line 499 in file "User/newmain.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  ch              1    wreg     unsigned char 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  ch              1    0[BANK0 ] unsigned char 
  6996 ;;  adbuf           2    4[BANK0 ] unsigned int 
  6997 ;;  total_ad        2    1[BANK0 ] unsigned int 
  6998 ;;  i               1    3[BANK0 ] unsigned char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2    5[COMMON] unsigned int 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, pclath, cstack
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7008 ;;      Params:         2       0       0       0       0       0       0       0
  7009 ;;      Locals:         0       6       0       0       0       0       0       0
  7010 ;;      Temps:          2       0       0       0       0       0       0       0
  7011 ;;      Totals:         4       6       0       0       0       0       0       0
  7012 ;;Total ram usage:       10 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 1
  7015 ;; This function calls:
  7016 ;;		_DelayC
  7017 ;; This function is called by:
  7018 ;;		_ScanF
  7019 ;;		_TwoData_COM
  7020 ;;		_ReadCurrent
  7021 ;;		_T500ms_Event
  7022 ;;		_GetKey
  7023 ;; This function uses a non-reentrant model
  7024 ;;
  7025                           
  7026                           
  7027                           ;psect for function _GetADC
  7028  0C4B                     _GetADC:
  7029                           
  7030                           ;incstack = 0
  7031                           ; Regs used in _GetADC: [wreg+status,2+status,0+pclath+cstack]
  7032                           ;GetADC@ch stored from wreg
  7033  0C4B  0020               	movlb	0	; select bank0
  7034  0C4C  00A0               	movwf	GetADC@ch
  7035                           
  7036                           ;User/newmain.c: 499: uword GetADC(ubyte ch);User/newmain.c: 500: {;User/newmain.c: 501:
      +                               uword total_ad;;User/newmain.c: 502:     uword adbuf;;User/newmain.c: 503:     ubyt
      +                          e i;;User/newmain.c: 505:     ADCON0bits.CHS = ch;
  7037  0C4D  0820               	movf	GetADC@ch,w
  7038  0C4E  00F7               	movwf	??_GetADC
  7039  0C4F  0DF7               	rlf	??_GetADC,f
  7040  0C50  0DF7               	rlf	??_GetADC,f
  7041  0C51  0021               	movlb	1	; select bank1
  7042  0C52  081D               	movf	29,w	;volatile
  7043  0C53  0677               	xorwf	??_GetADC,w
  7044  0C54  3983               	andlw	-125
  7045  0C55  0677               	xorwf	??_GetADC,w
  7046  0C56  009D               	movwf	29	;volatile
  7047                           
  7048                           ;User/newmain.c: 506:     DelayC(50);
  7049  0C57  3032               	movlw	50
  7050  0C58  318A  2291  318C   	fcall	_DelayC
  7051                           
  7052                           ;User/newmain.c: 507:     ADCON0bits.GO = 1;
  7053  0C5B  0021               	movlb	1	; select bank1
  7054  0C5C  149D               	bsf	29,1	;volatile
  7055  0C5D                     l515:	
  7056                           ;User/newmain.c: 509:         ;
  7057                           
  7058                           
  7059                           ;User/newmain.c: 508:     while (ADCON0bits.GO)
  7060  0C5D  189D               	btfsc	29,1	;volatile
  7061  0C5E  2C5D               	goto	l515
  7062                           
  7063                           ;User/newmain.c: 510:     adbuf = ADRESH;
  7064  0C5F  081C               	movf	28,w	;volatile
  7065  0C60  00F7               	movwf	??_GetADC
  7066  0C61  01F8               	clrf	??_GetADC+1
  7067  0C62  0877               	movf	??_GetADC,w
  7068  0C63  0020               	movlb	0	; select bank0
  7069  0C64  00A4               	movwf	GetADC@adbuf
  7070  0C65  0878               	movf	??_GetADC+1,w
  7071  0C66  00A5               	movwf	GetADC@adbuf+1
  7072                           
  7073                           ;User/newmain.c: 511:     adbuf = ADRESL;
  7074  0C67  0021               	movlb	1	; select bank1
  7075  0C68  081B               	movf	27,w	;volatile
  7076  0C69  00F7               	movwf	??_GetADC
  7077  0C6A  01F8               	clrf	??_GetADC+1
  7078  0C6B  0877               	movf	??_GetADC,w
  7079  0C6C  0020               	movlb	0	; select bank0
  7080  0C6D  00A4               	movwf	GetADC@adbuf
  7081  0C6E  0878               	movf	??_GetADC+1,w
  7082  0C6F  00A5               	movwf	GetADC@adbuf+1
  7083                           
  7084                           ;User/newmain.c: 513:     total_ad = 0;
  7085  0C70  01A1               	clrf	GetADC@total_ad
  7086  0C71  01A2               	clrf	GetADC@total_ad+1
  7087                           
  7088                           ;User/newmain.c: 515:     for (i = 0; i < 32; i++)
  7089  0C72  01A3               	clrf	GetADC@i
  7090  0C73                     l518:
  7091                           
  7092                           ;User/newmain.c: 516:     {;User/newmain.c: 517:         ADCON0bits.GO = 1;
  7093  0C73  0021               	movlb	1	; select bank1
  7094  0C74  149D               	bsf	29,1	;volatile
  7095  0C75                     l520:	
  7096                           ;User/newmain.c: 519:             ;
  7097                           
  7098                           
  7099                           ;User/newmain.c: 518:         while (ADCON0bits.GO)
  7100  0C75  189D               	btfsc	29,1	;volatile
  7101  0C76  2C75               	goto	l520
  7102                           
  7103                           ;User/newmain.c: 521:         adbuf = ADRESH;
  7104  0C77  081C               	movf	28,w	;volatile
  7105  0C78  00F7               	movwf	??_GetADC
  7106  0C79  01F8               	clrf	??_GetADC+1
  7107  0C7A  0877               	movf	??_GetADC,w
  7108  0C7B  0020               	movlb	0	; select bank0
  7109  0C7C  00A4               	movwf	GetADC@adbuf
  7110  0C7D  0878               	movf	??_GetADC+1,w
  7111  0C7E  00A5               	movwf	GetADC@adbuf+1
  7112                           
  7113                           ;User/newmain.c: 522:         adbuf <<= 8;
  7114  0C7F  3008               	movlw	8
  7115  0C80                     u4765:
  7116  0C80  35A4               	lslf	GetADC@adbuf,f
  7117  0C81  0DA5               	rlf	GetADC@adbuf+1,f
  7118  0C82  0B89               	decfsz	9,f
  7119  0C83  2C80               	goto	u4765
  7120                           
  7121                           ;User/newmain.c: 523:         adbuf |= ADRESL;
  7122  0C84  0021               	movlb	1	; select bank1
  7123  0C85  081B               	movf	27,w	;volatile
  7124  0C86  00F7               	movwf	??_GetADC
  7125  0C87  01F8               	clrf	??_GetADC+1
  7126  0C88  0877               	movf	??_GetADC,w
  7127  0C89  0020               	movlb	0	; select bank0
  7128  0C8A  04A4               	iorwf	GetADC@adbuf,f
  7129  0C8B  0878               	movf	??_GetADC+1,w
  7130  0C8C  04A5               	iorwf	GetADC@adbuf+1,f
  7131                           
  7132                           ;User/newmain.c: 524:         if (adbuf > 0x3EE)
  7133  0C8D  3003               	movlw	3
  7134  0C8E  0225               	subwf	GetADC@adbuf+1,w
  7135  0C8F  30EF               	movlw	239
  7136  0C90  1903               	skipnz
  7137  0C91  0224               	subwf	GetADC@adbuf,w
  7138  0C92  1803               	btfsc	3,0
  7139                           
  7140                           ;User/newmain.c: 525:             Flg2.bits.GetKeyM_B3 = 0;
  7141  0C93  11EE               	bcf	_Flg2,3	;volatile
  7142                           
  7143                           ;User/newmain.c: 526:         total_ad += adbuf;
  7144  0C94  0824               	movf	GetADC@adbuf,w
  7145  0C95  07A1               	addwf	GetADC@total_ad,f
  7146  0C96  0825               	movf	GetADC@adbuf+1,w
  7147  0C97  3DA2               	addwfc	GetADC@total_ad+1,f
  7148                           
  7149                           ;User/newmain.c: 527:     }
  7150  0C98  3001               	movlw	1
  7151  0C99  00F7               	movwf	??_GetADC
  7152  0C9A  0877               	movf	??_GetADC,w
  7153  0C9B  07A3               	addwf	GetADC@i,f
  7154  0C9C  3020               	movlw	32
  7155  0C9D  0223               	subwf	GetADC@i,w
  7156  0C9E  1C03               	skipc
  7157  0C9F  2C73               	goto	l518
  7158                           
  7159                           ;User/newmain.c: 529:     return total_ad;
  7160  0CA0  0822               	movf	GetADC@total_ad+1,w
  7161  0CA1  00F6               	movwf	?_GetADC+1
  7162  0CA2  0821               	movf	GetADC@total_ad,w
  7163  0CA3  00F5               	movwf	?_GetADC
  7164  0CA4  0008               	return
  7165  0CA5                     __end_of_GetADC:
  7166                           
  7167                           	psect	text27
  7168  0A91                     __ptext27:	
  7169 ;; *************** function _DelayC *****************
  7170 ;; Defined at:
  7171 ;;		line 535 in file "User/newmain.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;  ct              1    wreg     unsigned char 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  ct              1    4[COMMON] unsigned char 
  7176 ;;  i               2    2[COMMON] unsigned int 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  1    wreg      void 
  7179 ;; Registers used:
  7180 ;;		wreg, status,2, status,0
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7186 ;;      Params:         0       0       0       0       0       0       0       0
  7187 ;;      Locals:         3       0       0       0       0       0       0       0
  7188 ;;      Temps:          2       0       0       0       0       0       0       0
  7189 ;;      Totals:         5       0       0       0       0       0       0       0
  7190 ;;Total ram usage:        5 bytes
  7191 ;; Hardware stack levels used: 1
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_GetADC
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           
  7200                           ;psect for function _DelayC
  7201  0A91                     _DelayC:
  7202                           
  7203                           ;incstack = 0
  7204                           ; Regs used in _DelayC: [wreg+status,2+status,0]
  7205                           ;DelayC@ct stored from wreg
  7206  0A91  00F4               	movwf	DelayC@ct
  7207                           
  7208                           ;User/newmain.c: 535: void DelayC(ubyte ct);User/newmain.c: 536: {;User/newmain.c: 537: 
      +                              uword i;;User/newmain.c: 538:     for (i = 0; i < ct; ct++)
  7209  0A92  01F2               	clrf	DelayC@i
  7210  0A93  01F3               	clrf	DelayC@i+1
  7211  0A94                     l527:
  7212  0A94  0874               	movf	DelayC@ct,w
  7213  0A95  00F0               	movwf	??_DelayC
  7214  0A96  01F1               	clrf	??_DelayC+1
  7215  0A97  0871               	movf	??_DelayC+1,w
  7216  0A98  0273               	subwf	DelayC@i+1,w
  7217  0A99  1D03               	skipz
  7218  0A9A  2A9D               	goto	u4735
  7219  0A9B  0870               	movf	??_DelayC,w
  7220  0A9C  0272               	subwf	DelayC@i,w
  7221  0A9D                     u4735:
  7222  0A9D  1803               	btfsc	3,0
  7223  0A9E  2AA5               	goto	l529
  7224                           
  7225                           ;User/newmain.c: 539:         __nop();
  7226  0A9F  0000               	nop
  7227  0AA0  3001               	movlw	1
  7228  0AA1  00F0               	movwf	??_DelayC
  7229  0AA2  0870               	movf	??_DelayC,w
  7230  0AA3  07F4               	addwf	DelayC@ct,f
  7231  0AA4  2A94               	goto	l527
  7232  0AA5                     l529:
  7233  0AA5  0064               	clrwdt	;# 
  7234  0AA6  0008               	return
  7235  0AA7                     __end_of_DelayC:
  7236  007E                     btemp	set	126	;btemp
  7237  007E                     wtemp0	set	126
  7238  2198                     
  7239                           	psect	config
  7240                           
  7241                           ;Config register CONFIG1 @ 0x8007
  7242                           ;	Oscillator Selection Bits
  7243                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  7244                           ;	Watchdog Timer Enable
  7245                           ;	WDTE = ON, WDT enabled
  7246                           ;	Power-up Timer Enable
  7247                           ;	PWRTE = ON, PWRT enabled
  7248                           ;	MCLR Pin Function Select
  7249                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  7250                           ;	Flash Program Memory Code Protection
  7251                           ;	CP = OFF, Program memory code protection is disabled
  7252                           ;	Brown-out Reset Enable
  7253                           ;	BOREN = ON, Brown-out Reset enabled
  7254                           ;	Clock Out Enable
  7255                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7256  8007                     	org	32775
  7257  8007  3F9C               	dw	16284
  7258                           
  7259                           ;Config register CONFIG2 @ 0x8008
  7260                           ;	Flash Memory Self-Write Protection
  7261                           ;	WRT = OFF, Write protection off
  7262                           ;	PPSLOCK bit One-Way Set Enable bit
  7263                           ;	PPS1WAY = ON, PPSLOCKED Bit Can Be Cleared & Set Once
  7264                           ;	PLL Enable
  7265                           ;	PLLEN = ON, 4x PLL enabled
  7266                           ;	Stack Overflow/Underflow Reset Enable
  7267                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7268                           ;	Brown-out Reset Voltage Selection
  7269                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7270                           ;	Low Power Brown-out Reset enable bit
  7271                           ;	LPBOREN = OFF, LPBOR is disabled
  7272                           ;	Low-Voltage Programming Enable
  7273                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7274  8008                     	org	32776
  7275  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    95
    Data        5
    BSS         80
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80      0      75
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5             8      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _T500ms_Event->___xxtofl
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _TwoData_COM->_GetADC
    _ScanF->_GetADC
    _KeyPro->_LED_OFF
    _GetWater->_ReadCurrent
    _ReadCurrent->_GetADC
    _ErrInf->_LED_OFF
    _LED_OFF->_PWMOFF
    _GetKey->_GetADC
    _GetADC->_DelayC

Critical Paths under _main in BANK0

    _main->_T500ms_Event
    _T500ms_Event->___fltol
    ___fltol->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    _TwoData_COM->_GetADC
    _ScanF->_GetADC
    _ReadCurrent->_GetADC
    _GetKey->_GetADC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12040
                                             69 BANK0      1     1      0
                             _GetKey
                           _GetWater
                             _KeyPro
                        _ReadCurrent
                              _ScanF
                       _T100ms_Event
                          _T1s_Event
                       _T500ms_Event
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
                            _AD_init
                           _PWM_init
                         _Time0_init
                         _Time1_init
 ---------------------------------------------------------------------------------
 (2) _Time1_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Time0_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T500ms_Event                                         4     4      0   10415
                                             65 BANK0      4     4      0
                             _GetADC
                           _LED_Show
                             _PWMOFF
                              _PWMON
                        _TwoData_COM
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             54 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _TwoData_COM                                          1     1      0     281
                                              9 COMMON     1     1      0
                             _ErrInf
                             _GetADC
 ---------------------------------------------------------------------------------
 (2) _LED_Show                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _T1s_Event                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T100ms_Event                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ScanF                                                9     9      0     318
                                              9 COMMON     1     1      0
                                              6 BANK0      6     6      0
                             _GetADC
                             _PWMOFF
                              _PWMON
 ---------------------------------------------------------------------------------
 (1) _KeyPro                                               2     2      0       0
                                              2 COMMON     1     1      0
                            _LED_OFF
                              _PWMON
 ---------------------------------------------------------------------------------
 (1) _GetWater                                             3     3      0     547
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                             _PWMOFF
                              _PWMON
                        _ReadCurrent
 ---------------------------------------------------------------------------------
 (1) _ReadCurrent                                          3     3      0     411
                                              9 COMMON     3     3      0
                             _ErrInf
                             _GetADC
 ---------------------------------------------------------------------------------
 (3) _ErrInf                                               0     0      0       0
                            _LED_OFF
                             _PWMOFF
 ---------------------------------------------------------------------------------
 (4) _LED_OFF                                              1     1      0       0
                                              1 COMMON     1     1      0
                             _PWMOFF
 ---------------------------------------------------------------------------------
 (4) _PWMOFF                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWMON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               3     3      0     349
                                              9 COMMON     3     3      0
                             _GetADC
 ---------------------------------------------------------------------------------
 (3) _GetADC                                              10     8      2     281
                                              5 COMMON     4     2      2
                                              0 BANK0      6     6      0
                             _DelayC
 ---------------------------------------------------------------------------------
 (4) _DelayC                                               5     5      0      68
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetKey
     _GetADC
       _DelayC
   _GetWater
     _PWMOFF
     _PWMON
     _ReadCurrent
       _ErrInf
         _LED_OFF
           _PWMOFF
         _PWMOFF
       _GetADC
   _KeyPro
     _LED_OFF
     _PWMON
   _ReadCurrent
   _ScanF
     _GetADC
     _PWMOFF
     _PWMON
   _T100ms_Event
   _T1s_Event
   _T500ms_Event
     _GetADC
     _LED_Show
     _PWMOFF
     _PWMON
     _TwoData_COM
       _ErrInf
       _GetADC
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init
     _AD_init
     _PWM_init
     _Time0_init
     _Time1_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                8      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A9      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 01 15:45:17 2024

                     l72 001B                       l77 005C                       l69 0017  
                     l95 0B1E                       l97 0B1F                       _nt 00D6  
    __Umul8_16@word_mpld 0076                      l410 0C34                      l402 0C01  
                    l430 0DE2                      l422 0DAD                      l520 0C75  
                    l515 0C5D                      l518 0C73                      l527 0A94  
                    l464 0ABC                      l480 0EC4                      l529 0AA5  
                    l481 0EDD                      l482 0EF6                      l476 0E79  
                    l478 0E92                      l479 0EAB                      l903 0277  
                    l920 02FA                      l905 025A                      l941 0371  
                    l933 0359                      l799 0D49                      l899 01E4  
                    _CTA 2198                      _Flg 006F                      _Key 006B  
                    _frq 006C                      _hze 00E5                      wreg 0009  
            _PWMTime_Val 00EA             ___flmul@aexp 0032             ___flmul@bexp 0033  
           ___flmul@sign 002D             ___flmul@temp 0038             ___flmul@prod 0034  
        __end_of_LED_OFF 0B71          __end_of_AD_init 0A7C             ___fltol@exp1 0060  
                   l1014 0AEA                     l1007 07C1                     l1052 0E4A  
                   l1053 0E54                     l1045 0E36                     l1039 0E00  
                   l2304 01D9                     l2314 01EE                     l2420 0320  
                   l2308 01DC                     l2414 0319                     l2406 030C  
                   l2422 0322                     l2432 032D                     l2352 0262  
                   l2344 022A                     l2280 01B1                     l4026 0F18  
                   l2450 0369                     l2370 0285                     l2354 0264  
                   l2362 0272                     l2700 05C6                     l2428 032B  
                   l2380 0299                     l2284 01B4                     l2454 036D  
                   l2286 01BC                     l2464 0AE4                     l2800 0782  
                   l2634 0F0F                     l2810 07AE                     l2714 05DF  
                   l2378 0297                     l2642 0D09                     l3540 0DA3  
                   l3524 0D6A                     l2804 0797                     l2716 05E1  
                   l2388 02A8                     l3630 001F                     l2726 05F7  
                   l2718 05E9                     l2398 02F2                     l2662 0D37  
                   l2646 0D12                     l3560 0DC3                     l3552 0DB3  
                   l3608 0BEB                     l2672 0D56                     l2664 0D45  
                   l2840 0E23                     l3562 0DC4                     l3554 0DB5  
                   l2850 0E3B                     l2834 0E0F                     l3810 054C  
                   l3802 0540                     l3724 0B1D                     l3652 00B7  
                   l3644 0060                     l2780 0740                     l2828 0DF8  
                   l3902 0FCA                     l3670 00C8                     l3646 006C  
                   l2790 0759                     l2862 0E6F                     l2838 0E13  
                   l3822 055A                     l3750 0383                     l3568 0DCD  
                   l3576 0DD9                     l3920 0B80                     l3592 0BD1  
                   l2696 05BC                     l2848 0E48                     l3816 0552  
                   l3832 057E                     l3850 0F42                     l3930 0B8C  
                   l3594 0BD5                     l2786 0757                     l2778 0729  
                   l2698 05BE                     l3826 0573                     l3908 0FE4  
                   l3932 0B8F                     l3676 011A                     l3588 0BCB  
                   l3772 03C4                     l3942 0B9F                     l3694 014E  
                   l3686 0127                     l3766 03BA                     l3758 0391  
                   l3872 0F99                     l3952 0BAF                     l3786 0529  
                   l3778 03D0                     l2994 0CAD                     l3970 0C11  
                   l3892 0FB6                     l3876 0F9E                     l3868 0F90  
                   l3886 0FB1                     l3990 0C2E                     l3982 0C22  
                   l3974 0C18                     l3986 0C28                     _CTA1 00C0  
                   _T0IF 005A                     _LATA 010C                     _LATB 010D  
                   u3015 0D1B                     _LATC 010E                     u2240 0249  
                   u2250 024A                     u2235 023E                     u3205 06F2  
                   u2405 030D                     u3045 0D38                     u3215 0709  
                   u3225 0718                     u2505 0344                     u3235 072C  
                   u2363 02BA                     u2355 029D                     u3075 0D4D  
                   u3325 0770                     u2285 0268                     u5015 00E5  
                   u3335 078B                     u3255 0735                     u3415 0E30  
                   u2800 0E9A                     u5025 0103                     u3345 07A1  
                   u3185 066D                     u2810 0EA1                     u3195 069C  
                   u3435 0E42                     u2900 0EDA                     u2820 0EA8  
                   u5300 058A                     u5045 0144                     u5125 03AB  
                   u2814 0E9C                     u5310 0591                     u5135 03B8  
                   u2920 0EE4                     u2904 0ED5                     u2840 0EB3  
                   u2824 0EA3                     u2760 0E81                     u5320 0598  
                   u2585 0AEB                     u2930 0EEB                     u2850 0EBA  
                   u2770 0E88                     u5330 059F                     u5314 058C  
                   u3475 0E5C                     u3395 0E1C                     u2940 0EF2  
                   u2860 0EC1                     u2780 0E8F                     u5324 0593  
                   u4710 0B5D                     u2934 0EE6                     u2854 0EB5  
                   u2774 0E83                     u5334 059A                     u4704 0B57  
                   u2960 0EFE                     u2944 0EED                     u2880 0ECC  
                   u2864 0EBC                     u2784 0E8A                     u3930 0AB9  
                   u2970 0F05                     u2954 0EF4                     u2890 0ED3  
                   u5355 0F33                     u4724 0B5F                     u4660 0B40  
                   u2980 0F0C                     u5365 0F4B                     u4670 0B47  
                   u2974 0F00                     u2894 0ECE                     u4735 0A9D  
                   u4815 0D95                     u4680 0B4E                     u5560 0B7E  
                   u2984 0F07                     u4690 0B55                     u4674 0B42  
                   u4915 0BC1                     u4684 0B49                     u4765 0C80  
                   u4925 0BC9                     u4694 0B50                     u4795 0D73  
                   u4995 00A0                     _TMR0 0015                     _PWMT 0800  
                   _Flg2 006E                     _WPUA 020C                     _WPUB 020D  
                   _WPUC 020E                     _main 0BFA                     _init 0CA5  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     fsr1l 0006                     btemp 007E  
                   start 0002            ??_ReadCurrent 0079         __end_of_LED_Show 0F2A  
          ___fltol@sign1 005F          __end_of___fladd 0379                    ?_main 0070  
                  ?_init 0070          __end_of___flmul 07CE          __end_of___flsub 0B18  
        __end_of___fltol 0D65                    _ADMax 00E6                    _ADMin 00CC  
                  _T1CON 0018                    _TMR1H 0017                    _TMR1L 0016  
                  _PORTA 000C                    _PORTB 000D                    _PORTC 000E  
                  _PWMON 0005                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _Get3A 00E3                    _ScanF 000B  
     __size_of_T1s_Event 0019                    _adkey 0066                    _hz_cn 00CE  
        __end_of_time_it 085F    __size_of_T100ms_Event 0003         __end_of_PWM_init 0ADA  
                  status 0003                    wtemp0 007E             _adc_true_cnt 00DF  
       __end_of_GetWater 0B39             __end_of_PWMT 0858           _PWM3CLKCONbits 0DBE  
        __initialization 07CE             __end_of_main 0C4B             __end_of_init 0CFF  
                 ??_main 0065                   ??_init 0070      __end_of_ReadCurrent 0DE3  
              ??_LED_OFF 0071                ??_AD_init 0070                   ?_PWMON 0070  
          _adc_false_cnt 00DE                   ?_ScanF 0070             _T100ms_Event 0A36  
                 _ADRESH 009C                   _ADRESL 009B                   _ADMax2 00E8  
                 _ADMin2 00D4                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E                   _AD_Cur 00A0                   _AD_Tal 00CA  
                 _RC3PPS 0EA3               _Time0_init 0A46               _Time1_init 0A5E  
                 _INTCON 000B                   _ERRcnt 00D8    __size_of_T500ms_Event 0229  
                 _TMR1ON 00C0                   _PWMOFF 0A7C         __end_of___xxtofl 0E78  
                 _GetADC 0C4B                   _DelayC 0A91                   _GetKey 0F2A  
                 _KeyADC 00C8                   _CurMax 00D2                   _ErrInf 0A3E  
                 _KeyPro 0B71               _bFors_High 00E1        __end_of_T1s_Event 0AC0  
              ??___fladd 0042                ??___flmul 0028                ??___flsub 007E  
              ??___fltol 005A                   _getcnt 00E2             ReadCurrent@i 007B  
     __size_of__Umul8_16 001F             _T500ms_Event 0379             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FD  
              ?_LED_Show 0070               ___fltol@f1 0056            __end_of_PWMON 000B  
          __end_of_ScanF 0197            ??_TwoData_COM 0079           __pcstackCOMMON 0070  
           __pidataBANK1 0A39              _ReadCurrent 0D65                ?_PWM_init 0070  
                ??_PWMON 0070           _OPTION_REGbits 0095                  ??_ScanF 0026  
              ?_GetWater 0070               __pbssBANK0 0066               __pbssBANK1 00A0  
            ?_Time0_init 0070              ?_Time1_init 0070                  ?_PWMOFF 0070  
             ??_LED_Show 0070                  ?_GetADC 0075                  ?_DelayC 0070  
                ?_GetKey 0070                  ?_ErrInf 0070                  ?_KeyPro 0070  
      __end_of__Umul8_16 0AF9               __pmaintext 0BFA      __end_of_TwoData_COM 0BFA  
                GetADC@i 0023               ??_PWM_init 0070                  _LED_OFF 0B39  
                _AD_init 0A6B                  DelayC@i 0072                ?___xxtofl 0070  
                GetKey@i 007B                  _OSCSTAT 009A                  _OSCTUNE 0098  
                _PWM3DCH 0DB4                  _PWM3DCL 0DB3                  _PWM3PHH 0DB2  
                _PWM3PHL 0DB1                  _PWM3PRH 0DB6                  _PWM3PRL 0DB5  
             ??_GetWater 007C                  _PWMTime 00E4                  ScanF@j1 0079  
                _Failcnt 00D7                  _CurMax2 00D0                  _KeyData 00DA  
        __size_of_PWMOFF 0015                  _KeyTime 00DD          __size_of_GetADC 005A  
                _NoWater 006D          __size_of_DelayC 0016          __size_of_GetKey 00D6  
        __size_of_ErrInf 0008          __size_of_KeyPro 0041                  ___fladd 0197  
                ___flmul 05A2                  ___flsub 0AF9                  ___fltol 0CFF  
    __size_of_Time0_init 000C      __size_of_Time1_init 000D                  __ptext1 0CA5  
                __ptext2 0A5E                  __ptext3 0A46                  __ptext4 0AC0  
                __ptext5 0A6B                  __ptext6 0379                  __ptext7 0DE3  
                __ptext8 0CFF                  __ptext9 0AF9               ??___xxtofl 0074  
         GetADC@total_ad 0021        _T500ms_Event$1203 0062                  _time_it 0858  
                _timecnt 0069                  clrloop0 0A53     end_of_initialization 07FD  
            _TwoData_COM 0BB2                GetWater@i 0026                GetWater@j 0027  
              _T1s_Event 0AA7                _PORTAbits 000C                _PORTBbits 000D  
            ___fladd@grs 004D            ___xxtofl@sign 0078               _stakeytime 0068  
            ___flmul@grs 002E           __end_of_PWMOFF 0A91           __end_of_GetADC 0CA5  
         __end_of_DelayC 0AA7        __size_of_LED_Show 00B2           __end_of_GetKey 1000  
         __end_of_ErrInf 0A46           __end_of_KeyPro 0BB2             ?_ReadCurrent 0070  
             ?_T1s_Event 0070      start_initialization 07CE        __size_of_PWM_init 001A  
           ??_Time0_init 0070             ??_Time1_init 0070        __size_of_GetWater 0021  
               ??_PWMOFF 0070            _PWM3LDCONbits 0DBF                 ??_GetADC 0077  
               ??_DelayC 0070                 ??_GetKey 0079                 ??_ErrInf 0072  
               ??_KeyPro 0072            _PWM3OFCONbits 0DC0                __Umul8_16 0ADA  
            __pdataBANK1 00E6       __end_of_Time0_init 0A52       __end_of_Time1_init 0A6B  
              ___fladd@a 003E                ___fladd@b 003A                _TouchTime 006A  
               ?_LED_OFF 0070                 ?_AD_init 0070              __pbssBIGRAM 2198  
              ___flmul@a 0024                ___flmul@b 0020                ___flsub@a 004E  
              ___flsub@b 0052                ___latbits 0001            __pcstackBANK0 0020  
      __size_of___xxtofl 0095              GetADC@adbuf 0024                 ?___fladd 003A  
               ?___flmul 0020                 ?___flsub 004E                 ?___fltol 0056  
             ?__Umul8_16 0070              ??_T1s_Event 0070           __size_of_PWMON 0006  
          ?_T100ms_Event 0070           __size_of_ScanF 018C                 GetADC@ch 0020  
               _T30s_cnt 00DB                 DelayC@ct 0074                 _LATAbits 010C  
               _LATBbits 010D                 _LATCbits 010E                 _LED_Show 0E78  
              clear_ram0 0A52                 _PIE1bits 0091                 _PIR1bits 0011  
               _PIR3bits 0013             ?_TwoData_COM 0070     __size_of_ReadCurrent 007E  
             _ADCON0bits 009D               _ADCON1bits 009E                 _PWM_init 0AC0  
         ??_T100ms_Event 0070         __size_of_LED_OFF 0038         __size_of_AD_init 0011  
          ?_T500ms_Event 0070                 _GetWater 0B18                 _MinS_Cnt 00D9  
               _ScanWait 00E0             _PWM3INTEbits 0DBC             _PWM3INTFbits 0DBD  
            ??__Umul8_16 0072         __size_of___fladd 01E2         __size_of___flmul 022C  
       __size_of___flsub 001F         __size_of___fltol 0066           ??_T500ms_Event 0061  
               ___xxtofl 0DE3      T500ms_Event@ADC_Val 0063                 __ptext10 0197  
               __ptext11 05A2                 __ptext20 0D65                 __ptext12 0ADA  
               __ptext21 0A3E                 __ptext13 0BB2                 __ptext22 0B39  
               __ptext14 0E78                 __ptext23 0A7C                 __ptext15 0AA7  
               __ptext24 0005                 __ptext16 0A36                 __ptext25 0F2A  
               __ptext17 000B                 __ptext26 0C4B                 __ptext18 0B71  
               __ptext27 0A91                 __ptext19 0B18              _readkeytime 00DC  
          __size_of_main 0051            __size_of_init 005A               _INTCONbits 000B  
            _PWM3CONbits 0DBB     __end_of_T100ms_Event 0A39               _OSCCONbits 0099  
   __size_of_TwoData_COM 0048            __pstringtext1 0800            __pstringtext2 0858  
 __Umul8_16@multiplicand 0070               _OPTION_REG 0095            ___fladd@signs 004A  
           ___fladd@aexp 004B             ___fladd@bexp 004C     __Umul8_16@multiplier 0078  
   __end_of_T500ms_Event 05A2        __Umul8_16@product 0074  
