

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 01 15:45:24 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F1578
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x320,16
    44                           	dabs	1,0x2A8,72
    45                           	dabs	1,0x2198,0,_CTA
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1578 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  018E                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0197                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  020E                     	;# 
   162  028C                     	;# 
   163  028D                     	;# 
   164  028E                     	;# 
   165  030C                     	;# 
   166  030D                     	;# 
   167  030E                     	;# 
   168  038C                     	;# 
   169  038D                     	;# 
   170  038E                     	;# 
   171  0391                     	;# 
   172  0392                     	;# 
   173  0393                     	;# 
   174  0394                     	;# 
   175  0395                     	;# 
   176  0396                     	;# 
   177  0397                     	;# 
   178  0398                     	;# 
   179  0399                     	;# 
   180  0691                     	;# 
   181  0692                     	;# 
   182  0693                     	;# 
   183  0694                     	;# 
   184  0695                     	;# 
   185  0D8E                     	;# 
   186  0D8F                     	;# 
   187  0D90                     	;# 
   188  0D91                     	;# 
   189  0D91                     	;# 
   190  0D92                     	;# 
   191  0D93                     	;# 
   192  0D93                     	;# 
   193  0D94                     	;# 
   194  0D95                     	;# 
   195  0D95                     	;# 
   196  0D96                     	;# 
   197  0D97                     	;# 
   198  0D97                     	;# 
   199  0D98                     	;# 
   200  0D99                     	;# 
   201  0D99                     	;# 
   202  0D9A                     	;# 
   203  0D9B                     	;# 
   204  0D9C                     	;# 
   205  0D9C                     	;# 
   206  0D9D                     	;# 
   207  0D9D                     	;# 
   208  0D9E                     	;# 
   209  0D9F                     	;# 
   210  0DA0                     	;# 
   211  0DA1                     	;# 
   212  0DA1                     	;# 
   213  0DA2                     	;# 
   214  0DA3                     	;# 
   215  0DA3                     	;# 
   216  0DA4                     	;# 
   217  0DA5                     	;# 
   218  0DA5                     	;# 
   219  0DA6                     	;# 
   220  0DA7                     	;# 
   221  0DA7                     	;# 
   222  0DA8                     	;# 
   223  0DA9                     	;# 
   224  0DA9                     	;# 
   225  0DAA                     	;# 
   226  0DAB                     	;# 
   227  0DAC                     	;# 
   228  0DAC                     	;# 
   229  0DAD                     	;# 
   230  0DAD                     	;# 
   231  0DAE                     	;# 
   232  0DAF                     	;# 
   233  0DB0                     	;# 
   234  0DB1                     	;# 
   235  0DB1                     	;# 
   236  0DB2                     	;# 
   237  0DB3                     	;# 
   238  0DB3                     	;# 
   239  0DB4                     	;# 
   240  0DB5                     	;# 
   241  0DB5                     	;# 
   242  0DB6                     	;# 
   243  0DB7                     	;# 
   244  0DB7                     	;# 
   245  0DB8                     	;# 
   246  0DB9                     	;# 
   247  0DB9                     	;# 
   248  0DBA                     	;# 
   249  0DBB                     	;# 
   250  0DBC                     	;# 
   251  0DBC                     	;# 
   252  0DBD                     	;# 
   253  0DBD                     	;# 
   254  0DBE                     	;# 
   255  0DBF                     	;# 
   256  0DC0                     	;# 
   257  0DC1                     	;# 
   258  0DC1                     	;# 
   259  0DC2                     	;# 
   260  0DC3                     	;# 
   261  0DC3                     	;# 
   262  0DC4                     	;# 
   263  0DC5                     	;# 
   264  0DC5                     	;# 
   265  0DC6                     	;# 
   266  0DC7                     	;# 
   267  0DC7                     	;# 
   268  0DC8                     	;# 
   269  0DC9                     	;# 
   270  0DC9                     	;# 
   271  0DCA                     	;# 
   272  0DCB                     	;# 
   273  0DCC                     	;# 
   274  0DCC                     	;# 
   275  0DCD                     	;# 
   276  0DCD                     	;# 
   277  0DCE                     	;# 
   278  0DCF                     	;# 
   279  0DD0                     	;# 
   280  0E0F                     	;# 
   281  0E10                     	;# 
   282  0E11                     	;# 
   283  0E12                     	;# 
   284  0E13                     	;# 
   285  0E14                     	;# 
   286  0E15                     	;# 
   287  0E16                     	;# 
   288  0E17                     	;# 
   289  0E90                     	;# 
   290  0E91                     	;# 
   291  0E92                     	;# 
   292  0E94                     	;# 
   293  0E95                     	;# 
   294  0E9C                     	;# 
   295  0E9D                     	;# 
   296  0E9E                     	;# 
   297  0E9F                     	;# 
   298  0EA0                     	;# 
   299  0EA1                     	;# 
   300  0EA2                     	;# 
   301  0EA3                     	;# 
   302  0EA4                     	;# 
   303  0EA5                     	;# 
   304  0EA6                     	;# 
   305  0EA7                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE8                     	;# 
   312  0FE9                     	;# 
   313  0FEA                     	;# 
   314  0FEA                     	;# 
   315  0FEB                     	;# 
   316  0FED                     	;# 
   317  0FEE                     	;# 
   318  0FEE                     	;# 
   319  0FEF                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  018E                     	;# 
   380  0191                     	;# 
   381  0191                     	;# 
   382  0192                     	;# 
   383  0193                     	;# 
   384  0193                     	;# 
   385  0194                     	;# 
   386  0195                     	;# 
   387  0196                     	;# 
   388  0197                     	;# 
   389  0199                     	;# 
   390  019A                     	;# 
   391  019B                     	;# 
   392  019B                     	;# 
   393  019C                     	;# 
   394  019D                     	;# 
   395  019E                     	;# 
   396  019F                     	;# 
   397  020C                     	;# 
   398  020D                     	;# 
   399  020E                     	;# 
   400  028C                     	;# 
   401  028D                     	;# 
   402  028E                     	;# 
   403  030C                     	;# 
   404  030D                     	;# 
   405  030E                     	;# 
   406  038C                     	;# 
   407  038D                     	;# 
   408  038E                     	;# 
   409  0391                     	;# 
   410  0392                     	;# 
   411  0393                     	;# 
   412  0394                     	;# 
   413  0395                     	;# 
   414  0396                     	;# 
   415  0397                     	;# 
   416  0398                     	;# 
   417  0399                     	;# 
   418  0691                     	;# 
   419  0692                     	;# 
   420  0693                     	;# 
   421  0694                     	;# 
   422  0695                     	;# 
   423  0D8E                     	;# 
   424  0D8F                     	;# 
   425  0D90                     	;# 
   426  0D91                     	;# 
   427  0D91                     	;# 
   428  0D92                     	;# 
   429  0D93                     	;# 
   430  0D93                     	;# 
   431  0D94                     	;# 
   432  0D95                     	;# 
   433  0D95                     	;# 
   434  0D96                     	;# 
   435  0D97                     	;# 
   436  0D97                     	;# 
   437  0D98                     	;# 
   438  0D99                     	;# 
   439  0D99                     	;# 
   440  0D9A                     	;# 
   441  0D9B                     	;# 
   442  0D9C                     	;# 
   443  0D9C                     	;# 
   444  0D9D                     	;# 
   445  0D9D                     	;# 
   446  0D9E                     	;# 
   447  0D9F                     	;# 
   448  0DA0                     	;# 
   449  0DA1                     	;# 
   450  0DA1                     	;# 
   451  0DA2                     	;# 
   452  0DA3                     	;# 
   453  0DA3                     	;# 
   454  0DA4                     	;# 
   455  0DA5                     	;# 
   456  0DA5                     	;# 
   457  0DA6                     	;# 
   458  0DA7                     	;# 
   459  0DA7                     	;# 
   460  0DA8                     	;# 
   461  0DA9                     	;# 
   462  0DA9                     	;# 
   463  0DAA                     	;# 
   464  0DAB                     	;# 
   465  0DAC                     	;# 
   466  0DAC                     	;# 
   467  0DAD                     	;# 
   468  0DAD                     	;# 
   469  0DAE                     	;# 
   470  0DAF                     	;# 
   471  0DB0                     	;# 
   472  0DB1                     	;# 
   473  0DB1                     	;# 
   474  0DB2                     	;# 
   475  0DB3                     	;# 
   476  0DB3                     	;# 
   477  0DB4                     	;# 
   478  0DB5                     	;# 
   479  0DB5                     	;# 
   480  0DB6                     	;# 
   481  0DB7                     	;# 
   482  0DB7                     	;# 
   483  0DB8                     	;# 
   484  0DB9                     	;# 
   485  0DB9                     	;# 
   486  0DBA                     	;# 
   487  0DBB                     	;# 
   488  0DBC                     	;# 
   489  0DBC                     	;# 
   490  0DBD                     	;# 
   491  0DBD                     	;# 
   492  0DBE                     	;# 
   493  0DBF                     	;# 
   494  0DC0                     	;# 
   495  0DC1                     	;# 
   496  0DC1                     	;# 
   497  0DC2                     	;# 
   498  0DC3                     	;# 
   499  0DC3                     	;# 
   500  0DC4                     	;# 
   501  0DC5                     	;# 
   502  0DC5                     	;# 
   503  0DC6                     	;# 
   504  0DC7                     	;# 
   505  0DC7                     	;# 
   506  0DC8                     	;# 
   507  0DC9                     	;# 
   508  0DC9                     	;# 
   509  0DCA                     	;# 
   510  0DCB                     	;# 
   511  0DCC                     	;# 
   512  0DCC                     	;# 
   513  0DCD                     	;# 
   514  0DCD                     	;# 
   515  0DCE                     	;# 
   516  0DCF                     	;# 
   517  0DD0                     	;# 
   518  0E0F                     	;# 
   519  0E10                     	;# 
   520  0E11                     	;# 
   521  0E12                     	;# 
   522  0E13                     	;# 
   523  0E14                     	;# 
   524  0E15                     	;# 
   525  0E16                     	;# 
   526  0E17                     	;# 
   527  0E90                     	;# 
   528  0E91                     	;# 
   529  0E92                     	;# 
   530  0E94                     	;# 
   531  0E95                     	;# 
   532  0E9C                     	;# 
   533  0E9D                     	;# 
   534  0E9E                     	;# 
   535  0E9F                     	;# 
   536  0EA0                     	;# 
   537  0EA1                     	;# 
   538  0EA2                     	;# 
   539  0EA3                     	;# 
   540  0EA4                     	;# 
   541  0EA5                     	;# 
   542  0EA6                     	;# 
   543  0EA7                     	;# 
   544  0FE4                     	;# 
   545  0FE5                     	;# 
   546  0FE6                     	;# 
   547  0FE7                     	;# 
   548  0FE8                     	;# 
   549  0FE8                     	;# 
   550  0FE9                     	;# 
   551  0FEA                     	;# 
   552  0FEA                     	;# 
   553  0FEB                     	;# 
   554  0FED                     	;# 
   555  0FEE                     	;# 
   556  0FEE                     	;# 
   557  0FEF                     	;# 
   558  0000                     	;# 
   559  0001                     	;# 
   560  0002                     	;# 
   561  0003                     	;# 
   562  0004                     	;# 
   563  0005                     	;# 
   564  0006                     	;# 
   565  0007                     	;# 
   566  0008                     	;# 
   567  0009                     	;# 
   568  000A                     	;# 
   569  000B                     	;# 
   570  000C                     	;# 
   571  000D                     	;# 
   572  000E                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0016                     	;# 
   579  0017                     	;# 
   580  0018                     	;# 
   581  0019                     	;# 
   582  001A                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  008C                     	;# 
   586  008D                     	;# 
   587  008E                     	;# 
   588  0091                     	;# 
   589  0092                     	;# 
   590  0093                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  0111                     	;# 
   607  0112                     	;# 
   608  0113                     	;# 
   609  0114                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  018E                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0197                     	;# 
   627  0199                     	;# 
   628  019A                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019C                     	;# 
   632  019D                     	;# 
   633  019E                     	;# 
   634  019F                     	;# 
   635  020C                     	;# 
   636  020D                     	;# 
   637  020E                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  030C                     	;# 
   642  030D                     	;# 
   643  030E                     	;# 
   644  038C                     	;# 
   645  038D                     	;# 
   646  038E                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  0691                     	;# 
   657  0692                     	;# 
   658  0693                     	;# 
   659  0694                     	;# 
   660  0695                     	;# 
   661  0D8E                     	;# 
   662  0D8F                     	;# 
   663  0D90                     	;# 
   664  0D91                     	;# 
   665  0D91                     	;# 
   666  0D92                     	;# 
   667  0D93                     	;# 
   668  0D93                     	;# 
   669  0D94                     	;# 
   670  0D95                     	;# 
   671  0D95                     	;# 
   672  0D96                     	;# 
   673  0D97                     	;# 
   674  0D97                     	;# 
   675  0D98                     	;# 
   676  0D99                     	;# 
   677  0D99                     	;# 
   678  0D9A                     	;# 
   679  0D9B                     	;# 
   680  0D9C                     	;# 
   681  0D9C                     	;# 
   682  0D9D                     	;# 
   683  0D9D                     	;# 
   684  0D9E                     	;# 
   685  0D9F                     	;# 
   686  0DA0                     	;# 
   687  0DA1                     	;# 
   688  0DA1                     	;# 
   689  0DA2                     	;# 
   690  0DA3                     	;# 
   691  0DA3                     	;# 
   692  0DA4                     	;# 
   693  0DA5                     	;# 
   694  0DA5                     	;# 
   695  0DA6                     	;# 
   696  0DA7                     	;# 
   697  0DA7                     	;# 
   698  0DA8                     	;# 
   699  0DA9                     	;# 
   700  0DA9                     	;# 
   701  0DAA                     	;# 
   702  0DAB                     	;# 
   703  0DAC                     	;# 
   704  0DAC                     	;# 
   705  0DAD                     	;# 
   706  0DAD                     	;# 
   707  0DAE                     	;# 
   708  0DAF                     	;# 
   709  0DB0                     	;# 
   710  0DB1                     	;# 
   711  0DB1                     	;# 
   712  0DB2                     	;# 
   713  0DB3                     	;# 
   714  0DB3                     	;# 
   715  0DB4                     	;# 
   716  0DB5                     	;# 
   717  0DB5                     	;# 
   718  0DB6                     	;# 
   719  0DB7                     	;# 
   720  0DB7                     	;# 
   721  0DB8                     	;# 
   722  0DB9                     	;# 
   723  0DB9                     	;# 
   724  0DBA                     	;# 
   725  0DBB                     	;# 
   726  0DBC                     	;# 
   727  0DBC                     	;# 
   728  0DBD                     	;# 
   729  0DBD                     	;# 
   730  0DBE                     	;# 
   731  0DBF                     	;# 
   732  0DC0                     	;# 
   733  0DC1                     	;# 
   734  0DC1                     	;# 
   735  0DC2                     	;# 
   736  0DC3                     	;# 
   737  0DC3                     	;# 
   738  0DC4                     	;# 
   739  0DC5                     	;# 
   740  0DC5                     	;# 
   741  0DC6                     	;# 
   742  0DC7                     	;# 
   743  0DC7                     	;# 
   744  0DC8                     	;# 
   745  0DC9                     	;# 
   746  0DC9                     	;# 
   747  0DCA                     	;# 
   748  0DCB                     	;# 
   749  0DCC                     	;# 
   750  0DCC                     	;# 
   751  0DCD                     	;# 
   752  0DCD                     	;# 
   753  0DCE                     	;# 
   754  0DCF                     	;# 
   755  0DD0                     	;# 
   756  0E0F                     	;# 
   757  0E10                     	;# 
   758  0E11                     	;# 
   759  0E12                     	;# 
   760  0E13                     	;# 
   761  0E14                     	;# 
   762  0E15                     	;# 
   763  0E16                     	;# 
   764  0E17                     	;# 
   765  0E90                     	;# 
   766  0E91                     	;# 
   767  0E92                     	;# 
   768  0E94                     	;# 
   769  0E95                     	;# 
   770  0E9C                     	;# 
   771  0E9D                     	;# 
   772  0E9E                     	;# 
   773  0E9F                     	;# 
   774  0EA0                     	;# 
   775  0EA1                     	;# 
   776  0EA2                     	;# 
   777  0EA3                     	;# 
   778  0EA4                     	;# 
   779  0EA5                     	;# 
   780  0EA6                     	;# 
   781  0EA7                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE8                     	;# 
   788  0FE9                     	;# 
   789  0FEA                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEE                     	;# 
   795  0FEF                     	;# 
   796  0000                     	;# 
   797  0001                     	;# 
   798  0002                     	;# 
   799  0003                     	;# 
   800  0004                     	;# 
   801  0005                     	;# 
   802  0006                     	;# 
   803  0007                     	;# 
   804  0008                     	;# 
   805  0009                     	;# 
   806  000A                     	;# 
   807  000B                     	;# 
   808  000C                     	;# 
   809  000D                     	;# 
   810  000E                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  008C                     	;# 
   824  008D                     	;# 
   825  008E                     	;# 
   826  0091                     	;# 
   827  0092                     	;# 
   828  0093                     	;# 
   829  0095                     	;# 
   830  0096                     	;# 
   831  0097                     	;# 
   832  0098                     	;# 
   833  0099                     	;# 
   834  009A                     	;# 
   835  009B                     	;# 
   836  009B                     	;# 
   837  009C                     	;# 
   838  009D                     	;# 
   839  009E                     	;# 
   840  009F                     	;# 
   841  010C                     	;# 
   842  010D                     	;# 
   843  010E                     	;# 
   844  0111                     	;# 
   845  0112                     	;# 
   846  0113                     	;# 
   847  0114                     	;# 
   848  0115                     	;# 
   849  0116                     	;# 
   850  0117                     	;# 
   851  0118                     	;# 
   852  0119                     	;# 
   853  018C                     	;# 
   854  018D                     	;# 
   855  018E                     	;# 
   856  0191                     	;# 
   857  0191                     	;# 
   858  0192                     	;# 
   859  0193                     	;# 
   860  0193                     	;# 
   861  0194                     	;# 
   862  0195                     	;# 
   863  0196                     	;# 
   864  0197                     	;# 
   865  0199                     	;# 
   866  019A                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019C                     	;# 
   870  019D                     	;# 
   871  019E                     	;# 
   872  019F                     	;# 
   873  020C                     	;# 
   874  020D                     	;# 
   875  020E                     	;# 
   876  028C                     	;# 
   877  028D                     	;# 
   878  028E                     	;# 
   879  030C                     	;# 
   880  030D                     	;# 
   881  030E                     	;# 
   882  038C                     	;# 
   883  038D                     	;# 
   884  038E                     	;# 
   885  0391                     	;# 
   886  0392                     	;# 
   887  0393                     	;# 
   888  0394                     	;# 
   889  0395                     	;# 
   890  0396                     	;# 
   891  0397                     	;# 
   892  0398                     	;# 
   893  0399                     	;# 
   894  0691                     	;# 
   895  0692                     	;# 
   896  0693                     	;# 
   897  0694                     	;# 
   898  0695                     	;# 
   899  0D8E                     	;# 
   900  0D8F                     	;# 
   901  0D90                     	;# 
   902  0D91                     	;# 
   903  0D91                     	;# 
   904  0D92                     	;# 
   905  0D93                     	;# 
   906  0D93                     	;# 
   907  0D94                     	;# 
   908  0D95                     	;# 
   909  0D95                     	;# 
   910  0D96                     	;# 
   911  0D97                     	;# 
   912  0D97                     	;# 
   913  0D98                     	;# 
   914  0D99                     	;# 
   915  0D99                     	;# 
   916  0D9A                     	;# 
   917  0D9B                     	;# 
   918  0D9C                     	;# 
   919  0D9C                     	;# 
   920  0D9D                     	;# 
   921  0D9D                     	;# 
   922  0D9E                     	;# 
   923  0D9F                     	;# 
   924  0DA0                     	;# 
   925  0DA1                     	;# 
   926  0DA1                     	;# 
   927  0DA2                     	;# 
   928  0DA3                     	;# 
   929  0DA3                     	;# 
   930  0DA4                     	;# 
   931  0DA5                     	;# 
   932  0DA5                     	;# 
   933  0DA6                     	;# 
   934  0DA7                     	;# 
   935  0DA7                     	;# 
   936  0DA8                     	;# 
   937  0DA9                     	;# 
   938  0DA9                     	;# 
   939  0DAA                     	;# 
   940  0DAB                     	;# 
   941  0DAC                     	;# 
   942  0DAC                     	;# 
   943  0DAD                     	;# 
   944  0DAD                     	;# 
   945  0DAE                     	;# 
   946  0DAF                     	;# 
   947  0DB0                     	;# 
   948  0DB1                     	;# 
   949  0DB1                     	;# 
   950  0DB2                     	;# 
   951  0DB3                     	;# 
   952  0DB3                     	;# 
   953  0DB4                     	;# 
   954  0DB5                     	;# 
   955  0DB5                     	;# 
   956  0DB6                     	;# 
   957  0DB7                     	;# 
   958  0DB7                     	;# 
   959  0DB8                     	;# 
   960  0DB9                     	;# 
   961  0DB9                     	;# 
   962  0DBA                     	;# 
   963  0DBB                     	;# 
   964  0DBC                     	;# 
   965  0DBC                     	;# 
   966  0DBD                     	;# 
   967  0DBD                     	;# 
   968  0DBE                     	;# 
   969  0DBF                     	;# 
   970  0DC0                     	;# 
   971  0DC1                     	;# 
   972  0DC1                     	;# 
   973  0DC2                     	;# 
   974  0DC3                     	;# 
   975  0DC3                     	;# 
   976  0DC4                     	;# 
   977  0DC5                     	;# 
   978  0DC5                     	;# 
   979  0DC6                     	;# 
   980  0DC7                     	;# 
   981  0DC7                     	;# 
   982  0DC8                     	;# 
   983  0DC9                     	;# 
   984  0DC9                     	;# 
   985  0DCA                     	;# 
   986  0DCB                     	;# 
   987  0DCC                     	;# 
   988  0DCC                     	;# 
   989  0DCD                     	;# 
   990  0DCD                     	;# 
   991  0DCE                     	;# 
   992  0DCF                     	;# 
   993  0DD0                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E90                     	;# 
  1004  0E91                     	;# 
  1005  0E92                     	;# 
  1006  0E94                     	;# 
  1007  0E95                     	;# 
  1008  0E9C                     	;# 
  1009  0E9D                     	;# 
  1010  0E9E                     	;# 
  1011  0E9F                     	;# 
  1012  0EA0                     	;# 
  1013  0EA1                     	;# 
  1014  0EA2                     	;# 
  1015  0EA3                     	;# 
  1016  0EA4                     	;# 
  1017  0EA5                     	;# 
  1018  0EA6                     	;# 
  1019  0EA7                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE8                     	;# 
  1026  0FE9                     	;# 
  1027  0FEA                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEE                     	;# 
  1033  0FEF                     	;_CTA
  1034                           
  1035                           	psect	idataBANK1
  1036  0A74                     __pidataBANK1:
  1037                           
  1038                           ;initializer for _ADMax
  1039  0A74  34FF               	retlw	255
  1040  0A75  34FF               	retlw	255
  1041                           
  1042                           ;initializer for _ADMax2
  1043  0A76  34FF               	retlw	255
  1044  0A77  34FF               	retlw	255
  1045                           
  1046                           ;initializer for _PWMTime_Val
  1047  0A78  3402               	retlw	2
  1048                           
  1049                           	psect	stringtext1
  1050  0800                     __pstringtext1:
  1051  0800                     _PWMT:
  1052  0800  3422               	retlw	34
  1053  0801  3401               	retlw	1
  1054  0802  3421               	retlw	33
  1055  0803  3401               	retlw	1
  1056  0804  3420               	retlw	32
  1057  0805  3401               	retlw	1
  1058  0806  341F               	retlw	31
  1059  0807  3401               	retlw	1
  1060  0808  341E               	retlw	30
  1061  0809  3401               	retlw	1
  1062  080A  341D               	retlw	29
  1063  080B  3401               	retlw	1
  1064  080C  341C               	retlw	28
  1065  080D  3401               	retlw	1
  1066  080E  341B               	retlw	27
  1067  080F  3401               	retlw	1
  1068  0810  341A               	retlw	26
  1069  0811  3401               	retlw	1
  1070  0812  3419               	retlw	25
  1071  0813  3401               	retlw	1
  1072  0814  3418               	retlw	24
  1073  0815  3401               	retlw	1
  1074  0816  3417               	retlw	23
  1075  0817  3401               	retlw	1
  1076  0818  3416               	retlw	22
  1077  0819  3401               	retlw	1
  1078  081A  3415               	retlw	21
  1079  081B  3401               	retlw	1
  1080  081C  3414               	retlw	20
  1081  081D  3401               	retlw	1
  1082  081E  3413               	retlw	19
  1083  081F  3401               	retlw	1
  1084  0820  3412               	retlw	18
  1085  0821  3401               	retlw	1
  1086  0822  3411               	retlw	17
  1087  0823  3401               	retlw	1
  1088  0824  3410               	retlw	16
  1089  0825  3401               	retlw	1
  1090  0826  340F               	retlw	15
  1091  0827  3401               	retlw	1
  1092  0828  340E               	retlw	14
  1093  0829  3401               	retlw	1
  1094  082A  340D               	retlw	13
  1095  082B  3401               	retlw	1
  1096  082C  340C               	retlw	12
  1097  082D  3401               	retlw	1
  1098  082E  340B               	retlw	11
  1099  082F  3401               	retlw	1
  1100  0830  340A               	retlw	10
  1101  0831  3401               	retlw	1
  1102  0832  3409               	retlw	9
  1103  0833  3401               	retlw	1
  1104  0834  3408               	retlw	8
  1105  0835  3401               	retlw	1
  1106  0836  3407               	retlw	7
  1107  0837  3401               	retlw	1
  1108  0838  3406               	retlw	6
  1109  0839  3401               	retlw	1
  1110  083A  3405               	retlw	5
  1111  083B  3401               	retlw	1
  1112  083C  3404               	retlw	4
  1113  083D  3401               	retlw	1
  1114  083E  3403               	retlw	3
  1115  083F  3401               	retlw	1
  1116  0840  3402               	retlw	2
  1117  0841  3401               	retlw	1
  1118  0842  3401               	retlw	1
  1119  0843  3401               	retlw	1
  1120  0844  3400               	retlw	0
  1121  0845  3401               	retlw	1
  1122  0846  34FE               	retlw	254
  1123  0847  3400               	retlw	0
  1124  0848  34FD               	retlw	253
  1125  0849  3400               	retlw	0
  1126  084A  34FC               	retlw	252
  1127  084B  3400               	retlw	0
  1128  084C  34FB               	retlw	251
  1129  084D  3400               	retlw	0
  1130  084E  34FA               	retlw	250
  1131  084F  3400               	retlw	0
  1132  0850  34F9               	retlw	249
  1133  0851  3400               	retlw	0
  1134  0852  34F8               	retlw	248
  1135  0853  3400               	retlw	0
  1136  0854  34F7               	retlw	247
  1137  0855  3400               	retlw	0
  1138  0856  3400               	retlw	0
  1139  0857  3400               	retlw	0
  1140  0858                     __end_of_PWMT:
  1141                           
  1142                           	psect	stringtext2
  1143  0858                     __pstringtext2:
  1144  0858                     _time_it:
  1145  0858  34FA               	retlw	250
  1146  0859  347D               	retlw	125
  1147  085A  343E               	retlw	62
  1148  085B  341F               	retlw	31
  1149  085C  3410               	retlw	16
  1150  085D  3408               	retlw	8
  1151  085E  3404               	retlw	4
  1152  085F                     __end_of_time_it:
  1153  000D                     _PORTBbits	set	13
  1154  000C                     _PORTAbits	set	12
  1155  0011                     _PIR1bits	set	17
  1156  0016                     _TMR1L	set	22
  1157  0017                     _TMR1H	set	23
  1158  0018                     _T1CON	set	24
  1159  0015                     _TMR0	set	21
  1160  000B                     _INTCONbits	set	11
  1161  000B                     _INTCON	set	11
  1162  000E                     _PORTC	set	14
  1163  000D                     _PORTB	set	13
  1164  000C                     _PORTA	set	12
  1165  00C0                     _TMR1ON	set	192
  1166  009B                     _ADRESL	set	155
  1167  009C                     _ADRESH	set	156
  1168  009E                     _ADCON1bits	set	158
  1169  009D                     _ADCON0bits	set	157
  1170  0091                     _PIE1bits	set	145
  1171  0095                     _OPTION_REGbits	set	149
  1172  0095                     _OPTION_REG	set	149
  1173  008E                     _TRISC	set	142
  1174  008D                     _TRISB	set	141
  1175  008C                     _TRISA	set	140
  1176  009A                     _OSCSTAT	set	154
  1177  0099                     _OSCCONbits	set	153
  1178  0098                     _OSCTUNE	set	152
  1179  010C                     _LATAbits	set	268
  1180  010D                     _LATBbits	set	269
  1181  010E                     _LATC	set	270
  1182  010D                     _LATB	set	269
  1183  010C                     _LATA	set	268
  1184  010E                     _LATCbits	set	270
  1185  018E                     _ANSELC	set	398
  1186  018D                     _ANSELB	set	397
  1187  018C                     _ANSELA	set	396
  1188  020E                     _WPUC	set	526
  1189  020D                     _WPUB	set	525
  1190  020C                     _WPUA	set	524
  1191  0DBD                     _PWM3INTFbits	set	3517
  1192  0DBC                     _PWM3INTEbits	set	3516
  1193  0DB1                     _PWM3PHL	set	3505
  1194  0DB2                     _PWM3PHH	set	3506
  1195  0DC0                     _PWM3OFCONbits	set	3520
  1196  0DBF                     _PWM3LDCONbits	set	3519
  1197  0DBE                     _PWM3CLKCONbits	set	3518
  1198  0DBB                     _PWM3CONbits	set	3515
  1199  0DB3                     _PWM3DCL	set	3507
  1200  0DB4                     _PWM3DCH	set	3508
  1201  0DB5                     _PWM3PRL	set	3509
  1202  0DB6                     _PWM3PRH	set	3510
  1203  0EA3                     _RC3PPS	set	3747
  1204                           
  1205                           	psect	cinit
  1206  07CE                     start_initialization:	
  1207                           ; #config settings
  1208                           
  1209  07CE                     __initialization:	;BIGRAM
  1210                           
  1211                           ; Initialize objects allocated to BANK1
  1212  07CE  3074               	movlw	low __pidataBANK1
  1213  07CF  0084               	movwf	4
  1214  07D0  308A               	movlw	(high __pidataBANK1)| (0+128)
  1215  07D1  0085               	movwf	5
  1216  07D2  0021               	movlb	1	; select bank1
  1217  07D3  0012               	moviw fsr0++
  1218  07D4  00E6               	movwf	__pdataBANK1& (0+127)
  1219  07D5  0012               	moviw fsr0++
  1220  07D6  00E7               	movwf	(__pdataBANK1+1)& (0+127)
  1221  07D7  0012               	moviw fsr0++
  1222  07D8  00E8               	movwf	(__pdataBANK1+2)& (0+127)
  1223  07D9  0012               	moviw fsr0++
  1224  07DA  00E9               	movwf	(__pdataBANK1+3)& (0+127)
  1225  07DB  0012               	moviw fsr0++
  1226  07DC  00EA               	movwf	(__pdataBANK1+4)& (0+127)
  1227                           
  1228                           ; Clear objects allocated to BIGRAM
  1229  07DD  3098               	movlw	low (0+8600)
  1230  07DE  0084               	movwf	4
  1231  07DF  3021               	movlw	high (0+8600)
  1232  07E0  0085               	movwf	5
  1233  07E1  3058               	movlw	88
  1234  07E2  00FE               	movwf	btemp
  1235  07E3  3000               	movlw	0
  1236  07E4  00FF               	movwf	btemp+1
  1237  07E5  318A  229F  3187   	fcall	clear_ram0
  1238                           
  1239                           ; Clear objects allocated to BANK0
  1240  07E8  3066               	movlw	low __pbssBANK0
  1241  07E9  0084               	movwf	4
  1242  07EA  3000               	movlw	high __pbssBANK0
  1243  07EB  0085               	movwf	5
  1244  07EC  300A               	movlw	10
  1245  07ED  00FE               	movwf	btemp
  1246  07EE  3000               	movlw	0
  1247  07EF  00FF               	movwf	btemp+1
  1248  07F0  318A  229F  3187   	fcall	clear_ram0
  1249                           
  1250                           ; Clear objects allocated to BANK1
  1251  07F3  30A0               	movlw	low __pbssBANK1
  1252  07F4  0084               	movwf	4
  1253  07F5  3000               	movlw	high __pbssBANK1
  1254  07F6  0085               	movwf	5
  1255  07F7  3046               	movlw	70
  1256  07F8  00FE               	movwf	btemp
  1257  07F9  3000               	movlw	0
  1258  07FA  00FF               	movwf	btemp+1
  1259  07FB  318A  229F         	fcall	clear_ram0
  1260  07FD                     end_of_initialization:	
  1261                           ;End of C runtime variable initialization code
  1262                           
  1263  07FD                     __end_of__initialization:
  1264  07FD  0020               	movlb	0
  1265  07FE  318B  2BFF         	ljmp	_main	;jump to C main() function
  1266                           
  1267                           	psect	bssBANK0
  1268  0066                     __pbssBANK0:
  1269  0066                     _adkey:
  1270  0066                     	ds	2
  1271  0068                     _stakeytime:
  1272  0068                     	ds	1
  1273  0069                     _TouchTime:
  1274  0069                     	ds	1
  1275  006A                     _Key:
  1276  006A                     	ds	1
  1277  006B                     _frq:
  1278  006B                     	ds	1
  1279  006C                     _ScanWait:
  1280  006C                     	ds	1
  1281  006D                     _NoWater:
  1282  006D                     	ds	1
  1283  006E                     _Flg2:
  1284  006E                     	ds	1
  1285  006F                     _Flg:
  1286  006F                     	ds	1
  1287                           
  1288                           	psect	bssBANK1
  1289  00A0                     __pbssBANK1:
  1290  00A0                     _AD_Cur:
  1291  00A0                     	ds	32
  1292  00C0                     _CTA1:
  1293  00C0                     	ds	8
  1294  00C8                     _KeyADC:
  1295  00C8                     	ds	2
  1296  00CA                     _AD_Tal:
  1297  00CA                     	ds	2
  1298  00CC                     _ADMin:
  1299  00CC                     	ds	2
  1300  00CE                     _hz_cn:
  1301  00CE                     	ds	2
  1302  00D0                     _CurMax2:
  1303  00D0                     	ds	2
  1304  00D2                     _CurMax:
  1305  00D2                     	ds	2
  1306  00D4                     _ADMin2:
  1307  00D4                     	ds	2
  1308  00D6                     _nt:
  1309  00D6                     	ds	1
  1310  00D7                     _Failcnt:
  1311  00D7                     	ds	1
  1312  00D8                     _ERRcnt:
  1313  00D8                     	ds	1
  1314  00D9                     _MinS_Cnt:
  1315  00D9                     	ds	1
  1316  00DA                     _KeyData:
  1317  00DA                     	ds	1
  1318  00DB                     _T30s_cnt:
  1319  00DB                     	ds	1
  1320  00DC                     _timecnt:
  1321  00DC                     	ds	1
  1322  00DD                     _readkeytime:
  1323  00DD                     	ds	1
  1324  00DE                     _KeyTime:
  1325  00DE                     	ds	1
  1326  00DF                     _adc_false_cnt:
  1327  00DF                     	ds	1
  1328  00E0                     _adc_true_cnt:
  1329  00E0                     	ds	1
  1330  00E1                     _bFors_High:
  1331  00E1                     	ds	1
  1332  00E2                     _getcnt:
  1333  00E2                     	ds	1
  1334  00E3                     _Get3A:
  1335  00E3                     	ds	1
  1336  00E4                     _PWMTime:
  1337  00E4                     	ds	1
  1338  00E5                     _hze:
  1339  00E5                     	ds	1
  1340                           
  1341                           	psect	dataBANK1
  1342  00E6                     __pdataBANK1:
  1343  00E6                     _ADMax:
  1344  00E6                     	ds	2
  1345  00E8                     _ADMax2:
  1346  00E8                     	ds	2
  1347  00EA                     _PWMTime_Val:
  1348  00EA                     	ds	1
  1349                           
  1350                           	psect	clrtext
  1351  0A9F                     clear_ram0:	
  1352                           ;	Called with FSR0 containing the base address, and
  1353                           ;	btemp/btemp+1 has the size to clear
  1354                           
  1355  0A9F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1356  0AA0                     clrloop0:
  1357  0AA0  0180               	clrf	0	;clear RAM location pointed to by FSR
  1358  0AA1  3101               	addfsr 0,1
  1359  0AA2  3001               	movlw	1
  1360  0AA3  02FE               	subwf	126,f
  1361  0AA4  3000               	movlw	0
  1362  0AA5  3BFF               	subwfb	127,f
  1363  0AA6  087F               	movf	127,w
  1364  0AA7  047E               	iorwf	126,w
  1365  0AA8  1903               	btfsc	3,2
  1366  0AA9  3400               	retlw	0	;all done for this memory range, return
  1367  0AAA  2AA0               	goto	clrloop0	;have we reached the end yet?
  1368                           
  1369                           	psect	cstackCOMMON
  1370  0070                     __pcstackCOMMON:
  1371  0070                     ?_PWMON:
  1372  0070                     ??_PWMON:	
  1373                           ; 1 bytes @ 0x0
  1374                           
  1375  0070                     ?_PWMOFF:	
  1376                           ; 1 bytes @ 0x0
  1377                           
  1378  0070                     ??_PWMOFF:	
  1379                           ; 1 bytes @ 0x0
  1380                           
  1381  0070                     ?_ErrInf:	
  1382                           ; 1 bytes @ 0x0
  1383                           
  1384  0070                     ?_Time0_init:	
  1385                           ; 1 bytes @ 0x0
  1386                           
  1387  0070                     ??_Time0_init:	
  1388                           ; 1 bytes @ 0x0
  1389                           
  1390  0070                     ?_Time1_init:	
  1391                           ; 1 bytes @ 0x0
  1392                           
  1393  0070                     ??_Time1_init:	
  1394                           ; 1 bytes @ 0x0
  1395                           
  1396  0070                     ?_AD_init:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399  0070                     ??_AD_init:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402  0070                     ?_PWM_init:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405  0070                     ??_PWM_init:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408  0070                     ?_T100ms_Event:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411  0070                     ??_T100ms_Event:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414  0070                     ?_T500ms_Event:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_T1s_Event:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ??_T1s_Event:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_GetKey:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_KeyPro:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ?_LED_OFF:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_LED_Show:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ??_LED_Show:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_DelayC:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ??_DelayC:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ?_ScanF:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_GetWater:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_TwoData_COM:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_init:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ??_init:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ?_main:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_ReadCurrent:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?__Umul8_16:	
  1466                           ; 2 bytes @ 0x0
  1467                           
  1468  0070                     ?___xxtofl:	
  1469                           ; 2 bytes @ 0x0
  1470                           
  1471  0070                     __Umul8_16@multiplicand:	
  1472                           ; 4 bytes @ 0x0
  1473                           
  1474  0070                     ___xxtofl@val:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477                           
  1478                           ; 4 bytes @ 0x0
  1479  0070                     	ds	1
  1480  0071                     ??_LED_OFF:
  1481                           
  1482                           ; 1 bytes @ 0x1
  1483  0071                     	ds	1
  1484  0072                     ??_ErrInf:
  1485  0072                     ??_KeyPro:	
  1486                           ; 1 bytes @ 0x2
  1487                           
  1488  0072                     ??__Umul8_16:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491  0072                     DelayC@i:	
  1492                           ; 1 bytes @ 0x2
  1493                           
  1494                           
  1495                           ; 2 bytes @ 0x2
  1496  0072                     	ds	2
  1497  0074                     ??___xxtofl:
  1498  0074                     DelayC@ct:	
  1499                           ; 1 bytes @ 0x4
  1500                           
  1501  0074                     __Umul8_16@product:	
  1502                           ; 1 bytes @ 0x4
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x4
  1506  0074                     	ds	1
  1507  0075                     ?_GetADC:
  1508                           
  1509                           ; 2 bytes @ 0x5
  1510  0075                     	ds	1
  1511  0076                     __Umul8_16@word_mpld:
  1512                           
  1513                           ; 2 bytes @ 0x6
  1514  0076                     	ds	1
  1515  0077                     ??_GetADC:
  1516                           
  1517                           ; 1 bytes @ 0x7
  1518  0077                     	ds	1
  1519  0078                     __Umul8_16@multiplier:
  1520  0078                     ___xxtofl@sign:	
  1521                           ; 1 bytes @ 0x8
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0x8
  1525  0078                     	ds	1
  1526  0079                     ??_ReadCurrent:
  1527  0079                     ??_GetKey:	
  1528                           ; 1 bytes @ 0x9
  1529                           
  1530  0079                     ??_TwoData_COM:	
  1531                           ; 1 bytes @ 0x9
  1532                           
  1533  0079                     ScanF@j1:	
  1534                           ; 1 bytes @ 0x9
  1535                           
  1536  0079                     ___xxtofl@exp:	
  1537                           ; 1 bytes @ 0x9
  1538                           
  1539                           
  1540                           ; 1 bytes @ 0x9
  1541  0079                     	ds	1
  1542  007A                     ___xxtofl@arg:
  1543                           
  1544                           ; 4 bytes @ 0xA
  1545  007A                     	ds	1
  1546  007B                     ReadCurrent@i:
  1547  007B                     GetKey@i:	
  1548                           ; 1 bytes @ 0xB
  1549                           
  1550                           
  1551                           ; 1 bytes @ 0xB
  1552  007B                     	ds	1
  1553  007C                     ??_GetWater:
  1554                           
  1555                           ; 1 bytes @ 0xC
  1556  007C                     	ds	2
  1557  007E                     ??___flsub:
  1558                           
  1559                           	psect	cstackBANK0
  1560  0020                     __pcstackBANK0:	
  1561                           ; 1 bytes @ 0xE
  1562                           
  1563  0020                     ?___flmul:
  1564  0020                     GetADC@ch:	
  1565                           ; 4 bytes @ 0x0
  1566                           
  1567  0020                     ___flmul@b:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570                           
  1571                           ; 4 bytes @ 0x0
  1572  0020                     	ds	1
  1573  0021                     GetADC@total_ad:
  1574                           
  1575                           ; 2 bytes @ 0x1
  1576  0021                     	ds	2
  1577  0023                     GetADC@i:
  1578                           
  1579                           ; 1 bytes @ 0x3
  1580  0023                     	ds	1
  1581  0024                     GetADC@adbuf:
  1582  0024                     ___flmul@a:	
  1583                           ; 2 bytes @ 0x4
  1584                           
  1585                           
  1586                           ; 4 bytes @ 0x4
  1587  0024                     	ds	2
  1588  0026                     ??_ScanF:
  1589  0026                     GetWater@i:	
  1590                           ; 1 bytes @ 0x6
  1591                           
  1592                           
  1593                           ; 1 bytes @ 0x6
  1594  0026                     	ds	1
  1595  0027                     GetWater@j:
  1596                           
  1597                           ; 1 bytes @ 0x7
  1598  0027                     	ds	1
  1599  0028                     ??___flmul:
  1600                           
  1601                           ; 1 bytes @ 0x8
  1602  0028                     	ds	5
  1603  002D                     ___flmul@sign:
  1604                           
  1605                           ; 1 bytes @ 0xD
  1606  002D                     	ds	1
  1607  002E                     ___flmul@aexp:
  1608                           
  1609                           ; 1 bytes @ 0xE
  1610  002E                     	ds	1
  1611  002F                     ___flmul@grs:
  1612                           
  1613                           ; 4 bytes @ 0xF
  1614  002F                     	ds	4
  1615  0033                     ___flmul@bexp:
  1616                           
  1617                           ; 1 bytes @ 0x13
  1618  0033                     	ds	1
  1619  0034                     ___flmul@prod:
  1620                           
  1621                           ; 4 bytes @ 0x14
  1622  0034                     	ds	4
  1623  0038                     ___flmul@temp:
  1624                           
  1625                           ; 2 bytes @ 0x18
  1626  0038                     	ds	2
  1627  003A                     ?___fladd:
  1628  003A                     ___fladd@b:	
  1629                           ; 4 bytes @ 0x1A
  1630                           
  1631                           
  1632                           ; 4 bytes @ 0x1A
  1633  003A                     	ds	4
  1634  003E                     ___fladd@a:
  1635                           
  1636                           ; 4 bytes @ 0x1E
  1637  003E                     	ds	4
  1638  0042                     ??___fladd:
  1639                           
  1640                           ; 1 bytes @ 0x22
  1641  0042                     	ds	8
  1642  004A                     ___fladd@signs:
  1643                           
  1644                           ; 1 bytes @ 0x2A
  1645  004A                     	ds	1
  1646  004B                     ___fladd@aexp:
  1647                           
  1648                           ; 1 bytes @ 0x2B
  1649  004B                     	ds	1
  1650  004C                     ___fladd@bexp:
  1651                           
  1652                           ; 1 bytes @ 0x2C
  1653  004C                     	ds	1
  1654  004D                     ___fladd@grs:
  1655                           
  1656                           ; 1 bytes @ 0x2D
  1657  004D                     	ds	1
  1658  004E                     ?___flsub:
  1659  004E                     ___flsub@a:	
  1660                           ; 4 bytes @ 0x2E
  1661                           
  1662                           
  1663                           ; 4 bytes @ 0x2E
  1664  004E                     	ds	4
  1665  0052                     ___flsub@b:
  1666                           
  1667                           ; 4 bytes @ 0x32
  1668  0052                     	ds	4
  1669  0056                     ?___fltol:
  1670  0056                     ___fltol@f1:	
  1671                           ; 4 bytes @ 0x36
  1672                           
  1673                           
  1674                           ; 4 bytes @ 0x36
  1675  0056                     	ds	4
  1676  005A                     ??___fltol:
  1677                           
  1678                           ; 1 bytes @ 0x3A
  1679  005A                     	ds	5
  1680  005F                     ___fltol@sign1:
  1681                           
  1682                           ; 1 bytes @ 0x3F
  1683  005F                     	ds	1
  1684  0060                     ___fltol@exp1:
  1685                           
  1686                           ; 1 bytes @ 0x40
  1687  0060                     	ds	1
  1688  0061                     ??_T500ms_Event:
  1689                           
  1690                           ; 1 bytes @ 0x41
  1691  0061                     	ds	1
  1692  0062                     _T500ms_Event$1203:
  1693                           
  1694                           ; 1 bytes @ 0x42
  1695  0062                     	ds	1
  1696  0063                     T500ms_Event@ADC_Val:
  1697                           
  1698                           ; 2 bytes @ 0x43
  1699  0063                     	ds	2
  1700  0065                     ??_main:
  1701                           
  1702                           ; 1 bytes @ 0x45
  1703  0065                     	ds	1
  1704                           
  1705                           	psect	maintext
  1706  0BFF                     __pmaintext:	
  1707 ;;
  1708 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1709 ;;
  1710 ;; *************** function _main *****************
  1711 ;; Defined at:
  1712 ;;		line 68 in file "User/newmain.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;		None
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;		None
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : B1F/0
  1723 ;;		On exit  : 1F/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1726 ;;      Params:         0       0       0       0       0       0       0       0
  1727 ;;      Locals:         0       0       0       0       0       0       0       0
  1728 ;;      Temps:          0       1       0       0       0       0       0       0
  1729 ;;      Totals:         0       1       0       0       0       0       0       0
  1730 ;;Total ram usage:        1 bytes
  1731 ;; Hardware stack levels required when called: 5
  1732 ;; This function calls:
  1733 ;;		_GetKey
  1734 ;;		_GetWater
  1735 ;;		_KeyPro
  1736 ;;		_ReadCurrent
  1737 ;;		_ScanF
  1738 ;;		_T100ms_Event
  1739 ;;		_T1s_Event
  1740 ;;		_T500ms_Event
  1741 ;;		_init
  1742 ;; This function is called by:
  1743 ;;		Startup code after reset
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _main
  1749  0BFF                     _main:
  1750                           
  1751                           ;User/newmain.c: 70:     init();
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1755  0BFF  318C  24A7  318B   	fcall	_init
  1756                           
  1757                           ;User/newmain.c: 72:     Flg.FlgByte = 0;
  1758  0C02  0020               	movlb	0	; select bank0
  1759  0C03  01EF               	clrf	_Flg	;volatile
  1760                           
  1761                           ;User/newmain.c: 73:     Flg2.Flg2Byte = 0;
  1762  0C04  01EE               	clrf	_Flg2	;volatile
  1763                           
  1764                           ;User/newmain.c: 74:     Key.KeyByte = 0;
  1765  0C05  01EA               	clrf	_Key	;volatile
  1766  0C06                     l402:	
  1767                           ;User/newmain.c: 78:         ;
  1768                           
  1769                           
  1770                           ;User/newmain.c: 77:     while (Flg.bits.T4ms_B7 == 0)
  1771  0C06  1FEF               	btfss	_Flg,7	;volatile
  1772  0C07  2C06               	goto	l402
  1773                           
  1774                           ;User/newmain.c: 79:     Flg.bits.T4ms_B7 = 0;
  1775  0C08  13EF               	bcf	_Flg,7	;volatile
  1776                           
  1777                           ;User/newmain.c: 82:     ScanWait = 5;
  1778  0C09  3005               	movlw	5
  1779  0C0A  00E5               	movwf	??_main
  1780  0C0B  0865               	movf	??_main,w
  1781  0C0C  00EC               	movwf	_ScanWait	;volatile
  1782                           
  1783                           ;User/newmain.c: 83:     ScanF();
  1784  0C0D  3180  203A  318B   	fcall	_ScanF
  1785                           
  1786                           ;User/newmain.c: 84:     GetWater();
  1787  0C10  3180  2019  318B   	fcall	_GetWater
  1788                           
  1789                           ;User/newmain.c: 85:     Flg.bits.PWON_B0 = 1;
  1790  0C13  0020               	movlb	0	; select bank0
  1791  0C14  146F               	bsf	_Flg,0	;volatile
  1792  0C15                     l3778:
  1793                           
  1794                           ;User/newmain.c: 88:     {;User/newmain.c: 89:         if ((Flg2.Flg2Byte & 0x85) == 0)
  1795  0C15  0020               	movlb	0	; select bank0
  1796  0C16  086E               	movf	_Flg2,w	;volatile
  1797  0C17  3985               	andlw	133
  1798  0C18  1D03               	btfss	3,2
  1799  0C19  2C1C               	goto	l3782
  1800                           
  1801                           ;User/newmain.c: 90:         {;User/newmain.c: 91:             LATAbits.LATA5 = 1;
  1802  0C1A  0022               	movlb	2	; select bank2
  1803  0C1B  168C               	bsf	12,5	;volatile
  1804  0C1C                     l3782:
  1805                           
  1806                           ;User/newmain.c: 94:         if (((Flg2.Flg2Byte & 0x85) == 0) && (Flg.bits.PWON_B0 == 1
      +                          ) && (PORTAbits.RA3 == 1))
  1807  0C1C  0020               	movlb	0	; select bank0
  1808  0C1D  086E               	movf	_Flg2,w	;volatile
  1809  0C1E  3985               	andlw	133
  1810  0C1F  1903               	btfsc	3,2
  1811  0C20  1C6F               	btfss	_Flg,0	;volatile
  1812  0C21  2C26               	goto	l3790
  1813  0C22  1D8C               	btfss	12,3	;volatile
  1814  0C23  2C26               	goto	l3790
  1815                           
  1816                           ;User/newmain.c: 95:             hze = 0;
  1817  0C24  0021               	movlb	1	; select bank1
  1818  0C25  01E5               	clrf	_hze^(0+128)
  1819  0C26                     l3790:
  1820                           
  1821                           ;User/newmain.c: 97:         if (Flg.bits.T100ms_B2)
  1822  0C26  0020               	movlb	0	; select bank0
  1823  0C27  1D6F               	btfss	_Flg,2	;volatile
  1824  0C28  2C2C               	goto	l3794
  1825                           
  1826                           ;User/newmain.c: 98:             T100ms_Event();
  1827  0C29  318A  2272  318B   	fcall	_T100ms_Event
  1828  0C2C                     l3794:
  1829                           
  1830                           ;User/newmain.c: 100:         if (Flg.bits.T500ms_B3)
  1831  0C2C  1DEF               	btfss	_Flg,3	;volatile
  1832  0C2D  2C31               	goto	l3798
  1833                           
  1834                           ;User/newmain.c: 101:             T500ms_Event();
  1835  0C2E  3183  23A4  318B   	fcall	_T500ms_Event
  1836  0C31                     l3798:
  1837                           
  1838                           ;User/newmain.c: 103:         if (Flg.bits.T1s_B4)
  1839  0C31  0020               	movlb	0	; select bank0
  1840  0C32  1E6F               	btfss	_Flg,4	;volatile
  1841  0C33  2C37               	goto	l410
  1842                           
  1843                           ;User/newmain.c: 104:             T1s_Event();
  1844  0C34  318A  22D2  318B   	fcall	_T1s_Event
  1845  0C37                     l410:
  1846  0C37  0064               	clrwdt	;# 
  1847                           
  1848                           ;User/newmain.c: 108:         if (readkeytime > 20)
  1849  0C38  3015               	movlw	21
  1850  0C39  0021               	movlb	1	; select bank1
  1851  0C3A  025D               	subwf	_readkeytime^(0+128),w
  1852  0C3B  1C03               	skipc
  1853  0C3C  2C15               	goto	l3778
  1854                           
  1855                           ;User/newmain.c: 109:         {;User/newmain.c: 111:             ReadCurrent();
  1856  0C3D  318D  2566  318B   	fcall	_ReadCurrent
  1857                           
  1858                           ;User/newmain.c: 112:             readkeytime = 0;
  1859  0C40  01DD               	clrf	_readkeytime^(0+128)
  1860                           
  1861                           ;User/newmain.c: 113:             GetKey();
  1862  0C41  318F  272B  318B   	fcall	_GetKey
  1863                           
  1864                           ;User/newmain.c: 114:             if (KeyTime > 9)
  1865  0C44  300A               	movlw	10
  1866  0C45  0021               	movlb	1	; select bank1
  1867  0C46  025E               	subwf	_KeyTime^(0+128),w
  1868  0C47  1C03               	skipc
  1869  0C48  2C15               	goto	l3778
  1870                           
  1871                           ;User/newmain.c: 115:                 KeyPro();
  1872  0C49  318B  2378  318B   	fcall	_KeyPro
  1873  0C4C  2C15               	goto	l3778
  1874  0C4D                     __end_of_main:
  1875                           
  1876                           	psect	text1
  1877  0CA7                     __ptext1:	
  1878 ;; *************** function _init *****************
  1879 ;; Defined at:
  1880 ;;		line 4 in file "User/init.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : B1F/0
  1891 ;;		On exit  : B1F/1
  1892 ;;		Unchanged: B00/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1894 ;;      Params:         0       0       0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0
  1896 ;;      Temps:          1       0       0       0       0       0       0       0
  1897 ;;      Totals:         1       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        1 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 1
  1901 ;; This function calls:
  1902 ;;		_AD_init
  1903 ;;		_PWM_init
  1904 ;;		_Time0_init
  1905 ;;		_Time1_init
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _init
  1913  0CA7                     _init:
  1914                           
  1915                           ;User/init.c: 7:     OSCCONbits.SPLLEN = 1;
  1916                           
  1917                           ;incstack = 0
  1918                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1919  0CA7  0021               	movlb	1	; select bank1
  1920  0CA8  1799               	bsf	25,7	;volatile
  1921                           
  1922                           ;User/init.c: 8:     OSCCONbits.IRCF = 0x0E;
  1923  0CA9  0819               	movf	25,w	;volatile
  1924  0CAA  3987               	andlw	-121
  1925  0CAB  3870               	iorlw	112
  1926  0CAC  0099               	movwf	25	;volatile
  1927                           
  1928                           ;User/init.c: 9:     OSCCONbits.SCS = 0;
  1929  0CAD  30FC               	movlw	-4
  1930  0CAE  0599               	andwf	25,f	;volatile
  1931  0CAF                     l2920:	
  1932                           ;User/init.c: 11:     while ((OSCSTAT & 0x59) != 0x59)
  1933                           
  1934                           
  1935                           ;User/init.c: 11:     while ((OSCSTAT & 0x59) != 0x59)
  1936  0CAF  3059               	movlw	89
  1937  0CB0  051A               	andwf	26,w	;volatile
  1938  0CB1  00F0               	movwf	??_init
  1939  0CB2  3059               	movlw	89
  1940  0CB3  0670               	xorwf	??_init,w
  1941  0CB4  1D03               	btfss	3,2
  1942  0CB5  2CAF               	goto	l2920
  1943                           
  1944                           ;User/init.c: 15:     WPUA = 0x08;
  1945  0CB6  3008               	movlw	8
  1946  0CB7  0024               	movlb	4	; select bank4
  1947  0CB8  008C               	movwf	12	;volatile
  1948                           
  1949                           ;User/init.c: 16:     PORTA = 0;
  1950  0CB9  0020               	movlb	0	; select bank0
  1951  0CBA  018C               	clrf	12	;volatile
  1952                           
  1953                           ;User/init.c: 17:     TRISA = 0;
  1954  0CBB  0021               	movlb	1	; select bank1
  1955  0CBC  018C               	clrf	12	;volatile
  1956                           
  1957                           ;User/init.c: 18:     ANSELA = 0;
  1958  0CBD  0023               	movlb	3	; select bank3
  1959  0CBE  018C               	clrf	12	;volatile
  1960                           
  1961                           ;User/init.c: 19:     TRISA = 0B10001000;
  1962  0CBF  3088               	movlw	136
  1963  0CC0  0021               	movlb	1	; select bank1
  1964  0CC1  008C               	movwf	12	;volatile
  1965                           
  1966                           ;User/init.c: 20:     PORTA = 0B10111110;
  1967  0CC2  30BE               	movlw	190
  1968  0CC3  0020               	movlb	0	; select bank0
  1969  0CC4  008C               	movwf	12	;volatile
  1970                           
  1971                           ;User/init.c: 21:     LATA = 0B10111110;
  1972  0CC5  30BE               	movlw	190
  1973  0CC6  0022               	movlb	2	; select bank2
  1974  0CC7  008C               	movwf	12	;volatile
  1975                           
  1976                           ;User/init.c: 23:     WPUB = 0x00;
  1977  0CC8  0024               	movlb	4	; select bank4
  1978  0CC9  018D               	clrf	13	;volatile
  1979                           
  1980                           ;User/init.c: 24:     PORTB = 0;
  1981  0CCA  0020               	movlb	0	; select bank0
  1982  0CCB  018D               	clrf	13	;volatile
  1983                           
  1984                           ;User/init.c: 25:     TRISB = 0;
  1985  0CCC  0021               	movlb	1	; select bank1
  1986  0CCD  018D               	clrf	13	;volatile
  1987                           
  1988                           ;User/init.c: 26:     ANSELB = 0x10;
  1989  0CCE  3010               	movlw	16
  1990  0CCF  0023               	movlb	3	; select bank3
  1991  0CD0  008D               	movwf	13	;volatile
  1992                           
  1993                           ;User/init.c: 27:     TRISB = 0B00111111;
  1994  0CD1  303F               	movlw	63
  1995  0CD2  0021               	movlb	1	; select bank1
  1996  0CD3  008D               	movwf	13	;volatile
  1997                           
  1998                           ;User/init.c: 28:     PORTB = 0B11111111;
  1999  0CD4  30FF               	movlw	255
  2000  0CD5  0020               	movlb	0	; select bank0
  2001  0CD6  008D               	movwf	13	;volatile
  2002                           
  2003                           ;User/init.c: 29:     LATB = 0B11111111;
  2004  0CD7  30FF               	movlw	255
  2005  0CD8  0022               	movlb	2	; select bank2
  2006  0CD9  008D               	movwf	13	;volatile
  2007                           
  2008                           ;User/init.c: 31:     WPUC = 0x00;
  2009  0CDA  0024               	movlb	4	; select bank4
  2010  0CDB  018E               	clrf	14	;volatile
  2011                           
  2012                           ;User/init.c: 32:     PORTC = 0;
  2013  0CDC  0020               	movlb	0	; select bank0
  2014  0CDD  018E               	clrf	14	;volatile
  2015                           
  2016                           ;User/init.c: 33:     TRISC = 0;
  2017  0CDE  0021               	movlb	1	; select bank1
  2018  0CDF  018E               	clrf	14	;volatile
  2019                           
  2020                           ;User/init.c: 35:     ANSELC = 0x80;
  2021  0CE0  3080               	movlw	128
  2022  0CE1  0023               	movlb	3	; select bank3
  2023  0CE2  008E               	movwf	14	;volatile
  2024                           
  2025                           ;User/init.c: 36:     TRISC = 0B10000000;
  2026  0CE3  3080               	movlw	128
  2027  0CE4  0021               	movlb	1	; select bank1
  2028  0CE5  008E               	movwf	14	;volatile
  2029                           
  2030                           ;User/init.c: 37:     PORTC = 0B10110111;
  2031  0CE6  30B7               	movlw	183
  2032  0CE7  0020               	movlb	0	; select bank0
  2033  0CE8  008E               	movwf	14	;volatile
  2034                           
  2035                           ;User/init.c: 38:     LATC = 0B10110111;
  2036  0CE9  30B7               	movlw	183
  2037  0CEA  0022               	movlb	2	; select bank2
  2038  0CEB  008E               	movwf	14	;volatile
  2039                           
  2040                           ;User/init.c: 41:     LATCbits.LATC1 = 1;
  2041  0CEC  148E               	bsf	14,1	;volatile
  2042                           
  2043                           ;User/init.c: 42:     INTCON = 0;
  2044  0CED  018B               	clrf	11	;volatile
  2045                           
  2046                           ;User/init.c: 46:     Time0_init();
  2047  0CEE  318A  2287  318C   	fcall	_Time0_init
  2048                           
  2049                           ;User/init.c: 47:     Time1_init();
  2050  0CF1  318A  2293  318C   	fcall	_Time1_init
  2051                           
  2052                           ;User/init.c: 49:     AD_init();
  2053  0CF4  318A  22AB  318C   	fcall	_AD_init
  2054                           
  2055                           ;User/init.c: 51:     PWM_init();
  2056  0CF7  318A  22EA         	fcall	_PWM_init
  2057                           
  2058                           ;User/init.c: 53:     OPTION_REG &= 0x7F;
  2059  0CF9  307F               	movlw	127
  2060  0CFA  00F0               	movwf	??_init
  2061  0CFB  0870               	movf	??_init,w
  2062  0CFC  0021               	movlb	1	; select bank1
  2063  0CFD  0595               	andwf	21,f	;volatile
  2064                           
  2065                           ;User/init.c: 54:     INTCONbits.PEIE = 1;
  2066  0CFE  170B               	bsf	11,6	;volatile
  2067                           
  2068                           ;User/init.c: 55:     INTCONbits.GIE = 1;
  2069  0CFF  178B               	bsf	11,7	;volatile
  2070  0D00  0008               	return
  2071  0D01                     __end_of_init:
  2072                           
  2073                           	psect	text2
  2074  0A93                     __ptext2:	
  2075 ;; *************** function _Time1_init *****************
  2076 ;; Defined at:
  2077 ;;		line 95 in file "User/init.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg
  2086 ;; Tracked objects:
  2087 ;;		On entry : B1F/0
  2088 ;;		On exit  : B1F/0
  2089 ;;		Unchanged: B00/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2091 ;;      Params:         0       0       0       0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_init
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _Time1_init
  2106  0A93                     _Time1_init:
  2107                           
  2108                           ;User/init.c: 99:     T1CON = 0B00110000;
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _Time1_init: [wreg]
  2112  0A93  3030               	movlw	48
  2113  0A94  0098               	movwf	24	;volatile
  2114                           
  2115                           ;User/init.c: 102:     TMR1H = (65535 - 20000) >> 8;
  2116  0A95  30B1               	movlw	177
  2117  0A96  0097               	movwf	23	;volatile
  2118                           
  2119                           ;User/init.c: 103:     TMR1L = (65535 - 20000) & 0xFF;
  2120  0A97  30DF               	movlw	223
  2121  0A98  0096               	movwf	22	;volatile
  2122                           
  2123                           ;User/init.c: 105:     TMR1ON = 1;
  2124  0A99  1418               	bsf	24,0	;volatile
  2125                           
  2126                           ;User/init.c: 107:     PIE1bits.TMR1IE = 1;
  2127  0A9A  0021               	movlb	1	; select bank1
  2128  0A9B  1411               	bsf	17,0	;volatile
  2129                           
  2130                           ;User/init.c: 108:     PIR1bits.TMR1IF = 0;
  2131  0A9C  0020               	movlb	0	; select bank0
  2132  0A9D  1011               	bcf	17,0	;volatile
  2133  0A9E  0008               	return
  2134  0A9F                     __end_of_Time1_init:
  2135                           
  2136                           	psect	text3
  2137  0A87                     __ptext3:	
  2138 ;; *************** function _Time0_init *****************
  2139 ;; Defined at:
  2140 ;;		line 64 in file "User/init.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0
  2149 ;; Tracked objects:
  2150 ;;		On entry : B1F/2
  2151 ;;		On exit  : B1F/0
  2152 ;;		Unchanged: B00/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2154 ;;      Params:         0       0       0       0       0       0       0       0
  2155 ;;      Locals:         0       0       0       0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0       0       0       0
  2157 ;;      Totals:         0       0       0       0       0       0       0       0
  2158 ;;Total ram usage:        0 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; This function calls:
  2161 ;;		Nothing
  2162 ;; This function is called by:
  2163 ;;		_init
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _Time0_init
  2169  0A87                     _Time0_init:
  2170                           
  2171                           ;User/init.c: 67:     OPTION_REGbits.TMR0CS = 0;
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _Time0_init: [wreg+status,2+status,0]
  2175  0A87  0021               	movlb	1	; select bank1
  2176  0A88  1295               	bcf	21,5	;volatile
  2177                           
  2178                           ;User/init.c: 68:     OPTION_REGbits.PSA = 0;
  2179  0A89  1195               	bcf	21,3	;volatile
  2180                           
  2181                           ;User/init.c: 69:     OPTION_REGbits.PS = 6;
  2182  0A8A  0815               	movf	21,w	;volatile
  2183  0A8B  39F8               	andlw	-8
  2184  0A8C  3806               	iorlw	6
  2185  0A8D  0095               	movwf	21	;volatile
  2186                           
  2187                           ;User/init.c: 74:     TMR0 = 131;
  2188  0A8E  3083               	movlw	131
  2189  0A8F  0020               	movlb	0	; select bank0
  2190  0A90  0095               	movwf	21	;volatile
  2191                           
  2192                           ;User/init.c: 75:     INTCONbits.TMR0IE = 1;
  2193  0A91  168B               	bsf	11,5	;volatile
  2194  0A92  0008               	return
  2195  0A93                     __end_of_Time0_init:
  2196                           
  2197                           	psect	text4
  2198  0AEA                     __ptext4:	
  2199 ;; *************** function _PWM_init *****************
  2200 ;; Defined at:
  2201 ;;		line 144 in file "User/init.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0
  2210 ;; Tracked objects:
  2211 ;;		On entry : B1F/0
  2212 ;;		On exit  : B1F/1B
  2213 ;;		Unchanged: B00/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2215 ;;      Params:         0       0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_init
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _PWM_init
  2230  0AEA                     _PWM_init:
  2231                           
  2232                           ;User/init.c: 149:     PWM3CONbits.EN = 0;
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _PWM_init: [wreg+status,2+status,0]
  2236  0AEA  003B               	movlb	27	; select bank27
  2237  0AEB  13BB               	bcf	59,7	;volatile
  2238                           
  2239                           ;User/init.c: 151:     PWM3CLKCONbits.CS = 0B00;
  2240  0AEC  30FC               	movlw	-4
  2241  0AED  05BE               	andwf	62,f	;volatile
  2242                           
  2243                           ;User/init.c: 152:     PWM3CLKCONbits.PS = 0B000;
  2244  0AEE  308F               	movlw	-113
  2245  0AEF  05BE               	andwf	62,f	;volatile
  2246                           
  2247                           ;User/init.c: 156:     PWM3LDCONbits.LDA = 1;
  2248  0AF0  17BF               	bsf	63,7	;volatile
  2249                           
  2250                           ;User/init.c: 157:     PWM3LDCONbits.LDT = 0;
  2251  0AF1  133F               	bcf	63,6	;volatile
  2252                           
  2253                           ;User/init.c: 159:     PWM3OFCONbits.OFM = 0;
  2254  0AF2  309F               	movlw	-97
  2255  0AF3  05C0               	andwf	64,f	;volatile
  2256                           
  2257                           ;User/init.c: 166:     PWM3PRH = 0x01;
  2258  0AF4  3001               	movlw	1
  2259  0AF5  00B6               	movwf	54	;volatile
  2260                           
  2261                           ;User/init.c: 167:     PWM3PRL = 0x22;
  2262  0AF6  3022               	movlw	34
  2263  0AF7  00B5               	movwf	53	;volatile
  2264                           
  2265                           ;User/init.c: 173:     PWM3DCH = 0;
  2266  0AF8  01B4               	clrf	52	;volatile
  2267                           
  2268                           ;User/init.c: 174:     PWM3DCL = 0x91;
  2269  0AF9  3091               	movlw	145
  2270  0AFA  00B3               	movwf	51	;volatile
  2271                           
  2272                           ;User/init.c: 177:     PWM3PHH = 0;
  2273  0AFB  01B2               	clrf	50	;volatile
  2274                           
  2275                           ;User/init.c: 178:     PWM3PHL = 0;
  2276  0AFC  01B1               	clrf	49	;volatile
  2277                           
  2278                           ;User/init.c: 183:     RC3PPS = 0b0101;
  2279  0AFD  3005               	movlw	5
  2280  0AFE  003D               	movlb	29	; select bank29
  2281  0AFF  00A3               	movwf	35	;volatile
  2282                           
  2283                           ;User/init.c: 185:     PWM3INTEbits.PRIE = 1;
  2284  0B00  003B               	movlb	27	; select bank27
  2285  0B01  143C               	bsf	60,0	;volatile
  2286                           
  2287                           ;User/init.c: 186:     PWM3INTFbits.PRIF = 0;
  2288  0B02  103D               	bcf	61,0	;volatile
  2289  0B03  0008               	return
  2290  0B04                     __end_of_PWM_init:
  2291                           
  2292                           	psect	text5
  2293  0AAB                     __ptext5:	
  2294 ;; *************** function _AD_init *****************
  2295 ;; Defined at:
  2296 ;;		line 123 in file "User/init.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0
  2305 ;; Tracked objects:
  2306 ;;		On entry : B1F/0
  2307 ;;		On exit  : B1F/0
  2308 ;;		Unchanged: B00/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2310 ;;      Params:         0       0       0       0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0
  2313 ;;      Totals:         0       0       0       0       0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_init
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _AD_init
  2325  0AAB                     _AD_init:
  2326                           
  2327                           ;User/init.c: 125:     ADCON0bits.ADON = 1;
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in _AD_init: [wreg+status,2+status,0]
  2331  0AAB  0021               	movlb	1	; select bank1
  2332  0AAC  141D               	bsf	29,0	;volatile
  2333                           
  2334                           ;User/init.c: 126:     ADCON0bits.CHS = 9;
  2335  0AAD  081D               	movf	29,w	;volatile
  2336  0AAE  3983               	andlw	-125
  2337  0AAF  3824               	iorlw	36
  2338  0AB0  009D               	movwf	29	;volatile
  2339                           
  2340                           ;User/init.c: 128:     ADCON1bits.ADFM = 1;
  2341  0AB1  179E               	bsf	30,7	;volatile
  2342                           
  2343                           ;User/init.c: 129:     ADCON1bits.ADCS = 6;
  2344  0AB2  081E               	movf	30,w	;volatile
  2345  0AB3  398F               	andlw	-113
  2346  0AB4  3860               	iorlw	96
  2347  0AB5  009E               	movwf	30	;volatile
  2348                           
  2349                           ;User/init.c: 130:     ADCON1bits.ADPREF = 0;
  2350  0AB6  30FC               	movlw	-4
  2351  0AB7  059E               	andwf	30,f	;volatile
  2352                           
  2353                           ;User/init.c: 140:     PIE1bits.ADIE = 0;
  2354  0AB8  1311               	bcf	17,6	;volatile
  2355                           
  2356                           ;User/init.c: 141:     PIR1bits.ADIF = 0;
  2357  0AB9  0020               	movlb	0	; select bank0
  2358  0ABA  1311               	bcf	17,6	;volatile
  2359  0ABB  0008               	return
  2360  0ABC                     __end_of_AD_init:
  2361                           
  2362                           	psect	text6
  2363  03A4                     __ptext6:	
  2364 ;; *************** function _T500ms_Event *****************
  2365 ;; Defined at:
  2366 ;;		line 206 in file "User/newmain.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  ADC_Val         2   67[BANK0 ] unsigned int 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 1F/0
  2377 ;;		On exit  : 1C/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2380 ;;      Params:         0       0       0       0       0       0       0       0
  2381 ;;      Locals:         0       3       0       0       0       0       0       0
  2382 ;;      Temps:          0       1       0       0       0       0       0       0
  2383 ;;      Totals:         0       4       0       0       0       0       0       0
  2384 ;;Total ram usage:        4 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 4
  2387 ;; This function calls:
  2388 ;;		_GetADC
  2389 ;;		_LED_Show
  2390 ;;		_PWMOFF
  2391 ;;		_PWMON
  2392 ;;		_TwoData_COM
  2393 ;;		___fladd
  2394 ;;		___flmul
  2395 ;;		___flsub
  2396 ;;		___fltol
  2397 ;;		___xxtofl
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _T500ms_Event
  2405  03A4                     _T500ms_Event:
  2406                           
  2407                           ;User/newmain.c: 208:     uword ADC_Val;;User/newmain.c: 210:     Flg.bits.T500ms_B3 = 0
      +                          ;
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _T500ms_Event: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2411  03A4  11EF               	bcf	_Flg,3	;volatile
  2412                           
  2413                           ;User/newmain.c: 212:     if (NoWater == 1)
  2414  03A5  036D               	decf	_NoWater,w
  2415  03A6  1D03               	btfss	3,2
  2416  03A7  2BAD               	goto	l3558
  2417                           
  2418                           ;User/newmain.c: 213:     {;User/newmain.c: 214:         TwoData_COM();
  2419  03A8  318B  23B7  3183   	fcall	_TwoData_COM
  2420                           
  2421                           ;User/newmain.c: 215:         T30s_cnt = 0;
  2422  03AB  0021               	movlb	1	; select bank1
  2423  03AC  01DB               	clrf	_T30s_cnt^(0+128)
  2424  03AD                     l3558:
  2425                           
  2426                           ;User/newmain.c: 218:     if (T30s_cnt > 29)
  2427  03AD  301E               	movlw	30
  2428  03AE  0021               	movlb	1	; select bank1
  2429  03AF  025B               	subwf	_T30s_cnt^(0+128),w
  2430  03B0  1C03               	skipc
  2431  03B1  2BBB               	goto	l3566
  2432                           
  2433                           ;User/newmain.c: 219:     {;User/newmain.c: 220:         T30s_cnt = 0;
  2434  03B2  01DB               	clrf	_T30s_cnt^(0+128)
  2435                           
  2436                           ;User/newmain.c: 221:         PWMTime = 20;
  2437  03B3  3014               	movlw	20
  2438  03B4  0020               	movlb	0	; select bank0
  2439  03B5  00E1               	movwf	??_T500ms_Event
  2440  03B6  0861               	movf	??_T500ms_Event,w
  2441  03B7  0021               	movlb	1	; select bank1
  2442  03B8  00E4               	movwf	_PWMTime^(0+128)
  2443                           
  2444                           ;User/newmain.c: 222:         Flg2.bits.ADMin_B1 = 0;
  2445  03B9  0020               	movlb	0	; select bank0
  2446  03BA  10EE               	bcf	_Flg2,1	;volatile
  2447  03BB                     l3566:
  2448                           
  2449                           ;User/newmain.c: 225:     if (PWM3CONbits.EN)
  2450  03BB  003B               	movlb	27	; select bank27
  2451  03BC  1FBB               	btfss	59,7	;volatile
  2452  03BD  2BEE               	goto	l3580
  2453                           
  2454                           ;User/newmain.c: 226:     {;User/newmain.c: 227:         PWMTime++;
  2455  03BE  3001               	movlw	1
  2456  03BF  0020               	movlb	0	; select bank0
  2457  03C0  00E1               	movwf	??_T500ms_Event
  2458  03C1  0861               	movf	??_T500ms_Event,w
  2459  03C2  0021               	movlb	1	; select bank1
  2460  03C3  07E4               	addwf	_PWMTime^(0+128),f
  2461                           
  2462                           ;User/newmain.c: 228:         T30s_cnt++;
  2463  03C4  3001               	movlw	1
  2464  03C5  0020               	movlb	0	; select bank0
  2465  03C6  00E1               	movwf	??_T500ms_Event
  2466  03C7  0861               	movf	??_T500ms_Event,w
  2467  03C8  0021               	movlb	1	; select bank1
  2468  03C9  07DB               	addwf	_T30s_cnt^(0+128),f
  2469                           
  2470                           ;User/newmain.c: 230:         if (((GetADC(10) < ADMin) || (GetADC(10) > ADMax)) && (NoW
      +                          ater == 0) && Flg2.bits.ADMin_B1)
  2471  03CA  300A               	movlw	10
  2472  03CB  318C  244D  3183   	fcall	_GetADC
  2473  03CE  0021               	movlb	1	; select bank1
  2474  03CF  084D               	movf	(_ADMin+1)^(0+128),w
  2475  03D0  0276               	subwf	?_GetADC+1,w
  2476  03D1  1D03               	skipz
  2477  03D2  2BD5               	goto	u4615
  2478  03D3  084C               	movf	_ADMin^(0+128),w
  2479  03D4  0275               	subwf	?_GetADC,w
  2480  03D5                     u4615:
  2481  03D5  1C03               	skipc
  2482  03D6  2BE4               	goto	l3574
  2483  03D7  300A               	movlw	10
  2484  03D8  318C  244D  3183   	fcall	_GetADC
  2485  03DB  0876               	movf	?_GetADC+1,w
  2486  03DC  0021               	movlb	1	; select bank1
  2487  03DD  0267               	subwf	(_ADMax+1)^(0+128),w
  2488  03DE  1D03               	skipz
  2489  03DF  2BE2               	goto	u4625
  2490  03E0  0875               	movf	?_GetADC,w
  2491  03E1  0266               	subwf	_ADMax^(0+128),w
  2492  03E2                     u4625:
  2493  03E2  1803               	skipnc
  2494  03E3  2BEE               	goto	l3580
  2495  03E4                     l3574:
  2496  03E4  0020               	movlb	0	; select bank0
  2497  03E5  086D               	movf	_NoWater,w
  2498  03E6  1903               	btfsc	3,2
  2499  03E7  1CEE               	btfss	_Flg2,1	;volatile
  2500  03E8  2BEE               	goto	l3580
  2501                           
  2502                           ;User/newmain.c: 231:             nt++;
  2503  03E9  3001               	movlw	1
  2504  03EA  00E1               	movwf	??_T500ms_Event
  2505  03EB  0861               	movf	??_T500ms_Event,w
  2506  03EC  0021               	movlb	1	; select bank1
  2507  03ED  07D6               	addwf	_nt^(0+128),f
  2508  03EE                     l3580:
  2509                           
  2510                           ;User/newmain.c: 236:     if (nt > 1)
  2511  03EE  3002               	movlw	2
  2512  03EF  0021               	movlb	1	; select bank1
  2513  03F0  0256               	subwf	_nt^(0+128),w
  2514  03F1  1C03               	skipc
  2515  03F2  2BFA               	goto	l3586
  2516                           
  2517                           ;User/newmain.c: 237:     {;User/newmain.c: 238:         nt = 0;
  2518  03F3  01D6               	clrf	_nt^(0+128)
  2519                           
  2520                           ;User/newmain.c: 239:         NoWater = 1;
  2521  03F4  0020               	movlb	0	; select bank0
  2522  03F5  01ED               	clrf	_NoWater
  2523  03F6  0AED               	incf	_NoWater,f
  2524                           
  2525                           ;User/newmain.c: 240:         adc_true_cnt = adc_false_cnt = 0;
  2526  03F7  0021               	movlb	1	; select bank1
  2527  03F8  01DF               	clrf	_adc_false_cnt^(0+128)
  2528  03F9  01E0               	clrf	_adc_true_cnt^(0+128)
  2529  03FA                     l3586:
  2530                           
  2531                           ;User/newmain.c: 243:     if ((PWMTime > PWMTime_Val) && (Flg2.bits.ADMin_B1 == 0))
  2532  03FA  0864               	movf	_PWMTime^(0+128),w
  2533  03FB  026A               	subwf	_PWMTime_Val^(0+128),w
  2534  03FC  1803               	skipnc
  2535  03FD  2D3E               	goto	l3594
  2536  03FE  0020               	movlb	0	; select bank0
  2537  03FF  18EE               	btfsc	_Flg2,1	;volatile
  2538  0400  2D3E               	goto	l3594
  2539                           
  2540                           ;User/newmain.c: 244:     {;User/newmain.c: 245:         ADC_Val = GetADC(10);
  2541  0401  300A               	movlw	10
  2542  0402  318C  244D  3183   	fcall	_GetADC
  2543  0405  0876               	movf	?_GetADC+1,w
  2544  0406  00E4               	movwf	T500ms_Event@ADC_Val+1
  2545  0407  0875               	movf	?_GetADC,w
  2546  0408  00E3               	movwf	T500ms_Event@ADC_Val
  2547                           
  2548                           ;User/newmain.c: 247:         ADMin = ADC_Val - (ADC_Val * 0.12);
  2549  0409  0863               	movf	T500ms_Event@ADC_Val,w
  2550  040A  00F0               	movwf	___xxtofl@val
  2551  040B  0864               	movf	T500ms_Event@ADC_Val+1,w
  2552  040C  00F1               	movwf	___xxtofl@val+1
  2553  040D  01F2               	clrf	___xxtofl@val+2
  2554  040E  01F3               	clrf	___xxtofl@val+3
  2555  040F  3000               	movlw	0
  2556  0410  318D  25E4  3183   	fcall	___xxtofl
  2557  0413  0873               	movf	?___xxtofl+3,w
  2558  0414  00D5               	movwf	___flsub@b+3
  2559  0415  0872               	movf	?___xxtofl+2,w
  2560  0416  00D4               	movwf	___flsub@b+2
  2561  0417  0871               	movf	?___xxtofl+1,w
  2562  0418  00D3               	movwf	___flsub@b+1
  2563  0419  0870               	movf	?___xxtofl,w
  2564  041A  00D2               	movwf	___flsub@b
  2565  041B  0863               	movf	T500ms_Event@ADC_Val,w
  2566  041C  00F0               	movwf	___xxtofl@val
  2567  041D  0864               	movf	T500ms_Event@ADC_Val+1,w
  2568  041E  00F1               	movwf	___xxtofl@val+1
  2569  041F  01F2               	clrf	___xxtofl@val+2
  2570  0420  01F3               	clrf	___xxtofl@val+3
  2571  0421  3000               	movlw	0
  2572  0422  318D  25E4  3183   	fcall	___xxtofl
  2573  0425  0873               	movf	?___xxtofl+3,w
  2574  0426  00A7               	movwf	___flmul@a+3
  2575  0427  0872               	movf	?___xxtofl+2,w
  2576  0428  00A6               	movwf	___flmul@a+2
  2577  0429  0871               	movf	?___xxtofl+1,w
  2578  042A  00A5               	movwf	___flmul@a+1
  2579  042B  0870               	movf	?___xxtofl,w
  2580  042C  00A4               	movwf	___flmul@a
  2581  042D  303D               	movlw	61
  2582  042E  00A3               	movwf	___flmul@b+3
  2583  042F  30F5               	movlw	245
  2584  0430  00A2               	movwf	___flmul@b+2
  2585  0431  30C2               	movlw	194
  2586  0432  00A1               	movwf	___flmul@b+1
  2587  0433  308F               	movlw	143
  2588  0434  00A0               	movwf	___flmul@b
  2589  0435  3185  25B6  3183   	fcall	___flmul
  2590  0438  0823               	movf	?___flmul+3,w
  2591  0439  00D1               	movwf	___flsub@a+3
  2592  043A  0822               	movf	?___flmul+2,w
  2593  043B  00D0               	movwf	___flsub@a+2
  2594  043C  0821               	movf	?___flmul+1,w
  2595  043D  00CF               	movwf	___flsub@a+1
  2596  043E  0820               	movf	?___flmul,w
  2597  043F  00CE               	movwf	___flsub@a
  2598  0440  318B  2304  3183   	fcall	___flsub
  2599  0443  0851               	movf	?___flsub+3,w
  2600  0444  00D9               	movwf	___fltol@f1+3
  2601  0445  0850               	movf	?___flsub+2,w
  2602  0446  00D8               	movwf	___fltol@f1+2
  2603  0447  084F               	movf	?___flsub+1,w
  2604  0448  00D7               	movwf	___fltol@f1+1
  2605  0449  084E               	movf	?___flsub,w
  2606  044A  00D6               	movwf	___fltol@f1
  2607  044B  318D  2501  3183   	fcall	___fltol
  2608  044E  0857               	movf	?___fltol+1,w
  2609  044F  0021               	movlb	1	; select bank1
  2610  0450  00CD               	movwf	(_ADMin+1)^(0+128)
  2611  0451  0020               	movlb	0	; select bank0
  2612  0452  0856               	movf	?___fltol,w
  2613  0453  0021               	movlb	1	; select bank1
  2614  0454  00CC               	movwf	_ADMin^(0+128)
  2615                           
  2616                           ;User/newmain.c: 248:         ADMax = ADC_Val + (ADC_Val * 0.12);
  2617  0455  0020               	movlb	0	; select bank0
  2618  0456  0863               	movf	T500ms_Event@ADC_Val,w
  2619  0457  00F0               	movwf	___xxtofl@val
  2620  0458  0864               	movf	T500ms_Event@ADC_Val+1,w
  2621  0459  00F1               	movwf	___xxtofl@val+1
  2622  045A  01F2               	clrf	___xxtofl@val+2
  2623  045B  01F3               	clrf	___xxtofl@val+3
  2624  045C  3000               	movlw	0
  2625  045D  318D  25E4  3183   	fcall	___xxtofl
  2626  0460  0873               	movf	?___xxtofl+3,w
  2627  0461  00C1               	movwf	___fladd@a+3
  2628  0462  0872               	movf	?___xxtofl+2,w
  2629  0463  00C0               	movwf	___fladd@a+2
  2630  0464  0871               	movf	?___xxtofl+1,w
  2631  0465  00BF               	movwf	___fladd@a+1
  2632  0466  0870               	movf	?___xxtofl,w
  2633  0467  00BE               	movwf	___fladd@a
  2634  0468  0863               	movf	T500ms_Event@ADC_Val,w
  2635  0469  00F0               	movwf	___xxtofl@val
  2636  046A  0864               	movf	T500ms_Event@ADC_Val+1,w
  2637  046B  00F1               	movwf	___xxtofl@val+1
  2638  046C  01F2               	clrf	___xxtofl@val+2
  2639  046D  01F3               	clrf	___xxtofl@val+3
  2640  046E  3000               	movlw	0
  2641  046F  318D  25E4  3183   	fcall	___xxtofl
  2642  0472  0873               	movf	?___xxtofl+3,w
  2643  0473  00A7               	movwf	___flmul@a+3
  2644  0474  0872               	movf	?___xxtofl+2,w
  2645  0475  00A6               	movwf	___flmul@a+2
  2646  0476  0871               	movf	?___xxtofl+1,w
  2647  0477  00A5               	movwf	___flmul@a+1
  2648  0478  0870               	movf	?___xxtofl,w
  2649  0479  00A4               	movwf	___flmul@a
  2650  047A  303D               	movlw	61
  2651  047B  00A3               	movwf	___flmul@b+3
  2652  047C  30F5               	movlw	245
  2653  047D  00A2               	movwf	___flmul@b+2
  2654  047E  30C2               	movlw	194
  2655  047F  00A1               	movwf	___flmul@b+1
  2656  0480  308F               	movlw	143
  2657  0481  00A0               	movwf	___flmul@b
  2658  0482  3185  25B6  3183   	fcall	___flmul
  2659  0485  0823               	movf	?___flmul+3,w
  2660  0486  00BD               	movwf	___fladd@b+3
  2661  0487  0822               	movf	?___flmul+2,w
  2662  0488  00BC               	movwf	___fladd@b+2
  2663  0489  0821               	movf	?___flmul+1,w
  2664  048A  00BB               	movwf	___fladd@b+1
  2665  048B  0820               	movf	?___flmul,w
  2666  048C  00BA               	movwf	___fladd@b
  2667  048D  3181  21C3  3183   	fcall	___fladd
  2668  0490  083D               	movf	?___fladd+3,w
  2669  0491  00D9               	movwf	___fltol@f1+3
  2670  0492  083C               	movf	?___fladd+2,w
  2671  0493  00D8               	movwf	___fltol@f1+2
  2672  0494  083B               	movf	?___fladd+1,w
  2673  0495  00D7               	movwf	___fltol@f1+1
  2674  0496  083A               	movf	?___fladd,w
  2675  0497  00D6               	movwf	___fltol@f1
  2676  0498  318D  2501  3183   	fcall	___fltol
  2677  049B  0857               	movf	?___fltol+1,w
  2678  049C  0021               	movlb	1	; select bank1
  2679  049D  00E7               	movwf	(_ADMax+1)^(0+128)
  2680  049E  0020               	movlb	0	; select bank0
  2681  049F  0856               	movf	?___fltol,w
  2682  04A0  0021               	movlb	1	; select bank1
  2683  04A1  00E6               	movwf	_ADMax^(0+128)
  2684                           
  2685                           ;User/newmain.c: 250:         ADMin2 = ADC_Val - (ADC_Val * 0.06);
  2686  04A2  0020               	movlb	0	; select bank0
  2687  04A3  0863               	movf	T500ms_Event@ADC_Val,w
  2688  04A4  00F0               	movwf	___xxtofl@val
  2689  04A5  0864               	movf	T500ms_Event@ADC_Val+1,w
  2690  04A6  00F1               	movwf	___xxtofl@val+1
  2691  04A7  01F2               	clrf	___xxtofl@val+2
  2692  04A8  01F3               	clrf	___xxtofl@val+3
  2693  04A9  3000               	movlw	0
  2694  04AA  318D  25E4  3183   	fcall	___xxtofl
  2695  04AD  0873               	movf	?___xxtofl+3,w
  2696  04AE  00D5               	movwf	___flsub@b+3
  2697  04AF  0872               	movf	?___xxtofl+2,w
  2698  04B0  00D4               	movwf	___flsub@b+2
  2699  04B1  0871               	movf	?___xxtofl+1,w
  2700  04B2  00D3               	movwf	___flsub@b+1
  2701  04B3  0870               	movf	?___xxtofl,w
  2702  04B4  00D2               	movwf	___flsub@b
  2703  04B5  0863               	movf	T500ms_Event@ADC_Val,w
  2704  04B6  00F0               	movwf	___xxtofl@val
  2705  04B7  0864               	movf	T500ms_Event@ADC_Val+1,w
  2706  04B8  00F1               	movwf	___xxtofl@val+1
  2707  04B9  01F2               	clrf	___xxtofl@val+2
  2708  04BA  01F3               	clrf	___xxtofl@val+3
  2709  04BB  3000               	movlw	0
  2710  04BC  318D  25E4  3183   	fcall	___xxtofl
  2711  04BF  0873               	movf	?___xxtofl+3,w
  2712  04C0  00A7               	movwf	___flmul@a+3
  2713  04C1  0872               	movf	?___xxtofl+2,w
  2714  04C2  00A6               	movwf	___flmul@a+2
  2715  04C3  0871               	movf	?___xxtofl+1,w
  2716  04C4  00A5               	movwf	___flmul@a+1
  2717  04C5  0870               	movf	?___xxtofl,w
  2718  04C6  00A4               	movwf	___flmul@a
  2719  04C7  303D               	movlw	61
  2720  04C8  00A3               	movwf	___flmul@b+3
  2721  04C9  3075               	movlw	117
  2722  04CA  00A2               	movwf	___flmul@b+2
  2723  04CB  30C2               	movlw	194
  2724  04CC  00A1               	movwf	___flmul@b+1
  2725  04CD  308F               	movlw	143
  2726  04CE  00A0               	movwf	___flmul@b
  2727  04CF  3185  25B6  3183   	fcall	___flmul
  2728  04D2  0823               	movf	?___flmul+3,w
  2729  04D3  00D1               	movwf	___flsub@a+3
  2730  04D4  0822               	movf	?___flmul+2,w
  2731  04D5  00D0               	movwf	___flsub@a+2
  2732  04D6  0821               	movf	?___flmul+1,w
  2733  04D7  00CF               	movwf	___flsub@a+1
  2734  04D8  0820               	movf	?___flmul,w
  2735  04D9  00CE               	movwf	___flsub@a
  2736  04DA  318B  2304  3183   	fcall	___flsub
  2737  04DD  0851               	movf	?___flsub+3,w
  2738  04DE  00D9               	movwf	___fltol@f1+3
  2739  04DF  0850               	movf	?___flsub+2,w
  2740  04E0  00D8               	movwf	___fltol@f1+2
  2741  04E1  084F               	movf	?___flsub+1,w
  2742  04E2  00D7               	movwf	___fltol@f1+1
  2743  04E3  084E               	movf	?___flsub,w
  2744  04E4  00D6               	movwf	___fltol@f1
  2745  04E5  318D  2501  3183   	fcall	___fltol
  2746  04E8  0857               	movf	?___fltol+1,w
  2747  04E9  0021               	movlb	1	; select bank1
  2748  04EA  00D5               	movwf	(_ADMin2+1)^(0+128)
  2749  04EB  0020               	movlb	0	; select bank0
  2750  04EC  0856               	movf	?___fltol,w
  2751  04ED  0021               	movlb	1	; select bank1
  2752  04EE  00D4               	movwf	_ADMin2^(0+128)
  2753                           
  2754                           ;User/newmain.c: 251:         ADMax2 = ADC_Val + (ADC_Val * 0.06);
  2755  04EF  0020               	movlb	0	; select bank0
  2756  04F0  0863               	movf	T500ms_Event@ADC_Val,w
  2757  04F1  00F0               	movwf	___xxtofl@val
  2758  04F2  0864               	movf	T500ms_Event@ADC_Val+1,w
  2759  04F3  00F1               	movwf	___xxtofl@val+1
  2760  04F4  01F2               	clrf	___xxtofl@val+2
  2761  04F5  01F3               	clrf	___xxtofl@val+3
  2762  04F6  3000               	movlw	0
  2763  04F7  318D  25E4  3183   	fcall	___xxtofl
  2764  04FA  0873               	movf	?___xxtofl+3,w
  2765  04FB  00C1               	movwf	___fladd@a+3
  2766  04FC  0872               	movf	?___xxtofl+2,w
  2767  04FD  00C0               	movwf	___fladd@a+2
  2768  04FE  0871               	movf	?___xxtofl+1,w
  2769  04FF  00BF               	movwf	___fladd@a+1
  2770  0500  0870               	movf	?___xxtofl,w
  2771  0501  00BE               	movwf	___fladd@a
  2772  0502  0863               	movf	T500ms_Event@ADC_Val,w
  2773  0503  00F0               	movwf	___xxtofl@val
  2774  0504  0864               	movf	T500ms_Event@ADC_Val+1,w
  2775  0505  00F1               	movwf	___xxtofl@val+1
  2776  0506  01F2               	clrf	___xxtofl@val+2
  2777  0507  01F3               	clrf	___xxtofl@val+3
  2778  0508  3000               	movlw	0
  2779  0509  318D  25E4  3183   	fcall	___xxtofl
  2780  050C  0873               	movf	?___xxtofl+3,w
  2781  050D  00A7               	movwf	___flmul@a+3
  2782  050E  0872               	movf	?___xxtofl+2,w
  2783  050F  00A6               	movwf	___flmul@a+2
  2784  0510  0871               	movf	?___xxtofl+1,w
  2785  0511  00A5               	movwf	___flmul@a+1
  2786  0512  0870               	movf	?___xxtofl,w
  2787  0513  00A4               	movwf	___flmul@a
  2788  0514  303D               	movlw	61
  2789  0515  00A3               	movwf	___flmul@b+3
  2790  0516  3075               	movlw	117
  2791  0517  00A2               	movwf	___flmul@b+2
  2792  0518  30C2               	movlw	194
  2793  0519  00A1               	movwf	___flmul@b+1
  2794  051A  308F               	movlw	143
  2795  051B  00A0               	movwf	___flmul@b
  2796  051C  3185  25B6  3183   	fcall	___flmul
  2797  051F  0823               	movf	?___flmul+3,w
  2798  0520  00BD               	movwf	___fladd@b+3
  2799  0521  0822               	movf	?___flmul+2,w
  2800  0522  00BC               	movwf	___fladd@b+2
  2801  0523  0821               	movf	?___flmul+1,w
  2802  0524  00BB               	movwf	___fladd@b+1
  2803  0525  0820               	movf	?___flmul,w
  2804  0526  00BA               	movwf	___fladd@b
  2805  0527  3181  21C3  3183   	fcall	___fladd
  2806  052A  083D               	movf	?___fladd+3,w
  2807  052B  00D9               	movwf	___fltol@f1+3
  2808  052C  083C               	movf	?___fladd+2,w
  2809  052D  00D8               	movwf	___fltol@f1+2
  2810  052E  083B               	movf	?___fladd+1,w
  2811  052F  00D7               	movwf	___fltol@f1+1
  2812  0530  083A               	movf	?___fladd,w
  2813  0531  00D6               	movwf	___fltol@f1
  2814  0532  318D  2501  3183   	fcall	___fltol
  2815  0535  0857               	movf	?___fltol+1,w
  2816  0536  0021               	movlb	1	; select bank1
  2817  0537  00E9               	movwf	(_ADMax2+1)^(0+128)
  2818  0538  0020               	movlb	0	; select bank0
  2819  0539  0856               	movf	?___fltol,w
  2820  053A  0021               	movlb	1	; select bank1
  2821  053B  00E8               	movwf	_ADMax2^(0+128)
  2822                           
  2823                           ;User/newmain.c: 253:         Flg2.bits.ADMin_B1 = 1;
  2824  053C  0020               	movlb	0	; select bank0
  2825  053D  14EE               	bsf	_Flg2,1	;volatile
  2826  053E                     l3594:
  2827                           
  2828                           ;User/newmain.c: 257:     if (Flg.bits.PWON_B0 && (PORTAbits.RA3 == 0) && ((Flg2.Flg2Byt
      +                          e & 0x85) == 0))
  2829  053E  0020               	movlb	0	; select bank0
  2830  053F  186F               	btfsc	_Flg,0	;volatile
  2831  0540  198C               	btfsc	12,3	;volatile
  2832  0541  2D93               	goto	l3640
  2833  0542  086E               	movf	_Flg2,w	;volatile
  2834  0543  3985               	andlw	133
  2835  0544  1D03               	btfss	3,2
  2836  0545  2D93               	goto	l3640
  2837                           
  2838                           ;User/newmain.c: 258:     {;User/newmain.c: 259:         LED_Show();
  2839  0546  318E  2679  3183   	fcall	_LED_Show
  2840                           
  2841                           ;User/newmain.c: 261:         MinS_Cnt++;
  2842  0549  3001               	movlw	1
  2843  054A  0020               	movlb	0	; select bank0
  2844  054B  00E1               	movwf	??_T500ms_Event
  2845  054C  0861               	movf	??_T500ms_Event,w
  2846  054D  0021               	movlb	1	; select bank1
  2847  054E  07D9               	addwf	_MinS_Cnt^(0+128),f
  2848                           
  2849                           ;User/newmain.c: 262:         if (Flg2.bits.Run_B4 == 0)
  2850  054F  0020               	movlb	0	; select bank0
  2851  0550  1A6E               	btfsc	_Flg2,4	;volatile
  2852  0551  2D55               	goto	l3610
  2853                           
  2854                           ;User/newmain.c: 263:         {;User/newmain.c: 264:             Flg2.bits.Run_B4 = 1;
  2855  0552  166E               	bsf	_Flg2,4	;volatile
  2856                           
  2857                           ;User/newmain.c: 265:             ERRcnt = 0;
  2858  0553  0021               	movlb	1	; select bank1
  2859  0554  01D8               	clrf	_ERRcnt^(0+128)
  2860  0555                     l3610:
  2861                           
  2862                           ;User/newmain.c: 267:         if (LATCbits.LATC5 == 1 && LATCbits.LATC4 == 1)
  2863  0555  0022               	movlb	2	; select bank2
  2864  0556  1A8E               	btfsc	14,5	;volatile
  2865  0557  1E0E               	btfss	14,4	;volatile
  2866  0558  2D61               	goto	l3618
  2867                           
  2868                           ;User/newmain.c: 268:         {;User/newmain.c: 269:             LATCbits.LATC5 = 0;
  2869  0559  128E               	bcf	14,5	;volatile
  2870                           
  2871                           ;User/newmain.c: 270:             LATCbits.LATC6 = 1;
  2872  055A  170E               	bsf	14,6	;volatile
  2873                           
  2874                           ;User/newmain.c: 271:             hze = 2;
  2875  055B  3002               	movlw	2
  2876  055C  0020               	movlb	0	; select bank0
  2877  055D  00E1               	movwf	??_T500ms_Event
  2878  055E  0861               	movf	??_T500ms_Event,w
  2879  055F  0021               	movlb	1	; select bank1
  2880  0560  00E5               	movwf	_hze^(0+128)
  2881  0561                     l3618:
  2882                           
  2883                           ;User/newmain.c: 273:         if (LATCbits.LATC5 == 0 && LATCbits.LATC4 == 1)
  2884  0561  0022               	movlb	2	; select bank2
  2885  0562  1E8E               	btfss	14,5	;volatile
  2886  0563  1E0E               	btfss	14,4	;volatile
  2887  0564  2D67               	goto	l3624
  2888                           
  2889                           ;User/newmain.c: 274:         {;User/newmain.c: 275:             hze = 2;
  2890  0565  3002               	movlw	2
  2891  0566  2D83               	goto	L1
  2892  0567                     l3624:	
  2893                           ;User/newmain.c: 276:         }
  2894                           
  2895  0567  0020               	movlb	0	; select bank0
  2896  0568  01E2               	clrf	_T500ms_Event$1203
  2897  0569  0022               	movlb	2	; select bank2
  2898  056A  1A0E               	btfsc	14,4	;volatile
  2899  056B  2D6F               	goto	l3630
  2900  056C  0020               	movlb	0	; select bank0
  2901  056D  01E2               	clrf	_T500ms_Event$1203
  2902  056E  0AE2               	incf	_T500ms_Event$1203,f
  2903  056F                     l3630:
  2904  056F  0020               	movlb	0	; select bank0
  2905  0570  0862               	movf	_T500ms_Event$1203,w
  2906  0571  00E1               	movwf	??_T500ms_Event
  2907  0572  0EE1               	swapf	??_T500ms_Event,f
  2908  0573  0DE1               	rlf	??_T500ms_Event,f
  2909  0574  0022               	movlb	2	; select bank2
  2910  0575  080E               	movf	14,w	;volatile
  2911  0576  0020               	movlb	0	; select bank0
  2912  0577  0661               	xorwf	??_T500ms_Event,w
  2913  0578  39DF               	andlw	-33
  2914  0579  0661               	xorwf	??_T500ms_Event,w
  2915  057A  0022               	movlb	2	; select bank2
  2916  057B  008E               	movwf	14	;volatile
  2917  057C  0E0E               	swapf	14,w	;volatile
  2918  057D  0C89               	rrf	9,f
  2919  057E  3901               	andlw	1
  2920  057F  3A00               	xorlw	0
  2921  0580  1903               	skipnz
  2922  0581  2D88               	goto	l3634
  2923                           
  2924                           ;User/newmain.c: 278:         {;User/newmain.c: 279:             hze = 3;
  2925  0582  3003               	movlw	3
  2926  0583                     L1:
  2927  0583  0020               	movlb	0	; select bank0
  2928  0584  00E1               	movwf	??_T500ms_Event
  2929  0585  0861               	movf	??_T500ms_Event,w
  2930  0586  0021               	movlb	1	; select bank1
  2931  0587  00E5               	movwf	_hze^(0+128)
  2932  0588                     l3634:
  2933                           
  2934                           ;User/newmain.c: 281:         PWMON();
  2935  0588  318A  2279  3183   	fcall	_PWMON
  2936                           
  2937                           ;User/newmain.c: 282:         if (MinS_Cnt > 5)
  2938  058B  3006               	movlw	6
  2939  058C  0021               	movlb	1	; select bank1
  2940  058D  0259               	subwf	_MinS_Cnt^(0+128),w
  2941  058E  1C03               	skipc
  2942  058F  0008               	return
  2943                           
  2944                           ;User/newmain.c: 283:             MinS_Cnt = 1;
  2945  0590  01D9               	clrf	_MinS_Cnt^(0+128)
  2946  0591  0AD9               	incf	_MinS_Cnt^(0+128),f
  2947  0592  0008               	return
  2948  0593                     l3640:
  2949                           
  2950                           ;User/newmain.c: 286:     {;User/newmain.c: 287:         PWMOFF();
  2951  0593  3180  2004  3183   	fcall	_PWMOFF
  2952                           
  2953                           ;User/newmain.c: 288:         MinS_Cnt = 0;
  2954  0596  01D9               	clrf	_MinS_Cnt^(0+128)
  2955                           
  2956                           ;User/newmain.c: 289:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbit
      +                          s.LATC0 = LATAbits.LATA2 = 1;
  2957  0597  0022               	movlb	2	; select bank2
  2958  0598  150C               	bsf	12,2	;volatile
  2959  0599  1D0C               	btfss	12,2	;volatile
  2960  059A  2D9E               	goto	u4790
  2961  059B  0022               	movlb	2	; select bank2
  2962  059C  140E               	bsf	14,0	;volatile
  2963  059D  2DA0               	goto	u4804
  2964  059E                     u4790:
  2965  059E  0022               	movlb	2	; select bank2
  2966  059F  100E               	bcf	14,0	;volatile
  2967  05A0                     u4804:
  2968  05A0  1C0E               	btfss	14,0	;volatile
  2969  05A1  2DA5               	goto	u4800
  2970  05A2  0022               	movlb	2	; select bank2
  2971  05A3  148E               	bsf	14,1	;volatile
  2972  05A4  2DA7               	goto	u4814
  2973  05A5                     u4800:
  2974  05A5  0022               	movlb	2	; select bank2
  2975  05A6  108E               	bcf	14,1	;volatile
  2976  05A7                     u4814:
  2977  05A7  1C8E               	btfss	14,1	;volatile
  2978  05A8  2DAC               	goto	u4810
  2979  05A9  0022               	movlb	2	; select bank2
  2980  05AA  150E               	bsf	14,2	;volatile
  2981  05AB  2DAE               	goto	u4824
  2982  05AC                     u4810:
  2983  05AC  0022               	movlb	2	; select bank2
  2984  05AD  110E               	bcf	14,2	;volatile
  2985  05AE                     u4824:
  2986  05AE  1D0E               	btfss	14,2	;volatile
  2987  05AF  2DB3               	goto	u4820
  2988  05B0  0022               	movlb	2	; select bank2
  2989  05B1  170D               	bsf	13,6	;volatile
  2990  05B2  0008               	return
  2991  05B3                     u4820:
  2992  05B3  0022               	movlb	2	; select bank2
  2993  05B4  130D               	bcf	13,6	;volatile
  2994  05B5  0008               	return
  2995  05B6                     __end_of_T500ms_Event:
  2996                           
  2997                           	psect	text7
  2998  0DE4                     __ptext7:	
  2999 ;; *************** function ___xxtofl *****************
  3000 ;; Defined at:
  3001 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  sign            1    wreg     unsigned char 
  3004 ;;  val             4    0[COMMON] long 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  sign            1    8[COMMON] unsigned char 
  3007 ;;  arg             4   10[COMMON] unsigned long 
  3008 ;;  exp             1    9[COMMON] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  4    0[COMMON] unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 1F/0
  3015 ;;		On exit  : 1F/0
  3016 ;;		Unchanged: 1F/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3018 ;;      Params:         4       0       0       0       0       0       0       0
  3019 ;;      Locals:         6       0       0       0       0       0       0       0
  3020 ;;      Temps:          4       0       0       0       0       0       0       0
  3021 ;;      Totals:        14       0       0       0       0       0       0       0
  3022 ;;Total ram usage:       14 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_T500ms_Event
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function ___xxtofl
  3033  0DE4                     ___xxtofl:
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3037                           ;___xxtofl@sign stored from wreg
  3038  0DE4  00F8               	movwf	___xxtofl@sign
  3039  0DE5  0878               	movf	___xxtofl@sign,w
  3040  0DE6  1D03               	btfss	3,2
  3041  0DE7  1FF3               	btfss	___xxtofl@val+3,7
  3042  0DE8  2DF9               	goto	l2754
  3043  0DE9  0970               	comf	___xxtofl@val,w
  3044  0DEA  00FA               	movwf	___xxtofl@arg
  3045  0DEB  0971               	comf	___xxtofl@val+1,w
  3046  0DEC  00FB               	movwf	___xxtofl@arg+1
  3047  0DED  0972               	comf	___xxtofl@val+2,w
  3048  0DEE  00FC               	movwf	___xxtofl@arg+2
  3049  0DEF  0973               	comf	___xxtofl@val+3,w
  3050  0DF0  00FD               	movwf	___xxtofl@arg+3
  3051  0DF1  0AFA               	incf	___xxtofl@arg,f
  3052  0DF2  1903               	skipnz
  3053  0DF3  0AFB               	incf	___xxtofl@arg+1,f
  3054  0DF4  1903               	skipnz
  3055  0DF5  0AFC               	incf	___xxtofl@arg+2,f
  3056  0DF6  1903               	skipnz
  3057  0DF7  0AFD               	incf	___xxtofl@arg+3,f
  3058  0DF8  2E01               	goto	l1039
  3059  0DF9                     l2754:
  3060  0DF9  0873               	movf	___xxtofl@val+3,w
  3061  0DFA  00FD               	movwf	___xxtofl@arg+3
  3062  0DFB  0872               	movf	___xxtofl@val+2,w
  3063  0DFC  00FC               	movwf	___xxtofl@arg+2
  3064  0DFD  0871               	movf	___xxtofl@val+1,w
  3065  0DFE  00FB               	movwf	___xxtofl@arg+1
  3066  0DFF  0870               	movf	___xxtofl@val,w
  3067  0E00  00FA               	movwf	___xxtofl@arg
  3068  0E01                     l1039:
  3069  0E01  0873               	movf	___xxtofl@val+3,w
  3070  0E02  0472               	iorwf	___xxtofl@val+2,w
  3071  0E03  0471               	iorwf	___xxtofl@val+1,w
  3072  0E04  0470               	iorwf	___xxtofl@val,w
  3073  0E05  1D03               	skipz
  3074  0E06  2E10               	goto	l2760
  3075  0E07  3000               	movlw	0
  3076  0E08  00F3               	movwf	?___xxtofl+3
  3077  0E09  3000               	movlw	0
  3078  0E0A  00F2               	movwf	?___xxtofl+2
  3079  0E0B  3000               	movlw	0
  3080  0E0C  00F1               	movwf	?___xxtofl+1
  3081  0E0D  3000               	movlw	0
  3082  0E0E  00F0               	movwf	?___xxtofl
  3083  0E0F  0008               	return
  3084  0E10                     l2760:
  3085  0E10  3096               	movlw	150
  3086  0E11  00F4               	movwf	??___xxtofl
  3087  0E12  0874               	movf	??___xxtofl,w
  3088  0E13  00F9               	movwf	___xxtofl@exp
  3089  0E14                     l2764:
  3090  0E14  30FE               	movlw	254
  3091  0E15  057D               	andwf	___xxtofl@arg+3,w
  3092  0E16  1903               	btfsc	3,2
  3093  0E17  2E37               	goto	l1045
  3094  0E18  3001               	movlw	1
  3095  0E19  00F4               	movwf	??___xxtofl
  3096  0E1A  0874               	movf	??___xxtofl,w
  3097  0E1B  07F9               	addwf	___xxtofl@exp,f
  3098  0E1C  3001               	movlw	1
  3099  0E1D                     u3215:
  3100  0E1D  36FD               	lsrf	___xxtofl@arg+3,f
  3101  0E1E  0CFC               	rrf	___xxtofl@arg+2,f
  3102  0E1F  0CFB               	rrf	___xxtofl@arg+1,f
  3103  0E20  0CFA               	rrf	___xxtofl@arg,f
  3104  0E21  0B89               	decfsz	9,f
  3105  0E22  2E1D               	goto	u3215
  3106  0E23  2E14               	goto	l2764
  3107  0E24                     l2766:
  3108  0E24  3001               	movlw	1
  3109  0E25  00F4               	movwf	??___xxtofl
  3110  0E26  0874               	movf	??___xxtofl,w
  3111  0E27  07F9               	addwf	___xxtofl@exp,f
  3112  0E28  3001               	movlw	1
  3113  0E29  07FA               	addwf	___xxtofl@arg,f
  3114  0E2A  3000               	movlw	0
  3115  0E2B  3DFB               	addwfc	___xxtofl@arg+1,f
  3116  0E2C  3000               	movlw	0
  3117  0E2D  3DFC               	addwfc	___xxtofl@arg+2,f
  3118  0E2E  3000               	movlw	0
  3119  0E2F  3DFD               	addwfc	___xxtofl@arg+3,f
  3120  0E30  3001               	movlw	1
  3121  0E31                     u3235:
  3122  0E31  36FD               	lsrf	___xxtofl@arg+3,f
  3123  0E32  0CFC               	rrf	___xxtofl@arg+2,f
  3124  0E33  0CFB               	rrf	___xxtofl@arg+1,f
  3125  0E34  0CFA               	rrf	___xxtofl@arg,f
  3126  0E35  0B89               	decfsz	9,f
  3127  0E36  2E31               	goto	u3235
  3128  0E37                     l1045:
  3129  0E37  30FF               	movlw	255
  3130  0E38  057D               	andwf	___xxtofl@arg+3,w
  3131  0E39  1903               	btfsc	3,2
  3132  0E3A  2E49               	goto	l2774
  3133  0E3B  2E24               	goto	l2766
  3134  0E3C                     l2776:
  3135  0E3C  3002               	movlw	2
  3136  0E3D  0279               	subwf	___xxtofl@exp,w
  3137  0E3E  1C03               	btfss	3,0
  3138  0E3F  2E4B               	goto	l1052
  3139  0E40  3001               	movlw	1
  3140  0E41  02F9               	subwf	___xxtofl@exp,f
  3141  0E42  3001               	movlw	1
  3142  0E43                     u3255:
  3143  0E43  35FA               	lslf	___xxtofl@arg,f
  3144  0E44  0DFB               	rlf	___xxtofl@arg+1,f
  3145  0E45  0DFC               	rlf	___xxtofl@arg+2,f
  3146  0E46  0DFD               	rlf	___xxtofl@arg+3,f
  3147  0E47  0B89               	decfsz	9,f
  3148  0E48  2E43               	goto	u3255
  3149  0E49                     l2774:
  3150  0E49  1FFC               	btfss	___xxtofl@arg+2,7
  3151  0E4A  2E3C               	goto	l2776
  3152  0E4B                     l1052:
  3153  0E4B  1879               	btfsc	___xxtofl@exp,0
  3154  0E4C  2E55               	goto	l1053
  3155  0E4D  30FF               	movlw	255
  3156  0E4E  05FA               	andwf	___xxtofl@arg,f
  3157  0E4F  30FF               	movlw	255
  3158  0E50  05FB               	andwf	___xxtofl@arg+1,f
  3159  0E51  307F               	movlw	127
  3160  0E52  05FC               	andwf	___xxtofl@arg+2,f
  3161  0E53  30FF               	movlw	255
  3162  0E54  05FD               	andwf	___xxtofl@arg+3,f
  3163  0E55                     l1053:
  3164  0E55  1003               	clrc
  3165  0E56  0CF9               	rrf	___xxtofl@exp,f
  3166  0E57  0879               	movf	___xxtofl@exp,w
  3167  0E58  00F4               	movwf	??___xxtofl
  3168  0E59  01F5               	clrf	??___xxtofl+1
  3169  0E5A  01F6               	clrf	??___xxtofl+2
  3170  0E5B  01F7               	clrf	??___xxtofl+3
  3171  0E5C  3018               	movlw	24
  3172  0E5D                     u3295:
  3173  0E5D  35F4               	lslf	??___xxtofl,f
  3174  0E5E  0DF5               	rlf	??___xxtofl+1,f
  3175  0E5F  0DF6               	rlf	??___xxtofl+2,f
  3176  0E60  0DF7               	rlf	??___xxtofl+3,f
  3177  0E61  0B89               	decfsz	9,f
  3178  0E62  2E5D               	goto	u3295
  3179  0E63  0874               	movf	??___xxtofl,w
  3180  0E64  04FA               	iorwf	___xxtofl@arg,f
  3181  0E65  0875               	movf	??___xxtofl+1,w
  3182  0E66  04FB               	iorwf	___xxtofl@arg+1,f
  3183  0E67  0876               	movf	??___xxtofl+2,w
  3184  0E68  04FC               	iorwf	___xxtofl@arg+2,f
  3185  0E69  0877               	movf	??___xxtofl+3,w
  3186  0E6A  04FD               	iorwf	___xxtofl@arg+3,f
  3187  0E6B  0878               	movf	___xxtofl@sign,w
  3188  0E6C  1D03               	btfss	3,2
  3189  0E6D  1FF3               	btfss	___xxtofl@val+3,7
  3190  0E6E  2E70               	goto	l2788
  3191  0E6F  17FD               	bsf	___xxtofl@arg+3,7
  3192  0E70                     l2788:
  3193  0E70  087D               	movf	___xxtofl@arg+3,w
  3194  0E71  00F3               	movwf	?___xxtofl+3
  3195  0E72  087C               	movf	___xxtofl@arg+2,w
  3196  0E73  00F2               	movwf	?___xxtofl+2
  3197  0E74  087B               	movf	___xxtofl@arg+1,w
  3198  0E75  00F1               	movwf	?___xxtofl+1
  3199  0E76  087A               	movf	___xxtofl@arg,w
  3200  0E77  00F0               	movwf	?___xxtofl
  3201  0E78  0008               	return
  3202  0E79                     __end_of___xxtofl:
  3203                           
  3204                           	psect	text8
  3205  0D01                     __ptext8:	
  3206 ;; *************** function ___fltol *****************
  3207 ;; Defined at:
  3208 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;  f1              4   54[BANK0 ] unsigned char 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  exp1            1   64[BANK0 ] unsigned char 
  3213 ;;  sign1           1   63[BANK0 ] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  4   54[BANK0 ] long 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 1F/0
  3220 ;;		On exit  : 1F/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3223 ;;      Params:         0       4       0       0       0       0       0       0
  3224 ;;      Locals:         0       2       0       0       0       0       0       0
  3225 ;;      Temps:          0       5       0       0       0       0       0       0
  3226 ;;      Totals:         0      11       0       0       0       0       0       0
  3227 ;;Total ram usage:       11 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_T500ms_Event
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           
  3237                           ;psect for function ___fltol
  3238  0D01                     ___fltol:
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3242  0D01  1003               	clrc
  3243  0D02  0D58               	rlf	___fltol@f1+2,w
  3244  0D03  0D59               	rlf	___fltol@f1+3,w
  3245  0D04  00DA               	movwf	??___fltol
  3246  0D05  085A               	movf	??___fltol,w
  3247  0D06  00E0               	movwf	___fltol@exp1
  3248  0D07  0860               	movf	___fltol@exp1,w
  3249  0D08  1D03               	btfss	3,2
  3250  0D09  2D13               	goto	l2572
  3251  0D0A                     l2568:
  3252  0D0A  3000               	movlw	0
  3253  0D0B  00D9               	movwf	?___fltol+3
  3254  0D0C  3000               	movlw	0
  3255  0D0D  00D8               	movwf	?___fltol+2
  3256  0D0E  3000               	movlw	0
  3257  0D0F  00D7               	movwf	?___fltol+1
  3258  0D10  3000               	movlw	0
  3259  0D11  00D6               	movwf	?___fltol
  3260  0D12  0008               	return
  3261  0D13                     l2572:
  3262  0D13  0856               	movf	___fltol@f1,w
  3263  0D14  00DA               	movwf	??___fltol
  3264  0D15  0857               	movf	___fltol@f1+1,w
  3265  0D16  00DB               	movwf	??___fltol+1
  3266  0D17  0858               	movf	___fltol@f1+2,w
  3267  0D18  00DC               	movwf	??___fltol+2
  3268  0D19  0859               	movf	___fltol@f1+3,w
  3269  0D1A  00DD               	movwf	??___fltol+3
  3270  0D1B  301F               	movlw	31
  3271  0D1C                     u2845:
  3272  0D1C  36DD               	lsrf	??___fltol+3,f
  3273  0D1D  0CDC               	rrf	??___fltol+2,f
  3274  0D1E  0CDB               	rrf	??___fltol+1,f
  3275  0D1F  0CDA               	rrf	??___fltol,f
  3276  0D20  0B89               	decfsz	9,f
  3277  0D21  2D1C               	goto	u2845
  3278  0D22  085A               	movf	??___fltol,w
  3279  0D23  00DE               	movwf	??___fltol+4
  3280  0D24  085E               	movf	??___fltol+4,w
  3281  0D25  00DF               	movwf	___fltol@sign1
  3282  0D26  17D8               	bsf	___fltol@f1+2,7
  3283  0D27  30FF               	movlw	255
  3284  0D28  05D6               	andwf	___fltol@f1,f
  3285  0D29  30FF               	movlw	255
  3286  0D2A  05D7               	andwf	___fltol@f1+1,f
  3287  0D2B  30FF               	movlw	255
  3288  0D2C  05D8               	andwf	___fltol@f1+2,f
  3289  0D2D  3000               	movlw	0
  3290  0D2E  05D9               	andwf	___fltol@f1+3,f
  3291  0D2F  3096               	movlw	150
  3292  0D30  02E0               	subwf	___fltol@exp1,f
  3293  0D31  1FE0               	btfss	___fltol@exp1,7
  3294  0D32  2D46               	goto	l2590
  3295  0D33  0860               	movf	___fltol@exp1,w
  3296  0D34  3A80               	xorlw	128
  3297  0D35  3E97               	addlw	151
  3298  0D36  1C03               	btfss	3,0
  3299  0D37  2D0A               	goto	l2568
  3300  0D38                     l2588:
  3301  0D38  3001               	movlw	1
  3302  0D39                     u2875:
  3303  0D39  36D9               	lsrf	___fltol@f1+3,f
  3304  0D3A  0CD8               	rrf	___fltol@f1+2,f
  3305  0D3B  0CD7               	rrf	___fltol@f1+1,f
  3306  0D3C  0CD6               	rrf	___fltol@f1,f
  3307  0D3D  0B89               	decfsz	9,f
  3308  0D3E  2D39               	goto	u2875
  3309  0D3F  3001               	movlw	1
  3310  0D40  00DA               	movwf	??___fltol
  3311  0D41  085A               	movf	??___fltol,w
  3312  0D42  07E0               	addwf	___fltol@exp1,f
  3313  0D43  1903               	btfsc	3,2
  3314  0D44  2D57               	goto	l2598
  3315  0D45  2D38               	goto	l2588
  3316  0D46                     l2590:
  3317  0D46  3020               	movlw	32
  3318  0D47  0260               	subwf	___fltol@exp1,w
  3319  0D48  1803               	btfsc	3,0
  3320  0D49  2D0A               	goto	l2568
  3321  0D4A                     l799:
  3322  0D4A  0860               	movf	___fltol@exp1,w
  3323  0D4B  1903               	btfsc	3,2
  3324  0D4C  2D57               	goto	l2598
  3325  0D4D  3001               	movlw	1
  3326  0D4E                     u2905:
  3327  0D4E  35D6               	lslf	___fltol@f1,f
  3328  0D4F  0DD7               	rlf	___fltol@f1+1,f
  3329  0D50  0DD8               	rlf	___fltol@f1+2,f
  3330  0D51  0DD9               	rlf	___fltol@f1+3,f
  3331  0D52  0B89               	decfsz	9,f
  3332  0D53  2D4E               	goto	u2905
  3333  0D54  3001               	movlw	1
  3334  0D55  02E0               	subwf	___fltol@exp1,f
  3335  0D56  2D4A               	goto	l799
  3336  0D57                     l2598:
  3337  0D57  085F               	movf	___fltol@sign1,w
  3338  0D58  1903               	btfsc	3,2
  3339  0D59  0008               	return
  3340  0D5A  09D6               	comf	___fltol@f1,f
  3341  0D5B  09D7               	comf	___fltol@f1+1,f
  3342  0D5C  09D8               	comf	___fltol@f1+2,f
  3343  0D5D  09D9               	comf	___fltol@f1+3,f
  3344  0D5E  0AD6               	incf	___fltol@f1,f
  3345  0D5F  1903               	skipnz
  3346  0D60  0AD7               	incf	___fltol@f1+1,f
  3347  0D61  1903               	skipnz
  3348  0D62  0AD8               	incf	___fltol@f1+2,f
  3349  0D63  1903               	skipnz
  3350  0D64  0AD9               	incf	___fltol@f1+3,f
  3351  0D65  0008               	return
  3352  0D66                     __end_of___fltol:
  3353                           
  3354                           	psect	text9
  3355  0B04                     __ptext9:	
  3356 ;; *************** function ___flsub *****************
  3357 ;; Defined at:
  3358 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  a               4   46[BANK0 ] long 
  3361 ;;  b               4   50[BANK0 ] long 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  4   46[BANK0 ] long 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 1F/0
  3370 ;;		On exit  : 1F/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3373 ;;      Params:         0       8       0       0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0
  3376 ;;      Totals:         0       8       0       0       0       0       0       0
  3377 ;;Total ram usage:        8 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 1
  3380 ;; This function calls:
  3381 ;;		___fladd
  3382 ;; This function is called by:
  3383 ;;		_T500ms_Event
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function ___flsub
  3389  0B04                     ___flsub:
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  3393  0B04  3080               	movlw	128
  3394  0B05  06D1               	xorwf	___flsub@a+3,f
  3395  0B06  0855               	movf	___flsub@b+3,w
  3396  0B07  00BD               	movwf	___fladd@b+3
  3397  0B08  0854               	movf	___flsub@b+2,w
  3398  0B09  00BC               	movwf	___fladd@b+2
  3399  0B0A  0853               	movf	___flsub@b+1,w
  3400  0B0B  00BB               	movwf	___fladd@b+1
  3401  0B0C  0852               	movf	___flsub@b,w
  3402  0B0D  00BA               	movwf	___fladd@b
  3403  0B0E  0851               	movf	___flsub@a+3,w
  3404  0B0F  00C1               	movwf	___fladd@a+3
  3405  0B10  0850               	movf	___flsub@a+2,w
  3406  0B11  00C0               	movwf	___fladd@a+2
  3407  0B12  084F               	movf	___flsub@a+1,w
  3408  0B13  00BF               	movwf	___fladd@a+1
  3409  0B14  084E               	movf	___flsub@a,w
  3410  0B15  00BE               	movwf	___fladd@a
  3411  0B16  3181  21C3         	fcall	___fladd
  3412  0B18  083D               	movf	?___fladd+3,w
  3413  0B19  00D1               	movwf	?___flsub+3
  3414  0B1A  083C               	movf	?___fladd+2,w
  3415  0B1B  00D0               	movwf	?___flsub+2
  3416  0B1C  083B               	movf	?___fladd+1,w
  3417  0B1D  00CF               	movwf	?___flsub+1
  3418  0B1E  083A               	movf	?___fladd,w
  3419  0B1F  00CE               	movwf	?___flsub
  3420  0B20  0008               	return
  3421  0B21                     __end_of___flsub:
  3422                           
  3423                           	psect	text10
  3424  01C3                     __ptext10:	
  3425 ;; *************** function ___fladd *****************
  3426 ;; Defined at:
  3427 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  b               4   26[BANK0 ] long 
  3430 ;;  a               4   30[BANK0 ] long 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  grs             1   45[BANK0 ] unsigned char 
  3433 ;;  bexp            1   44[BANK0 ] unsigned char 
  3434 ;;  aexp            1   43[BANK0 ] unsigned char 
  3435 ;;  signs           1   42[BANK0 ] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4   26[BANK0 ] unsigned char 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 1F/0
  3442 ;;		On exit  : 1F/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3445 ;;      Params:         0       8       0       0       0       0       0       0
  3446 ;;      Locals:         0       4       0       0       0       0       0       0
  3447 ;;      Temps:          0       8       0       0       0       0       0       0
  3448 ;;      Totals:         0      20       0       0       0       0       0       0
  3449 ;;Total ram usage:       20 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_T500ms_Event
  3455 ;;		___flsub
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function ___fladd
  3461  01C3                     ___fladd:
  3462                           
  3463                           ;incstack = 0
  3464                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  3465  01C3  083D               	movf	___fladd@b+3,w
  3466  01C4  3980               	andlw	128
  3467  01C5  00C2               	movwf	??___fladd
  3468  01C6  0842               	movf	??___fladd,w
  3469  01C7  00CA               	movwf	___fladd@signs
  3470  01C8  353D               	lslf	___fladd@b+3,w
  3471  01C9  00C2               	movwf	??___fladd
  3472  01CA  0842               	movf	??___fladd,w
  3473  01CB  00CC               	movwf	___fladd@bexp
  3474  01CC  1BBC               	btfsc	___fladd@b+2,7
  3475  01CD  144C               	bsf	___fladd@bexp,0
  3476  01CE  084C               	movf	___fladd@bexp,w
  3477  01CF  1903               	btfsc	3,2
  3478  01D0  29DF               	goto	l2210
  3479  01D1  0A4C               	incf	___fladd@bexp,w
  3480  01D2  1D03               	btfss	3,2
  3481  01D3  29DC               	goto	l2206
  3482  01D4  3000               	movlw	0
  3483  01D5  00BD               	movwf	___fladd@b+3
  3484  01D6  3000               	movlw	0
  3485  01D7  00BC               	movwf	___fladd@b+2
  3486  01D8  3000               	movlw	0
  3487  01D9  00BB               	movwf	___fladd@b+1
  3488  01DA  3000               	movlw	0
  3489  01DB  00BA               	movwf	___fladd@b
  3490  01DC                     l2206:
  3491  01DC  17BC               	bsf	___fladd@b+2,7
  3492  01DD  01BD               	clrf	___fladd@b+3
  3493  01DE  29E7               	goto	l2212
  3494  01DF                     l2210:
  3495  01DF  3000               	movlw	0
  3496  01E0  00BD               	movwf	___fladd@b+3
  3497  01E1  3000               	movlw	0
  3498  01E2  00BC               	movwf	___fladd@b+2
  3499  01E3  3000               	movlw	0
  3500  01E4  00BB               	movwf	___fladd@b+1
  3501  01E5  3000               	movlw	0
  3502  01E6  00BA               	movwf	___fladd@b
  3503  01E7                     l2212:
  3504  01E7  0841               	movf	___fladd@a+3,w
  3505  01E8  3980               	andlw	128
  3506  01E9  00C2               	movwf	??___fladd
  3507  01EA  0842               	movf	??___fladd,w
  3508  01EB  00CB               	movwf	___fladd@aexp
  3509  01EC  084B               	movf	___fladd@aexp,w
  3510  01ED  064A               	xorwf	___fladd@signs,w
  3511  01EE  1D03               	btfss	3,2
  3512  01EF  174A               	bsf	___fladd@signs,6
  3513  01F0  3541               	lslf	___fladd@a+3,w
  3514  01F1  00C2               	movwf	??___fladd
  3515  01F2  0842               	movf	??___fladd,w
  3516  01F3  00CB               	movwf	___fladd@aexp
  3517  01F4  1BC0               	btfsc	___fladd@a+2,7
  3518  01F5  144B               	bsf	___fladd@aexp,0
  3519  01F6  084B               	movf	___fladd@aexp,w
  3520  01F7  1903               	btfsc	3,2
  3521  01F8  2A07               	goto	l2234
  3522  01F9  0A4B               	incf	___fladd@aexp,w
  3523  01FA  1D03               	btfss	3,2
  3524  01FB  2A04               	goto	l2230
  3525  01FC  3000               	movlw	0
  3526  01FD  00C1               	movwf	___fladd@a+3
  3527  01FE  3000               	movlw	0
  3528  01FF  00C0               	movwf	___fladd@a+2
  3529  0200  3000               	movlw	0
  3530  0201  00BF               	movwf	___fladd@a+1
  3531  0202  3000               	movlw	0
  3532  0203  00BE               	movwf	___fladd@a
  3533  0204                     l2230:
  3534  0204  17C0               	bsf	___fladd@a+2,7
  3535  0205  01C1               	clrf	___fladd@a+3
  3536  0206  2A0F               	goto	l899
  3537  0207                     l2234:
  3538  0207  3000               	movlw	0
  3539  0208  00C1               	movwf	___fladd@a+3
  3540  0209  3000               	movlw	0
  3541  020A  00C0               	movwf	___fladd@a+2
  3542  020B  3000               	movlw	0
  3543  020C  00BF               	movwf	___fladd@a+1
  3544  020D  3000               	movlw	0
  3545  020E  00BE               	movwf	___fladd@a
  3546  020F                     l899:
  3547  020F  084C               	movf	___fladd@bexp,w
  3548  0210  024B               	subwf	___fladd@aexp,w
  3549  0211  1803               	skipnc
  3550  0212  2A55               	goto	l2270
  3551  0213  1F4A               	btfss	___fladd@signs,6
  3552  0214  2A19               	goto	l2240
  3553  0215  3080               	movlw	128
  3554  0216  00C2               	movwf	??___fladd
  3555  0217  0842               	movf	??___fladd,w
  3556  0218  06CA               	xorwf	___fladd@signs,f
  3557  0219                     l2240:
  3558  0219  084C               	movf	___fladd@bexp,w
  3559  021A  00C2               	movwf	??___fladd
  3560  021B  0842               	movf	??___fladd,w
  3561  021C  00CD               	movwf	___fladd@grs
  3562  021D  084B               	movf	___fladd@aexp,w
  3563  021E  00C2               	movwf	??___fladd
  3564  021F  0842               	movf	??___fladd,w
  3565  0220  00CC               	movwf	___fladd@bexp
  3566  0221  084D               	movf	___fladd@grs,w
  3567  0222  00C2               	movwf	??___fladd
  3568  0223  0842               	movf	??___fladd,w
  3569  0224  00CB               	movwf	___fladd@aexp
  3570  0225  083A               	movf	___fladd@b,w
  3571  0226  00C2               	movwf	??___fladd
  3572  0227  0842               	movf	??___fladd,w
  3573  0228  00CD               	movwf	___fladd@grs
  3574  0229  083E               	movf	___fladd@a,w
  3575  022A  00C2               	movwf	??___fladd
  3576  022B  0842               	movf	??___fladd,w
  3577  022C  00BA               	movwf	___fladd@b
  3578  022D  084D               	movf	___fladd@grs,w
  3579  022E  00C2               	movwf	??___fladd
  3580  022F  0842               	movf	??___fladd,w
  3581  0230  00BE               	movwf	___fladd@a
  3582  0231  083B               	movf	___fladd@b+1,w
  3583  0232  00C2               	movwf	??___fladd
  3584  0233  0842               	movf	??___fladd,w
  3585  0234  00CD               	movwf	___fladd@grs
  3586  0235  083F               	movf	___fladd@a+1,w
  3587  0236  00C2               	movwf	??___fladd
  3588  0237  0842               	movf	??___fladd,w
  3589  0238  00BB               	movwf	___fladd@b+1
  3590  0239  084D               	movf	___fladd@grs,w
  3591  023A  00C2               	movwf	??___fladd
  3592  023B  0842               	movf	??___fladd,w
  3593  023C  00BF               	movwf	___fladd@a+1
  3594  023D  083C               	movf	___fladd@b+2,w
  3595  023E  00C2               	movwf	??___fladd
  3596  023F  0842               	movf	??___fladd,w
  3597  0240  00CD               	movwf	___fladd@grs
  3598  0241  0840               	movf	___fladd@a+2,w
  3599  0242  00C2               	movwf	??___fladd
  3600  0243  0842               	movf	??___fladd,w
  3601  0244  00BC               	movwf	___fladd@b+2
  3602  0245  084D               	movf	___fladd@grs,w
  3603  0246  00C2               	movwf	??___fladd
  3604  0247  0842               	movf	??___fladd,w
  3605  0248  00C0               	movwf	___fladd@a+2
  3606  0249  083D               	movf	___fladd@b+3,w
  3607  024A  00C2               	movwf	??___fladd
  3608  024B  0842               	movf	??___fladd,w
  3609  024C  00CD               	movwf	___fladd@grs
  3610  024D  0841               	movf	___fladd@a+3,w
  3611  024E  00C2               	movwf	??___fladd
  3612  024F  0842               	movf	??___fladd,w
  3613  0250  00BD               	movwf	___fladd@b+3
  3614  0251  084D               	movf	___fladd@grs,w
  3615  0252  00C2               	movwf	??___fladd
  3616  0253  0842               	movf	??___fladd,w
  3617  0254  00C1               	movwf	___fladd@a+3
  3618  0255                     l2270:
  3619  0255  01CD               	clrf	___fladd@grs
  3620  0256  084B               	movf	___fladd@aexp,w
  3621  0257  00C2               	movwf	??___fladd
  3622  0258  01C3               	clrf	??___fladd+1
  3623  0259  0843               	movf	??___fladd+1,w
  3624  025A  00C5               	movwf	??___fladd+3
  3625  025B  084C               	movf	___fladd@bexp,w
  3626  025C  0242               	subwf	??___fladd,w
  3627  025D  00C4               	movwf	??___fladd+2
  3628  025E  1C03               	skipc
  3629  025F  03C5               	decf	??___fladd+3,f
  3630  0260  0845               	movf	??___fladd+3,w
  3631  0261  3A80               	xorlw	128
  3632  0262  00C6               	movwf	??___fladd+4
  3633  0263  3080               	movlw	128
  3634  0264  0246               	subwf	??___fladd+4,w
  3635  0265  1D03               	skipz
  3636  0266  2A69               	goto	u2065
  3637  0267  301A               	movlw	26
  3638  0268  0244               	subwf	??___fladd+2,w
  3639  0269                     u2065:
  3640  0269  1C03               	skipc
  3641  026A  2A9D               	goto	l2288
  3642  026B  0020               	movlb	0	; select bank0
  3643  026C  083D               	movf	___fladd@b+3,w
  3644  026D  043C               	iorwf	___fladd@b+2,w
  3645  026E  043B               	iorwf	___fladd@b+1,w
  3646  026F  043A               	iorwf	___fladd@b,w
  3647  0270  1903               	btfsc	3,2
  3648  0271  2A74               	goto	u2070
  3649  0272  3001               	movlw	1
  3650  0273  2A75               	goto	u2080
  3651  0274                     u2070:
  3652  0274  3000               	movlw	0
  3653  0275                     u2080:
  3654  0275  00C2               	movwf	??___fladd
  3655  0276  0842               	movf	??___fladd,w
  3656  0277  00CD               	movwf	___fladd@grs
  3657  0278  3000               	movlw	0
  3658  0279  00BD               	movwf	___fladd@b+3
  3659  027A  3000               	movlw	0
  3660  027B  00BC               	movwf	___fladd@b+2
  3661  027C  3000               	movlw	0
  3662  027D  00BB               	movwf	___fladd@b+1
  3663  027E  3000               	movlw	0
  3664  027F  00BA               	movwf	___fladd@b
  3665  0280  084B               	movf	___fladd@aexp,w
  3666  0281  00C2               	movwf	??___fladd
  3667  0282  0842               	movf	??___fladd,w
  3668  0283  00CC               	movwf	___fladd@bexp
  3669  0284  2AA2               	goto	l903
  3670  0285                     l905:
  3671  0285  1C4D               	btfss	___fladd@grs,0
  3672  0286  2A8D               	goto	l2278
  3673  0287  364D               	lsrf	___fladd@grs,w
  3674  0288  3801               	iorlw	1
  3675  0289  00C2               	movwf	??___fladd
  3676  028A  0842               	movf	??___fladd,w
  3677  028B  00CD               	movwf	___fladd@grs
  3678  028C  2A8F               	goto	l2280
  3679  028D                     l2278:
  3680  028D  1003               	clrc
  3681  028E  0CCD               	rrf	___fladd@grs,f
  3682  028F                     l2280:
  3683  028F  183A               	btfsc	___fladd@b,0
  3684  0290  17CD               	bsf	___fladd@grs,7
  3685  0291  3001               	movlw	1
  3686  0292  00C2               	movwf	??___fladd
  3687  0293                     u2115:
  3688  0293  37BD               	asrf	___fladd@b+3,f
  3689  0294  0CBC               	rrf	___fladd@b+2,f
  3690  0295  0CBB               	rrf	___fladd@b+1,f
  3691  0296  0CBA               	rrf	___fladd@b,f
  3692  0297  0BC2               	decfsz	??___fladd& (0+127),f
  3693  0298  2A93               	goto	u2115
  3694  0299  3001               	movlw	1
  3695  029A  00C2               	movwf	??___fladd
  3696  029B  0842               	movf	??___fladd,w
  3697  029C  07CC               	addwf	___fladd@bexp,f
  3698  029D                     l2288:
  3699  029D  0020               	movlb	0	; select bank0
  3700  029E  084B               	movf	___fladd@aexp,w
  3701  029F  024C               	subwf	___fladd@bexp,w
  3702  02A0  1C03               	skipc
  3703  02A1  2A85               	goto	l905
  3704  02A2                     l903:
  3705  02A2  1B4A               	btfsc	___fladd@signs,6
  3706  02A3  2AD3               	goto	l2314
  3707  02A4  084C               	movf	___fladd@bexp,w
  3708  02A5  1D03               	btfss	3,2
  3709  02A6  2AB0               	goto	l2296
  3710  02A7  3000               	movlw	0
  3711  02A8  00BD               	movwf	?___fladd+3
  3712  02A9  3000               	movlw	0
  3713  02AA  00BC               	movwf	?___fladd+2
  3714  02AB  3000               	movlw	0
  3715  02AC  00BB               	movwf	?___fladd+1
  3716  02AD  3000               	movlw	0
  3717  02AE  00BA               	movwf	?___fladd
  3718  02AF  0008               	return
  3719  02B0                     l2296:
  3720  02B0  083E               	movf	___fladd@a,w
  3721  02B1  07BA               	addwf	___fladd@b,f
  3722  02B2  083F               	movf	___fladd@a+1,w
  3723  02B3  3DBB               	addwfc	___fladd@b+1,f
  3724  02B4  0840               	movf	___fladd@a+2,w
  3725  02B5  3DBC               	addwfc	___fladd@b+2,f
  3726  02B6  0841               	movf	___fladd@a+3,w
  3727  02B7  3DBD               	addwfc	___fladd@b+3,f
  3728  02B8  1C3D               	btfss	___fladd@b+3,0
  3729  02B9  2B4D               	goto	l2348
  3730  02BA  1C4D               	btfss	___fladd@grs,0
  3731  02BB  2AC2               	goto	l2304
  3732  02BC  364D               	lsrf	___fladd@grs,w
  3733  02BD  3801               	iorlw	1
  3734  02BE  00C2               	movwf	??___fladd
  3735  02BF  0842               	movf	??___fladd,w
  3736  02C0  00CD               	movwf	___fladd@grs
  3737  02C1  2AC4               	goto	l2306
  3738  02C2                     l2304:
  3739  02C2  1003               	clrc
  3740  02C3  0CCD               	rrf	___fladd@grs,f
  3741  02C4                     l2306:
  3742  02C4  183A               	btfsc	___fladd@b,0
  3743  02C5  17CD               	bsf	___fladd@grs,7
  3744  02C6  3001               	movlw	1
  3745  02C7  00C2               	movwf	??___fladd
  3746  02C8                     u2185:
  3747  02C8  37BD               	asrf	___fladd@b+3,f
  3748  02C9  0CBC               	rrf	___fladd@b+2,f
  3749  02CA  0CBB               	rrf	___fladd@b+1,f
  3750  02CB  0CBA               	rrf	___fladd@b,f
  3751  02CC  0BC2               	decfsz	??___fladd& (0+127),f
  3752  02CD  2AC8               	goto	u2185
  3753  02CE  3001               	movlw	1
  3754  02CF  00C2               	movwf	??___fladd
  3755  02D0  0842               	movf	??___fladd,w
  3756  02D1  07CC               	addwf	___fladd@bexp,f
  3757  02D2  2B4D               	goto	l2348
  3758  02D3                     l2314:
  3759  02D3  083D               	movf	___fladd@b+3,w
  3760  02D4  3A80               	xorlw	128
  3761  02D5  00C2               	movwf	??___fladd
  3762  02D6  0841               	movf	___fladd@a+3,w
  3763  02D7  3A80               	xorlw	128
  3764  02D8  0242               	subwf	??___fladd,w
  3765  02D9  1D03               	skipz
  3766  02DA  2AE5               	goto	u2193
  3767  02DB  0840               	movf	___fladd@a+2,w
  3768  02DC  023C               	subwf	___fladd@b+2,w
  3769  02DD  1D03               	skipz
  3770  02DE  2AE5               	goto	u2193
  3771  02DF  083F               	movf	___fladd@a+1,w
  3772  02E0  023B               	subwf	___fladd@b+1,w
  3773  02E1  1D03               	skipz
  3774  02E2  2AE5               	goto	u2193
  3775  02E3  083E               	movf	___fladd@a,w
  3776  02E4  023A               	subwf	___fladd@b,w
  3777  02E5                     u2193:
  3778  02E5  1803               	skipnc
  3779  02E6  2B1D               	goto	l2324
  3780  02E7  30FF               	movlw	255
  3781  02E8  00C2               	movwf	??___fladd
  3782  02E9  30FF               	movlw	255
  3783  02EA  00C3               	movwf	??___fladd+1
  3784  02EB  30FF               	movlw	255
  3785  02EC  00C4               	movwf	??___fladd+2
  3786  02ED  30FF               	movlw	255
  3787  02EE  00C5               	movwf	??___fladd+3
  3788  02EF  083A               	movf	___fladd@b,w
  3789  02F0  023E               	subwf	___fladd@a,w
  3790  02F1  00C6               	movwf	??___fladd+4
  3791  02F2  083B               	movf	___fladd@b+1,w
  3792  02F3  3B3F               	subwfb	___fladd@a+1,w
  3793  02F4  00C7               	movwf	??___fladd+5
  3794  02F5  083C               	movf	___fladd@b+2,w
  3795  02F6  3B40               	subwfb	___fladd@a+2,w
  3796  02F7  00C8               	movwf	??___fladd+6
  3797  02F8  083D               	movf	___fladd@b+3,w
  3798  02F9  3B41               	subwfb	___fladd@a+3,w
  3799  02FA  00C9               	movwf	??___fladd+7
  3800  02FB  0846               	movf	??___fladd+4,w
  3801  02FC  07C2               	addwf	??___fladd,f
  3802  02FD  0847               	movf	??___fladd+5,w
  3803  02FE  3DC3               	addwfc	??___fladd+1,f
  3804  02FF  0848               	movf	??___fladd+6,w
  3805  0300  3DC4               	addwfc	??___fladd+2,f
  3806  0301  0849               	movf	??___fladd+7,w
  3807  0302  3DC5               	addwfc	??___fladd+3,f
  3808  0303  0845               	movf	??___fladd+3,w
  3809  0304  00BD               	movwf	___fladd@b+3
  3810  0305  0844               	movf	??___fladd+2,w
  3811  0306  00BC               	movwf	___fladd@b+2
  3812  0307  0843               	movf	??___fladd+1,w
  3813  0308  00BB               	movwf	___fladd@b+1
  3814  0309  0842               	movf	??___fladd,w
  3815  030A  00BA               	movwf	___fladd@b
  3816  030B  3080               	movlw	128
  3817  030C  00C2               	movwf	??___fladd
  3818  030D  0842               	movf	??___fladd,w
  3819  030E  06CA               	xorwf	___fladd@signs,f
  3820  030F  09CD               	comf	___fladd@grs,f
  3821  0310  0ACD               	incf	___fladd@grs,f
  3822  0311  084D               	movf	___fladd@grs,w
  3823  0312  1D03               	btfss	3,2
  3824  0313  2B25               	goto	l920
  3825  0314  3001               	movlw	1
  3826  0315  07BA               	addwf	___fladd@b,f
  3827  0316  3000               	movlw	0
  3828  0317  3DBB               	addwfc	___fladd@b+1,f
  3829  0318  3000               	movlw	0
  3830  0319  3DBC               	addwfc	___fladd@b+2,f
  3831  031A  3000               	movlw	0
  3832  031B  3DBD               	addwfc	___fladd@b+3,f
  3833  031C  2B25               	goto	l920
  3834  031D                     l2324:
  3835  031D  083E               	movf	___fladd@a,w
  3836  031E  02BA               	subwf	___fladd@b,f
  3837  031F  083F               	movf	___fladd@a+1,w
  3838  0320  3BBB               	subwfb	___fladd@b+1,f
  3839  0321  0840               	movf	___fladd@a+2,w
  3840  0322  3BBC               	subwfb	___fladd@b+2,f
  3841  0323  0841               	movf	___fladd@a+3,w
  3842  0324  3BBD               	subwfb	___fladd@b+3,f
  3843  0325                     l920:
  3844  0325  083D               	movf	___fladd@b+3,w
  3845  0326  043C               	iorwf	___fladd@b+2,w
  3846  0327  043B               	iorwf	___fladd@b+1,w
  3847  0328  043A               	iorwf	___fladd@b,w
  3848  0329  1D03               	skipz
  3849  032A  2B4B               	goto	l2346
  3850  032B  084D               	movf	___fladd@grs,w
  3851  032C  1D03               	btfss	3,2
  3852  032D  2B4B               	goto	l2346
  3853  032E  3000               	movlw	0
  3854  032F  00BD               	movwf	?___fladd+3
  3855  0330  3000               	movlw	0
  3856  0331  00BC               	movwf	?___fladd+2
  3857  0332  3000               	movlw	0
  3858  0333  00BB               	movwf	?___fladd+1
  3859  0334  3000               	movlw	0
  3860  0335  00BA               	movwf	?___fladd
  3861  0336  0008               	return
  3862  0337                     l2332:
  3863  0337  3001               	movlw	1
  3864  0338                     u2235:
  3865  0338  35BA               	lslf	___fladd@b,f
  3866  0339  0DBB               	rlf	___fladd@b+1,f
  3867  033A  0DBC               	rlf	___fladd@b+2,f
  3868  033B  0DBD               	rlf	___fladd@b+3,f
  3869  033C  0B89               	decfsz	9,f
  3870  033D  2B38               	goto	u2235
  3871  033E  1BCD               	btfsc	___fladd@grs,7
  3872  033F  143A               	bsf	___fladd@b,0
  3873  0340  1C4D               	btfss	___fladd@grs,0
  3874  0341  2B44               	goto	l2340
  3875  0342  1403               	setc
  3876  0343  2B45               	goto	L2
  3877  0344                     l2340:
  3878  0344  1003               	clrc
  3879  0345                     L2:
  3880  0345  0DCD               	rlf	___fladd@grs,f
  3881  0346  084C               	movf	___fladd@bexp,w
  3882  0347  1903               	btfsc	3,2
  3883  0348  2B4B               	goto	l2346
  3884  0349  3001               	movlw	1
  3885  034A  02CC               	subwf	___fladd@bexp,f
  3886  034B                     l2346:
  3887  034B  1FBC               	btfss	___fladd@b+2,7
  3888  034C  2B37               	goto	l2332
  3889  034D                     l2348:
  3890  034D  01CB               	clrf	___fladd@aexp
  3891  034E  1FCD               	btfss	___fladd@grs,7
  3892  034F  2B58               	goto	l2358
  3893  0350  084D               	movf	___fladd@grs,w
  3894  0351  397F               	andlw	127
  3895  0352  1903               	btfsc	3,2
  3896  0353  183A               	btfsc	___fladd@b,0
  3897  0354  2B56               	goto	l2354
  3898  0355  2B58               	goto	l2358
  3899  0356                     l2354:
  3900  0356  01CB               	clrf	___fladd@aexp
  3901  0357  0ACB               	incf	___fladd@aexp,f
  3902  0358                     l2358:
  3903  0358  084B               	movf	___fladd@aexp,w
  3904  0359  1903               	btfsc	3,2
  3905  035A  2B84               	goto	l933
  3906  035B  3001               	movlw	1
  3907  035C  07BA               	addwf	___fladd@b,f
  3908  035D  3000               	movlw	0
  3909  035E  3DBB               	addwfc	___fladd@b+1,f
  3910  035F  3000               	movlw	0
  3911  0360  3DBC               	addwfc	___fladd@b+2,f
  3912  0361  3000               	movlw	0
  3913  0362  3DBD               	addwfc	___fladd@b+3,f
  3914  0363  1C3D               	btfss	___fladd@b+3,0
  3915  0364  2B84               	goto	l933
  3916  0365  083A               	movf	___fladd@b,w
  3917  0366  00C2               	movwf	??___fladd
  3918  0367  083B               	movf	___fladd@b+1,w
  3919  0368  00C3               	movwf	??___fladd+1
  3920  0369  083C               	movf	___fladd@b+2,w
  3921  036A  00C4               	movwf	??___fladd+2
  3922  036B  083D               	movf	___fladd@b+3,w
  3923  036C  00C5               	movwf	??___fladd+3
  3924  036D  3001               	movlw	1
  3925  036E  00C6               	movwf	??___fladd+4
  3926  036F                     u2335:
  3927  036F  37C5               	asrf	??___fladd+3,f
  3928  0370  0CC4               	rrf	??___fladd+2,f
  3929  0371  0CC3               	rrf	??___fladd+1,f
  3930  0372  0CC2               	rrf	??___fladd,f
  3931  0373  0BC6               	decfsz	??___fladd+4,f
  3932  0374  2B6F               	goto	u2335
  3933  0375  0845               	movf	??___fladd+3,w
  3934  0376  00BD               	movwf	___fladd@b+3
  3935  0377  0844               	movf	??___fladd+2,w
  3936  0378  00BC               	movwf	___fladd@b+2
  3937  0379  0843               	movf	??___fladd+1,w
  3938  037A  00BB               	movwf	___fladd@b+1
  3939  037B  0842               	movf	??___fladd,w
  3940  037C  00BA               	movwf	___fladd@b
  3941  037D  0A4C               	incf	___fladd@bexp,w
  3942  037E  1903               	btfsc	3,2
  3943  037F  2B84               	goto	l933
  3944  0380  3001               	movlw	1
  3945  0381  00C2               	movwf	??___fladd
  3946  0382  0842               	movf	??___fladd,w
  3947  0383  07CC               	addwf	___fladd@bexp,f
  3948  0384                     l933:
  3949  0384  0A4C               	incf	___fladd@bexp,w
  3950  0385  1D03               	btfss	3,2
  3951  0386  084C               	movf	___fladd@bexp,w
  3952  0387  1D03               	btfss	3,2
  3953  0388  2B94               	goto	l2376
  3954  0389  3000               	movlw	0
  3955  038A  00BD               	movwf	___fladd@b+3
  3956  038B  3000               	movlw	0
  3957  038C  00BC               	movwf	___fladd@b+2
  3958  038D  3000               	movlw	0
  3959  038E  00BB               	movwf	___fladd@b+1
  3960  038F  3000               	movlw	0
  3961  0390  00BA               	movwf	___fladd@b
  3962  0391  084C               	movf	___fladd@bexp,w
  3963  0392  1903               	btfsc	3,2
  3964  0393  01CA               	clrf	___fladd@signs
  3965  0394                     l2376:
  3966  0394  1C4C               	btfss	___fladd@bexp,0
  3967  0395  2B98               	goto	l2380
  3968  0396  17BC               	bsf	___fladd@b+2,7
  3969  0397  2B9C               	goto	l941
  3970  0398                     l2380:
  3971  0398  307F               	movlw	127
  3972  0399  00C2               	movwf	??___fladd
  3973  039A  0842               	movf	??___fladd,w
  3974  039B  05BC               	andwf	___fladd@b+2,f
  3975  039C                     l941:
  3976  039C  364C               	lsrf	___fladd@bexp,w
  3977  039D  00C2               	movwf	??___fladd
  3978  039E  0842               	movf	??___fladd,w
  3979  039F  00BD               	movwf	___fladd@b+3
  3980  03A0  1FCA               	btfss	___fladd@signs,7
  3981  03A1  0008               	return
  3982  03A2  17BD               	bsf	___fladd@b+3,7
  3983  03A3  0008               	return
  3984  03A4                     __end_of___fladd:
  3985                           
  3986                           	psect	text11
  3987  05B6                     __ptext11:	
  3988 ;; *************** function ___flmul *****************
  3989 ;; Defined at:
  3990 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  b               4    0[BANK0 ] unsigned char 
  3993 ;;  a               4    4[BANK0 ] unsigned char 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  prod            4   20[BANK0 ] struct .
  3996 ;;  grs             4   15[BANK0 ] unsigned long 
  3997 ;;  temp            2   24[BANK0 ] struct .
  3998 ;;  bexp            1   19[BANK0 ] unsigned char 
  3999 ;;  aexp            1   14[BANK0 ] unsigned char 
  4000 ;;  sign            1   13[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  4    0[BANK0 ] unsigned char 
  4003 ;; Registers used:
  4004 ;;		wreg, status,2, status,0, pclath, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 1F/0
  4007 ;;		On exit  : 1F/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4010 ;;      Params:         0       8       0       0       0       0       0       0
  4011 ;;      Locals:         0      13       0       0       0       0       0       0
  4012 ;;      Temps:          0       5       0       0       0       0       0       0
  4013 ;;      Totals:         0      26       0       0       0       0       0       0
  4014 ;;Total ram usage:       26 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 1
  4017 ;; This function calls:
  4018 ;;		__Umul8_16
  4019 ;; This function is called by:
  4020 ;;		_T500ms_Event
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function ___flmul
  4026  05B6                     ___flmul:
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4030  05B6  0823               	movf	___flmul@b+3,w
  4031  05B7  3980               	andlw	128
  4032  05B8  00A8               	movwf	??___flmul
  4033  05B9  0828               	movf	??___flmul,w
  4034  05BA  00AD               	movwf	___flmul@sign
  4035  05BB  3523               	lslf	___flmul@b+3,w
  4036  05BC  00A8               	movwf	??___flmul
  4037  05BD  0828               	movf	??___flmul,w
  4038  05BE  00B3               	movwf	___flmul@bexp
  4039  05BF  1BA2               	btfsc	___flmul@b+2,7
  4040  05C0  1433               	bsf	___flmul@bexp,0
  4041  05C1  0833               	movf	___flmul@bexp,w
  4042  05C2  1903               	btfsc	3,2
  4043  05C3  2DD1               	goto	l2624
  4044  05C4  0A33               	incf	___flmul@bexp,w
  4045  05C5  1D03               	btfss	3,2
  4046  05C6  2DCF               	goto	l2622
  4047  05C7  3000               	movlw	0
  4048  05C8  00A3               	movwf	___flmul@b+3
  4049  05C9  3000               	movlw	0
  4050  05CA  00A2               	movwf	___flmul@b+2
  4051  05CB  3000               	movlw	0
  4052  05CC  00A1               	movwf	___flmul@b+1
  4053  05CD  3000               	movlw	0
  4054  05CE  00A0               	movwf	___flmul@b
  4055  05CF                     l2622:
  4056  05CF  17A2               	bsf	___flmul@b+2,7
  4057  05D0  2DD9               	goto	l2626
  4058  05D1                     l2624:
  4059  05D1  3000               	movlw	0
  4060  05D2  00A3               	movwf	___flmul@b+3
  4061  05D3  3000               	movlw	0
  4062  05D4  00A2               	movwf	___flmul@b+2
  4063  05D5  3000               	movlw	0
  4064  05D6  00A1               	movwf	___flmul@b+1
  4065  05D7  3000               	movlw	0
  4066  05D8  00A0               	movwf	___flmul@b
  4067  05D9                     l2626:
  4068  05D9  0827               	movf	___flmul@a+3,w
  4069  05DA  3980               	andlw	128
  4070  05DB  00A8               	movwf	??___flmul
  4071  05DC  0828               	movf	??___flmul,w
  4072  05DD  06AD               	xorwf	___flmul@sign,f
  4073  05DE  3527               	lslf	___flmul@a+3,w
  4074  05DF  00A8               	movwf	??___flmul
  4075  05E0  0828               	movf	??___flmul,w
  4076  05E1  00AE               	movwf	___flmul@aexp
  4077  05E2  1BA6               	btfsc	___flmul@a+2,7
  4078  05E3  142E               	bsf	___flmul@aexp,0
  4079  05E4  082E               	movf	___flmul@aexp,w
  4080  05E5  1903               	btfsc	3,2
  4081  05E6  2DF4               	goto	l2642
  4082  05E7  0A2E               	incf	___flmul@aexp,w
  4083  05E8  1D03               	btfss	3,2
  4084  05E9  2DF2               	goto	l2640
  4085  05EA  3000               	movlw	0
  4086  05EB  00A7               	movwf	___flmul@a+3
  4087  05EC  3000               	movlw	0
  4088  05ED  00A6               	movwf	___flmul@a+2
  4089  05EE  3000               	movlw	0
  4090  05EF  00A5               	movwf	___flmul@a+1
  4091  05F0  3000               	movlw	0
  4092  05F1  00A4               	movwf	___flmul@a
  4093  05F2                     l2640:
  4094  05F2  17A6               	bsf	___flmul@a+2,7
  4095  05F3  2DFC               	goto	l2644
  4096  05F4                     l2642:
  4097  05F4  3000               	movlw	0
  4098  05F5  00A7               	movwf	___flmul@a+3
  4099  05F6  3000               	movlw	0
  4100  05F7  00A6               	movwf	___flmul@a+2
  4101  05F8  3000               	movlw	0
  4102  05F9  00A5               	movwf	___flmul@a+1
  4103  05FA  3000               	movlw	0
  4104  05FB  00A4               	movwf	___flmul@a
  4105  05FC                     l2644:
  4106  05FC  082E               	movf	___flmul@aexp,w
  4107  05FD  1D03               	btfss	3,2
  4108  05FE  0833               	movf	___flmul@bexp,w
  4109  05FF  1D03               	btfss	3,2
  4110  0600  2E0A               	goto	l2652
  4111  0601  3000               	movlw	0
  4112  0602  00A3               	movwf	?___flmul+3
  4113  0603  3000               	movlw	0
  4114  0604  00A2               	movwf	?___flmul+2
  4115  0605  3000               	movlw	0
  4116  0606  00A1               	movwf	?___flmul+1
  4117  0607  3000               	movlw	0
  4118  0608  00A0               	movwf	?___flmul
  4119  0609  0008               	return
  4120  060A                     l2652:
  4121  060A  0820               	movf	___flmul@b,w
  4122  060B  00A8               	movwf	??___flmul
  4123  060C  0828               	movf	??___flmul,w
  4124  060D  00F0               	movwf	__Umul8_16@multiplicand
  4125  060E  0826               	movf	___flmul@a+2,w
  4126  060F  318B  2321  3185   	fcall	__Umul8_16
  4127  0612  0871               	movf	?__Umul8_16+1,w
  4128  0613  00B9               	movwf	___flmul@temp+1
  4129  0614  0870               	movf	?__Umul8_16,w
  4130  0615  00B8               	movwf	___flmul@temp
  4131  0616  0838               	movf	___flmul@temp,w
  4132  0617  00A8               	movwf	??___flmul
  4133  0618  01A9               	clrf	??___flmul+1
  4134  0619  01AA               	clrf	??___flmul+2
  4135  061A  01AB               	clrf	??___flmul+3
  4136  061B  082B               	movf	??___flmul+3,w
  4137  061C  00B2               	movwf	___flmul@grs+3
  4138  061D  082A               	movf	??___flmul+2,w
  4139  061E  00B1               	movwf	___flmul@grs+2
  4140  061F  0829               	movf	??___flmul+1,w
  4141  0620  00B0               	movwf	___flmul@grs+1
  4142  0621  0828               	movf	??___flmul,w
  4143  0622  00AF               	movwf	___flmul@grs
  4144  0623  0839               	movf	___flmul@temp+1,w
  4145  0624  00A8               	movwf	??___flmul
  4146  0625  01A9               	clrf	??___flmul+1
  4147  0626  01AA               	clrf	??___flmul+2
  4148  0627  01AB               	clrf	??___flmul+3
  4149  0628  082B               	movf	??___flmul+3,w
  4150  0629  00B7               	movwf	___flmul@prod+3
  4151  062A  082A               	movf	??___flmul+2,w
  4152  062B  00B6               	movwf	___flmul@prod+2
  4153  062C  0829               	movf	??___flmul+1,w
  4154  062D  00B5               	movwf	___flmul@prod+1
  4155  062E  0828               	movf	??___flmul,w
  4156  062F  00B4               	movwf	___flmul@prod
  4157  0630  0821               	movf	___flmul@b+1,w
  4158  0631  00A8               	movwf	??___flmul
  4159  0632  0828               	movf	??___flmul,w
  4160  0633  00F0               	movwf	__Umul8_16@multiplicand
  4161  0634  0825               	movf	___flmul@a+1,w
  4162  0635  318B  2321  3185   	fcall	__Umul8_16
  4163  0638  0871               	movf	?__Umul8_16+1,w
  4164  0639  00B9               	movwf	___flmul@temp+1
  4165  063A  0870               	movf	?__Umul8_16,w
  4166  063B  00B8               	movwf	___flmul@temp
  4167  063C  0838               	movf	___flmul@temp,w
  4168  063D  00A8               	movwf	??___flmul
  4169  063E  01A9               	clrf	??___flmul+1
  4170  063F  01AA               	clrf	??___flmul+2
  4171  0640  01AB               	clrf	??___flmul+3
  4172  0641  0828               	movf	??___flmul,w
  4173  0642  07AF               	addwf	___flmul@grs,f
  4174  0643  0829               	movf	??___flmul+1,w
  4175  0644  3DB0               	addwfc	___flmul@grs+1,f
  4176  0645  082A               	movf	??___flmul+2,w
  4177  0646  3DB1               	addwfc	___flmul@grs+2,f
  4178  0647  082B               	movf	??___flmul+3,w
  4179  0648  3DB2               	addwfc	___flmul@grs+3,f
  4180  0649  0839               	movf	___flmul@temp+1,w
  4181  064A  00A8               	movwf	??___flmul
  4182  064B  01A9               	clrf	??___flmul+1
  4183  064C  01AA               	clrf	??___flmul+2
  4184  064D  01AB               	clrf	??___flmul+3
  4185  064E  0828               	movf	??___flmul,w
  4186  064F  07B4               	addwf	___flmul@prod,f
  4187  0650  0829               	movf	??___flmul+1,w
  4188  0651  3DB5               	addwfc	___flmul@prod+1,f
  4189  0652  082A               	movf	??___flmul+2,w
  4190  0653  3DB6               	addwfc	___flmul@prod+2,f
  4191  0654  082B               	movf	??___flmul+3,w
  4192  0655  3DB7               	addwfc	___flmul@prod+3,f
  4193  0656  0822               	movf	___flmul@b+2,w
  4194  0657  00A8               	movwf	??___flmul
  4195  0658  0828               	movf	??___flmul,w
  4196  0659  00F0               	movwf	__Umul8_16@multiplicand
  4197  065A  0824               	movf	___flmul@a,w
  4198  065B  318B  2321  3185   	fcall	__Umul8_16
  4199  065E  0871               	movf	?__Umul8_16+1,w
  4200  065F  00B9               	movwf	___flmul@temp+1
  4201  0660  0870               	movf	?__Umul8_16,w
  4202  0661  00B8               	movwf	___flmul@temp
  4203  0662  0838               	movf	___flmul@temp,w
  4204  0663  00A8               	movwf	??___flmul
  4205  0664  01A9               	clrf	??___flmul+1
  4206  0665  01AA               	clrf	??___flmul+2
  4207  0666  01AB               	clrf	??___flmul+3
  4208  0667  0828               	movf	??___flmul,w
  4209  0668  07AF               	addwf	___flmul@grs,f
  4210  0669  0829               	movf	??___flmul+1,w
  4211  066A  3DB0               	addwfc	___flmul@grs+1,f
  4212  066B  082A               	movf	??___flmul+2,w
  4213  066C  3DB1               	addwfc	___flmul@grs+2,f
  4214  066D  082B               	movf	??___flmul+3,w
  4215  066E  3DB2               	addwfc	___flmul@grs+3,f
  4216  066F  0839               	movf	___flmul@temp+1,w
  4217  0670  00A8               	movwf	??___flmul
  4218  0671  01A9               	clrf	??___flmul+1
  4219  0672  01AA               	clrf	??___flmul+2
  4220  0673  01AB               	clrf	??___flmul+3
  4221  0674  0828               	movf	??___flmul,w
  4222  0675  07B4               	addwf	___flmul@prod,f
  4223  0676  0829               	movf	??___flmul+1,w
  4224  0677  3DB5               	addwfc	___flmul@prod+1,f
  4225  0678  082A               	movf	??___flmul+2,w
  4226  0679  3DB6               	addwfc	___flmul@prod+2,f
  4227  067A  082B               	movf	??___flmul+3,w
  4228  067B  3DB7               	addwfc	___flmul@prod+3,f
  4229  067C  3008               	movlw	8
  4230  067D                     u3015:
  4231  067D  35AF               	lslf	___flmul@grs,f
  4232  067E  0DB0               	rlf	___flmul@grs+1,f
  4233  067F  0DB1               	rlf	___flmul@grs+2,f
  4234  0680  0DB2               	rlf	___flmul@grs+3,f
  4235  0681  0B89               	decfsz	9,f
  4236  0682  2E7D               	goto	u3015
  4237  0683  0821               	movf	___flmul@b+1,w
  4238  0684  00A8               	movwf	??___flmul
  4239  0685  0828               	movf	??___flmul,w
  4240  0686  00F0               	movwf	__Umul8_16@multiplicand
  4241  0687  0824               	movf	___flmul@a,w
  4242  0688  318B  2321  3185   	fcall	__Umul8_16
  4243  068B  0871               	movf	?__Umul8_16+1,w
  4244  068C  00B9               	movwf	___flmul@temp+1
  4245  068D  0870               	movf	?__Umul8_16,w
  4246  068E  00B8               	movwf	___flmul@temp
  4247  068F  0838               	movf	___flmul@temp,w
  4248  0690  07AF               	addwf	___flmul@grs,f
  4249  0691  0839               	movf	___flmul@temp+1,w
  4250  0692  3DB0               	addwfc	___flmul@grs+1,f
  4251  0693  3000               	movlw	0
  4252  0694  3DB1               	addwfc	___flmul@grs+2,f
  4253  0695  3DB2               	addwfc	___flmul@grs+3,f
  4254  0696  0820               	movf	___flmul@b,w
  4255  0697  00A8               	movwf	??___flmul
  4256  0698  0828               	movf	??___flmul,w
  4257  0699  00F0               	movwf	__Umul8_16@multiplicand
  4258  069A  0825               	movf	___flmul@a+1,w
  4259  069B  318B  2321  3185   	fcall	__Umul8_16
  4260  069E  0871               	movf	?__Umul8_16+1,w
  4261  069F  00B9               	movwf	___flmul@temp+1
  4262  06A0  0870               	movf	?__Umul8_16,w
  4263  06A1  00B8               	movwf	___flmul@temp
  4264  06A2  0838               	movf	___flmul@temp,w
  4265  06A3  07AF               	addwf	___flmul@grs,f
  4266  06A4  0839               	movf	___flmul@temp+1,w
  4267  06A5  3DB0               	addwfc	___flmul@grs+1,f
  4268  06A6  3000               	movlw	0
  4269  06A7  3DB1               	addwfc	___flmul@grs+2,f
  4270  06A8  3DB2               	addwfc	___flmul@grs+3,f
  4271  06A9  3008               	movlw	8
  4272  06AA                     u3025:
  4273  06AA  35AF               	lslf	___flmul@grs,f
  4274  06AB  0DB0               	rlf	___flmul@grs+1,f
  4275  06AC  0DB1               	rlf	___flmul@grs+2,f
  4276  06AD  0DB2               	rlf	___flmul@grs+3,f
  4277  06AE  0B89               	decfsz	9,f
  4278  06AF  2EAA               	goto	u3025
  4279  06B0  0820               	movf	___flmul@b,w
  4280  06B1  00A8               	movwf	??___flmul
  4281  06B2  0828               	movf	??___flmul,w
  4282  06B3  00F0               	movwf	__Umul8_16@multiplicand
  4283  06B4  0824               	movf	___flmul@a,w
  4284  06B5  318B  2321  3185   	fcall	__Umul8_16
  4285  06B8  0871               	movf	?__Umul8_16+1,w
  4286  06B9  00B9               	movwf	___flmul@temp+1
  4287  06BA  0870               	movf	?__Umul8_16,w
  4288  06BB  00B8               	movwf	___flmul@temp
  4289  06BC  0838               	movf	___flmul@temp,w
  4290  06BD  07AF               	addwf	___flmul@grs,f
  4291  06BE  0839               	movf	___flmul@temp+1,w
  4292  06BF  3DB0               	addwfc	___flmul@grs+1,f
  4293  06C0  3000               	movlw	0
  4294  06C1  3DB1               	addwfc	___flmul@grs+2,f
  4295  06C2  3DB2               	addwfc	___flmul@grs+3,f
  4296  06C3  0821               	movf	___flmul@b+1,w
  4297  06C4  00A8               	movwf	??___flmul
  4298  06C5  0828               	movf	??___flmul,w
  4299  06C6  00F0               	movwf	__Umul8_16@multiplicand
  4300  06C7  0826               	movf	___flmul@a+2,w
  4301  06C8  318B  2321  3185   	fcall	__Umul8_16
  4302  06CB  0871               	movf	?__Umul8_16+1,w
  4303  06CC  00B9               	movwf	___flmul@temp+1
  4304  06CD  0870               	movf	?__Umul8_16,w
  4305  06CE  00B8               	movwf	___flmul@temp
  4306  06CF  0838               	movf	___flmul@temp,w
  4307  06D0  07B4               	addwf	___flmul@prod,f
  4308  06D1  0839               	movf	___flmul@temp+1,w
  4309  06D2  3DB5               	addwfc	___flmul@prod+1,f
  4310  06D3  3000               	movlw	0
  4311  06D4  3DB6               	addwfc	___flmul@prod+2,f
  4312  06D5  3DB7               	addwfc	___flmul@prod+3,f
  4313  06D6  0822               	movf	___flmul@b+2,w
  4314  06D7  00A8               	movwf	??___flmul
  4315  06D8  0828               	movf	??___flmul,w
  4316  06D9  00F0               	movwf	__Umul8_16@multiplicand
  4317  06DA  0825               	movf	___flmul@a+1,w
  4318  06DB  318B  2321  3185   	fcall	__Umul8_16
  4319  06DE  0871               	movf	?__Umul8_16+1,w
  4320  06DF  00B9               	movwf	___flmul@temp+1
  4321  06E0  0870               	movf	?__Umul8_16,w
  4322  06E1  00B8               	movwf	___flmul@temp
  4323  06E2  0838               	movf	___flmul@temp,w
  4324  06E3  07B4               	addwf	___flmul@prod,f
  4325  06E4  0839               	movf	___flmul@temp+1,w
  4326  06E5  3DB5               	addwfc	___flmul@prod+1,f
  4327  06E6  3000               	movlw	0
  4328  06E7  3DB6               	addwfc	___flmul@prod+2,f
  4329  06E8  3DB7               	addwfc	___flmul@prod+3,f
  4330  06E9  0822               	movf	___flmul@b+2,w
  4331  06EA  00A8               	movwf	??___flmul
  4332  06EB  0828               	movf	??___flmul,w
  4333  06EC  00F0               	movwf	__Umul8_16@multiplicand
  4334  06ED  0826               	movf	___flmul@a+2,w
  4335  06EE  318B  2321  3185   	fcall	__Umul8_16
  4336  06F1  0871               	movf	?__Umul8_16+1,w
  4337  06F2  00B9               	movwf	___flmul@temp+1
  4338  06F3  0870               	movf	?__Umul8_16,w
  4339  06F4  00B8               	movwf	___flmul@temp
  4340  06F5  0838               	movf	___flmul@temp,w
  4341  06F6  00A8               	movwf	??___flmul
  4342  06F7  0839               	movf	___flmul@temp+1,w
  4343  06F8  00A9               	movwf	??___flmul+1
  4344  06F9  01AA               	clrf	??___flmul+2
  4345  06FA  01AB               	clrf	??___flmul+3
  4346  06FB  3008               	movlw	8
  4347  06FC                     u3035:
  4348  06FC  35A8               	lslf	??___flmul,f
  4349  06FD  0DA9               	rlf	??___flmul+1,f
  4350  06FE  0DAA               	rlf	??___flmul+2,f
  4351  06FF  0DAB               	rlf	??___flmul+3,f
  4352  0700  0B89               	decfsz	9,f
  4353  0701  2EFC               	goto	u3035
  4354  0702  0828               	movf	??___flmul,w
  4355  0703  07B4               	addwf	___flmul@prod,f
  4356  0704  0829               	movf	??___flmul+1,w
  4357  0705  3DB5               	addwfc	___flmul@prod+1,f
  4358  0706  082A               	movf	??___flmul+2,w
  4359  0707  3DB6               	addwfc	___flmul@prod+2,f
  4360  0708  082B               	movf	??___flmul+3,w
  4361  0709  3DB7               	addwfc	___flmul@prod+3,f
  4362  070A  0832               	movf	___flmul@grs+3,w
  4363  070B  00A8               	movwf	??___flmul
  4364  070C  01A9               	clrf	??___flmul+1
  4365  070D  01AA               	clrf	??___flmul+2
  4366  070E  01AB               	clrf	??___flmul+3
  4367  070F  0828               	movf	??___flmul,w
  4368  0710  07B4               	addwf	___flmul@prod,f
  4369  0711  0829               	movf	??___flmul+1,w
  4370  0712  3DB5               	addwfc	___flmul@prod+1,f
  4371  0713  082A               	movf	??___flmul+2,w
  4372  0714  3DB6               	addwfc	___flmul@prod+2,f
  4373  0715  082B               	movf	??___flmul+3,w
  4374  0716  3DB7               	addwfc	___flmul@prod+3,f
  4375  0717  3008               	movlw	8
  4376  0718                     u3045:
  4377  0718  35AF               	lslf	___flmul@grs,f
  4378  0719  0DB0               	rlf	___flmul@grs+1,f
  4379  071A  0DB1               	rlf	___flmul@grs+2,f
  4380  071B  0DB2               	rlf	___flmul@grs+3,f
  4381  071C  0B89               	decfsz	9,f
  4382  071D  2F18               	goto	u3045
  4383  071E  0833               	movf	___flmul@bexp,w
  4384  071F  072E               	addwf	___flmul@aexp,w
  4385  0720  00A8               	movwf	??___flmul
  4386  0721  01A9               	clrf	??___flmul+1
  4387  0722  0DA9               	rlf	??___flmul+1,f
  4388  0723  0828               	movf	??___flmul,w
  4389  0724  3E82               	addlw	130
  4390  0725  00B8               	movwf	___flmul@temp
  4391  0726  30FF               	movlw	255
  4392  0727  3D29               	addwfc	??___flmul+1,w
  4393  0728  00B9               	movwf	___flmul@temp+1
  4394  0729                     l2704:
  4395  0729  1BB6               	btfsc	___flmul@prod+2,7
  4396  072A  2F40               	goto	l2706
  4397  072B  3001               	movlw	1
  4398  072C                     u3055:
  4399  072C  35B4               	lslf	___flmul@prod,f
  4400  072D  0DB5               	rlf	___flmul@prod+1,f
  4401  072E  0DB6               	rlf	___flmul@prod+2,f
  4402  072F  0DB7               	rlf	___flmul@prod+3,f
  4403  0730  0B89               	decfsz	9,f
  4404  0731  2F2C               	goto	u3055
  4405  0732  1BB2               	btfsc	___flmul@grs+3,7
  4406  0733  1434               	bsf	___flmul@prod,0
  4407  0734  3001               	movlw	1
  4408  0735                     u3075:
  4409  0735  35AF               	lslf	___flmul@grs,f
  4410  0736  0DB0               	rlf	___flmul@grs+1,f
  4411  0737  0DB1               	rlf	___flmul@grs+2,f
  4412  0738  0DB2               	rlf	___flmul@grs+3,f
  4413  0739  0B89               	decfsz	9,f
  4414  073A  2F35               	goto	u3075
  4415  073B  30FF               	movlw	255
  4416  073C  07B8               	addwf	___flmul@temp,f
  4417  073D  30FF               	movlw	255
  4418  073E  3DB9               	addwfc	___flmul@temp+1,f
  4419  073F  2F29               	goto	l2704
  4420  0740                     l2706:
  4421  0740  01AE               	clrf	___flmul@aexp
  4422  0741  1FB2               	btfss	___flmul@grs+3,7
  4423  0742  2F59               	goto	l2716
  4424  0743  30FF               	movlw	255
  4425  0744  052F               	andwf	___flmul@grs,w
  4426  0745  00A8               	movwf	??___flmul
  4427  0746  30FF               	movlw	255
  4428  0747  0530               	andwf	___flmul@grs+1,w
  4429  0748  00A9               	movwf	??___flmul+1
  4430  0749  30FF               	movlw	255
  4431  074A  0531               	andwf	___flmul@grs+2,w
  4432  074B  00AA               	movwf	??___flmul+2
  4433  074C  307F               	movlw	127
  4434  074D  0532               	andwf	___flmul@grs+3,w
  4435  074E  00AB               	movwf	??___flmul+3
  4436  074F  082B               	movf	??___flmul+3,w
  4437  0750  042A               	iorwf	??___flmul+2,w
  4438  0751  0429               	iorwf	??___flmul+1,w
  4439  0752  0428               	iorwf	??___flmul,w
  4440  0753  1903               	skipnz
  4441  0754  1834               	btfsc	___flmul@prod,0
  4442  0755  2F57               	goto	l2712
  4443  0756  2F59               	goto	l2716
  4444  0757                     l2712:
  4445  0757  01AE               	clrf	___flmul@aexp
  4446  0758  0AAE               	incf	___flmul@aexp,f
  4447  0759                     l2716:
  4448  0759  082E               	movf	___flmul@aexp,w
  4449  075A  1903               	btfsc	3,2
  4450  075B  2F82               	goto	l2726
  4451  075C  3001               	movlw	1
  4452  075D  07B4               	addwf	___flmul@prod,f
  4453  075E  3000               	movlw	0
  4454  075F  3DB5               	addwfc	___flmul@prod+1,f
  4455  0760  3000               	movlw	0
  4456  0761  3DB6               	addwfc	___flmul@prod+2,f
  4457  0762  3000               	movlw	0
  4458  0763  3DB7               	addwfc	___flmul@prod+3,f
  4459  0764  1C37               	btfss	___flmul@prod+3,0
  4460  0765  2F82               	goto	l2726
  4461  0766  0834               	movf	___flmul@prod,w
  4462  0767  00A8               	movwf	??___flmul
  4463  0768  0835               	movf	___flmul@prod+1,w
  4464  0769  00A9               	movwf	??___flmul+1
  4465  076A  0836               	movf	___flmul@prod+2,w
  4466  076B  00AA               	movwf	??___flmul+2
  4467  076C  0837               	movf	___flmul@prod+3,w
  4468  076D  00AB               	movwf	??___flmul+3
  4469  076E  3001               	movlw	1
  4470  076F  00AC               	movwf	??___flmul+4
  4471  0770                     u3145:
  4472  0770  37AB               	asrf	??___flmul+3,f
  4473  0771  0CAA               	rrf	??___flmul+2,f
  4474  0772  0CA9               	rrf	??___flmul+1,f
  4475  0773  0CA8               	rrf	??___flmul,f
  4476  0774  0BAC               	decfsz	??___flmul+4,f
  4477  0775  2F70               	goto	u3145
  4478  0776  082B               	movf	??___flmul+3,w
  4479  0777  00B7               	movwf	___flmul@prod+3
  4480  0778  082A               	movf	??___flmul+2,w
  4481  0779  00B6               	movwf	___flmul@prod+2
  4482  077A  0829               	movf	??___flmul+1,w
  4483  077B  00B5               	movwf	___flmul@prod+1
  4484  077C  0828               	movf	??___flmul,w
  4485  077D  00B4               	movwf	___flmul@prod
  4486  077E  3001               	movlw	1
  4487  077F  07B8               	addwf	___flmul@temp,f
  4488  0780  3000               	movlw	0
  4489  0781  3DB9               	addwfc	___flmul@temp+1,f
  4490  0782                     l2726:
  4491  0782  0839               	movf	___flmul@temp+1,w
  4492  0783  3A80               	xorlw	128
  4493  0784  00A8               	movwf	??___flmul
  4494  0785  3080               	movlw	128
  4495  0786  0228               	subwf	??___flmul,w
  4496  0787  1D03               	skipz
  4497  0788  2F8B               	goto	u3155
  4498  0789  30FF               	movlw	255
  4499  078A  0238               	subwf	___flmul@temp,w
  4500  078B                     u3155:
  4501  078B  1C03               	skipc
  4502  078C  2F97               	goto	l2730
  4503  078D  307F               	movlw	127
  4504  078E  0020               	movlb	0	; select bank0
  4505  078F  00B7               	movwf	___flmul@prod+3
  4506  0790  3080               	movlw	128
  4507  0791  00B6               	movwf	___flmul@prod+2
  4508  0792  3000               	movlw	0
  4509  0793  00B5               	movwf	___flmul@prod+1
  4510  0794  3000               	movlw	0
  4511  0795  00B4               	movwf	___flmul@prod
  4512  0796  2FC1               	goto	l1007
  4513  0797                     l2730:
  4514  0797  0020               	movlb	0	; select bank0
  4515  0798  0839               	movf	___flmul@temp+1,w
  4516  0799  3A80               	xorlw	128
  4517  079A  00A8               	movwf	??___flmul
  4518  079B  3080               	movlw	128
  4519  079C  0228               	subwf	??___flmul,w
  4520  079D  1D03               	skipz
  4521  079E  2FA1               	goto	u3165
  4522  079F  3001               	movlw	1
  4523  07A0  0238               	subwf	___flmul@temp,w
  4524  07A1                     u3165:
  4525  07A1  1803               	skipnc
  4526  07A2  2FAE               	goto	l2736
  4527  07A3  3000               	movlw	0
  4528  07A4  0020               	movlb	0	; select bank0
  4529  07A5  00B7               	movwf	___flmul@prod+3
  4530  07A6  3000               	movlw	0
  4531  07A7  00B6               	movwf	___flmul@prod+2
  4532  07A8  3000               	movlw	0
  4533  07A9  00B5               	movwf	___flmul@prod+1
  4534  07AA  3000               	movlw	0
  4535  07AB  00B4               	movwf	___flmul@prod
  4536  07AC  01AD               	clrf	___flmul@sign
  4537  07AD  2FC1               	goto	l1007
  4538  07AE                     l2736:
  4539  07AE  0020               	movlb	0	; select bank0
  4540  07AF  0838               	movf	___flmul@temp,w
  4541  07B0  00A8               	movwf	??___flmul
  4542  07B1  0828               	movf	??___flmul,w
  4543  07B2  00B3               	movwf	___flmul@bexp
  4544  07B3  30FF               	movlw	255
  4545  07B4  05B4               	andwf	___flmul@prod,f
  4546  07B5  30FF               	movlw	255
  4547  07B6  05B5               	andwf	___flmul@prod+1,f
  4548  07B7  307F               	movlw	127
  4549  07B8  05B6               	andwf	___flmul@prod+2,f
  4550  07B9  3000               	movlw	0
  4551  07BA  05B7               	andwf	___flmul@prod+3,f
  4552  07BB  1833               	btfsc	___flmul@bexp,0
  4553  07BC  17B6               	bsf	___flmul@prod+2,7
  4554  07BD  3633               	lsrf	___flmul@bexp,w
  4555  07BE  00A8               	movwf	??___flmul
  4556  07BF  0828               	movf	??___flmul,w
  4557  07C0  00B7               	movwf	___flmul@prod+3
  4558  07C1                     l1007:
  4559  07C1  082D               	movf	___flmul@sign,w
  4560  07C2  00A8               	movwf	??___flmul
  4561  07C3  0828               	movf	??___flmul,w
  4562  07C4  04B7               	iorwf	___flmul@prod+3,f
  4563  07C5  0837               	movf	___flmul@prod+3,w
  4564  07C6  00A3               	movwf	?___flmul+3
  4565  07C7  0836               	movf	___flmul@prod+2,w
  4566  07C8  00A2               	movwf	?___flmul+2
  4567  07C9  0835               	movf	___flmul@prod+1,w
  4568  07CA  00A1               	movwf	?___flmul+1
  4569  07CB  0834               	movf	___flmul@prod,w
  4570  07CC  00A0               	movwf	?___flmul
  4571  07CD  0008               	return
  4572  07CE                     __end_of___flmul:
  4573                           
  4574                           	psect	text12
  4575  0B21                     __ptext12:	
  4576 ;; *************** function __Umul8_16 *****************
  4577 ;; Defined at:
  4578 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul8_16.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  multiplier      1    wreg     unsigned char 
  4581 ;;  multiplicand    1    0[COMMON] unsigned char 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  multiplier      1    8[COMMON] unsigned char 
  4584 ;;  word_mpld       2    6[COMMON] unsigned int 
  4585 ;;  product         2    4[COMMON] unsigned int 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;                  2    0[COMMON] unsigned int 
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0
  4590 ;; Tracked objects:
  4591 ;;		On entry : 1F/0
  4592 ;;		On exit  : 1F/0
  4593 ;;		Unchanged: 1F/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4595 ;;      Params:         2       0       0       0       0       0       0       0
  4596 ;;      Locals:         5       0       0       0       0       0       0       0
  4597 ;;      Temps:          2       0       0       0       0       0       0       0
  4598 ;;      Totals:         9       0       0       0       0       0       0       0
  4599 ;;Total ram usage:        9 bytes
  4600 ;; Hardware stack levels used: 1
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		___flmul
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           
  4609                           ;psect for function __Umul8_16
  4610  0B21                     __Umul8_16:
  4611                           
  4612                           ;incstack = 0
  4613                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4614                           ;__Umul8_16@multiplier stored from wreg
  4615  0B21  00F8               	movwf	__Umul8_16@multiplier
  4616  0B22  01F4               	clrf	__Umul8_16@product
  4617  0B23  01F5               	clrf	__Umul8_16@product+1
  4618  0B24  0870               	movf	__Umul8_16@multiplicand,w
  4619  0B25  00F2               	movwf	??__Umul8_16
  4620  0B26  01F3               	clrf	??__Umul8_16+1
  4621  0B27  0872               	movf	??__Umul8_16,w
  4622  0B28  00F6               	movwf	__Umul8_16@word_mpld
  4623  0B29  0873               	movf	??__Umul8_16+1,w
  4624  0B2A  00F7               	movwf	__Umul8_16@word_mpld+1
  4625  0B2B                     l2390:
  4626  0B2B  1C78               	btfss	__Umul8_16@multiplier,0
  4627  0B2C  2B31               	goto	l1014
  4628  0B2D  0876               	movf	__Umul8_16@word_mpld,w
  4629  0B2E  07F4               	addwf	__Umul8_16@product,f
  4630  0B2F  0877               	movf	__Umul8_16@word_mpld+1,w
  4631  0B30  3DF5               	addwfc	__Umul8_16@product+1,f
  4632  0B31                     l1014:
  4633  0B31  3001               	movlw	1
  4634  0B32                     u2415:
  4635  0B32  35F6               	lslf	__Umul8_16@word_mpld,f
  4636  0B33  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  4637  0B34  0B89               	decfsz	9,f
  4638  0B35  2B32               	goto	u2415
  4639  0B36  1003               	clrc
  4640  0B37  0CF8               	rrf	__Umul8_16@multiplier,f
  4641  0B38  0878               	movf	__Umul8_16@multiplier,w
  4642  0B39  1D03               	btfss	3,2
  4643  0B3A  2B2B               	goto	l2390
  4644  0B3B  0875               	movf	__Umul8_16@product+1,w
  4645  0B3C  00F1               	movwf	?__Umul8_16+1
  4646  0B3D  0874               	movf	__Umul8_16@product,w
  4647  0B3E  00F0               	movwf	?__Umul8_16
  4648  0B3F  0008               	return
  4649  0B40                     __end_of__Umul8_16:
  4650                           
  4651                           	psect	text13
  4652  0BB7                     __ptext13:	
  4653 ;; *************** function _TwoData_COM *****************
  4654 ;; Defined at:
  4655 ;;		line 155 in file "User/Fog.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;		None
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;		None
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  1    wreg      void 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 1F/0
  4666 ;;		On exit  : 1E/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4669 ;;      Params:         0       0       0       0       0       0       0       0
  4670 ;;      Locals:         0       0       0       0       0       0       0       0
  4671 ;;      Temps:          1       0       0       0       0       0       0       0
  4672 ;;      Totals:         1       0       0       0       0       0       0       0
  4673 ;;Total ram usage:        1 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 3
  4676 ;; This function calls:
  4677 ;;		_ErrInf
  4678 ;;		_GetADC
  4679 ;; This function is called by:
  4680 ;;		_T500ms_Event
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           
  4685                           ;psect for function _TwoData_COM
  4686  0BB7                     _TwoData_COM:
  4687                           
  4688                           ;User/Fog.c: 157:     AD_Cur[0] = GetADC(10);
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _TwoData_COM: [wreg+status,2+status,0+pclath+cstack]
  4692  0BB7  300A               	movlw	10
  4693  0BB8  318C  244D  318B   	fcall	_GetADC
  4694  0BBB  0876               	movf	?_GetADC+1,w
  4695  0BBC  0021               	movlb	1	; select bank1
  4696  0BBD  00A1               	movwf	(_AD_Cur+1)^(0+128)
  4697  0BBE  0875               	movf	?_GetADC,w
  4698  0BBF  00A0               	movwf	_AD_Cur^(0+128)
  4699                           
  4700                           ;User/Fog.c: 159:     if ((AD_Cur[0] < ADMin2) || (AD_Cur[0] > ADMax2))
  4701  0BC0  0855               	movf	(_ADMin2+1)^(0+128),w
  4702  0BC1  0221               	subwf	(_AD_Cur+1)^(0+128),w
  4703  0BC2  1D03               	skipz
  4704  0BC3  2BC6               	goto	u4405
  4705  0BC4  0854               	movf	_ADMin2^(0+128),w
  4706  0BC5  0220               	subwf	_AD_Cur^(0+128),w
  4707  0BC6                     u4405:
  4708  0BC6  1C03               	skipc
  4709  0BC7  2BD0               	goto	l3396
  4710  0BC8  0821               	movf	(_AD_Cur+1)^(0+128),w
  4711  0BC9  0269               	subwf	(_ADMax2+1)^(0+128),w
  4712  0BCA  1D03               	skipz
  4713  0BCB  2BCE               	goto	u4415
  4714  0BCC  0820               	movf	_AD_Cur^(0+128),w
  4715  0BCD  0268               	subwf	_ADMax2^(0+128),w
  4716  0BCE                     u4415:
  4717  0BCE  1803               	skipnc
  4718  0BCF  2BD6               	goto	l3400
  4719  0BD0                     l3396:
  4720                           
  4721                           ;User/Fog.c: 160:     {;User/Fog.c: 161:         adc_true_cnt++;
  4722  0BD0  3001               	movlw	1
  4723  0BD1  00F9               	movwf	??_TwoData_COM
  4724  0BD2  0879               	movf	??_TwoData_COM,w
  4725  0BD3  07E0               	addwf	_adc_true_cnt^(0+128),f
  4726                           
  4727                           ;User/Fog.c: 162:         adc_false_cnt = 0;
  4728  0BD4  01DF               	clrf	_adc_false_cnt^(0+128)
  4729                           
  4730                           ;User/Fog.c: 163:     }
  4731  0BD5  2BDA               	goto	l3402
  4732  0BD6                     l3400:
  4733                           
  4734                           ;User/Fog.c: 165:         adc_false_cnt++;
  4735  0BD6  3001               	movlw	1
  4736  0BD7  00F9               	movwf	??_TwoData_COM
  4737  0BD8  0879               	movf	??_TwoData_COM,w
  4738  0BD9  07DF               	addwf	_adc_false_cnt^(0+128),f
  4739  0BDA                     l3402:
  4740                           
  4741                           ;User/Fog.c: 167:     if (adc_true_cnt > 5)
  4742  0BDA  3006               	movlw	6
  4743  0BDB  0260               	subwf	_adc_true_cnt^(0+128),w
  4744  0BDC  1C03               	skipc
  4745  0BDD  2BF0               	goto	l3416
  4746                           
  4747                           ;User/Fog.c: 168:     {;User/Fog.c: 169:         ErrInf();
  4748  0BDE  318A  227F         	fcall	_ErrInf
  4749                           
  4750                           ;User/Fog.c: 170:         Flg2.bits.WafterF_B7 = 1;
  4751  0BE0  0020               	movlb	0	; select bank0
  4752  0BE1  17EE               	bsf	_Flg2,7	;volatile
  4753                           
  4754                           ;User/Fog.c: 171:         hze = 6;
  4755  0BE2  3006               	movlw	6
  4756  0BE3  00F9               	movwf	??_TwoData_COM
  4757  0BE4  0879               	movf	??_TwoData_COM,w
  4758  0BE5  0021               	movlb	1	; select bank1
  4759  0BE6  00E5               	movwf	_hze^(0+128)
  4760                           
  4761                           ;User/Fog.c: 172:         NoWater = 0;
  4762  0BE7  0020               	movlb	0	; select bank0
  4763  0BE8  01ED               	clrf	_NoWater
  4764                           
  4765                           ;User/Fog.c: 173:         PWMTime_Val = 2;
  4766  0BE9  3002               	movlw	2
  4767  0BEA  00F9               	movwf	??_TwoData_COM
  4768  0BEB  0879               	movf	??_TwoData_COM,w
  4769  0BEC  0021               	movlb	1	; select bank1
  4770  0BED  00EA               	movwf	_PWMTime_Val^(0+128)
  4771                           
  4772                           ;User/Fog.c: 174:         PWMTime = 0;
  4773  0BEE  01E4               	clrf	_PWMTime^(0+128)
  4774                           
  4775                           ;User/Fog.c: 175:     }
  4776  0BEF  0008               	return
  4777  0BF0                     l3416:
  4778  0BF0  3004               	movlw	4
  4779  0BF1  025F               	subwf	_adc_false_cnt^(0+128),w
  4780  0BF2  1C03               	skipc
  4781  0BF3  0008               	return
  4782                           
  4783                           ;User/Fog.c: 178:     {;User/Fog.c: 179:         NoWater = 0;
  4784  0BF4  0020               	movlb	0	; select bank0
  4785  0BF5  01ED               	clrf	_NoWater
  4786                           
  4787                           ;User/Fog.c: 180:         PWMTime_Val = 2;
  4788  0BF6  3002               	movlw	2
  4789  0BF7  00F9               	movwf	??_TwoData_COM
  4790  0BF8  0879               	movf	??_TwoData_COM,w
  4791  0BF9  0021               	movlb	1	; select bank1
  4792  0BFA  00EA               	movwf	_PWMTime_Val^(0+128)
  4793                           
  4794                           ;User/Fog.c: 181:         PWMTime = 0;
  4795  0BFB  01E4               	clrf	_PWMTime^(0+128)
  4796                           
  4797                           ;User/Fog.c: 182:         Flg2.bits.ADMin_B1 = 0;
  4798  0BFC  0020               	movlb	0	; select bank0
  4799  0BFD  10EE               	bcf	_Flg2,1	;volatile
  4800  0BFE  0008               	return
  4801  0BFF                     __end_of_TwoData_COM:
  4802                           
  4803                           	psect	text14
  4804  0E79                     __ptext14:	
  4805 ;; *************** function _LED_Show *****************
  4806 ;; Defined at:
  4807 ;;		line 335 in file "User/newmain.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 1F/0
  4818 ;;		On exit  : 1F/2
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4821 ;;      Params:         0       0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0       0
  4823 ;;      Temps:          2       0       0       0       0       0       0       0
  4824 ;;      Totals:         2       0       0       0       0       0       0       0
  4825 ;;Total ram usage:        2 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_T500ms_Event
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           
  4835                           ;psect for function _LED_Show
  4836  0E79                     _LED_Show:
  4837                           
  4838                           ;User/newmain.c: 337:     switch (MinS_Cnt)
  4839                           
  4840                           ;incstack = 0
  4841                           ; Regs used in _LED_Show: [wreg-fsr0h+status,2+status,0]
  4842  0E79  2F10               	goto	l2560
  4843  0E7A                     l476:	
  4844                           ;User/newmain.c: 338:     {;User/newmain.c: 339:     case 1:
  4845                           
  4846                           
  4847                           ;User/newmain.c: 340:         LATBbits.LATB6 = 0;
  4848  0E7A  0022               	movlb	2	; select bank2
  4849  0E7B  130D               	bcf	13,6	;volatile
  4850                           
  4851                           ;User/newmain.c: 341:         LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4852  0E7C  150C               	bsf	12,2	;volatile
  4853  0E7D  1D0C               	btfss	12,2	;volatile
  4854  0E7E  2E82               	goto	u2590
  4855  0E7F  0022               	movlb	2	; select bank2
  4856  0E80  140E               	bsf	14,0	;volatile
  4857  0E81  2E84               	goto	u2604
  4858  0E82                     u2590:
  4859  0E82  0022               	movlb	2	; select bank2
  4860  0E83  100E               	bcf	14,0	;volatile
  4861  0E84                     u2604:
  4862  0E84  1C0E               	btfss	14,0	;volatile
  4863  0E85  2E89               	goto	u2600
  4864  0E86  0022               	movlb	2	; select bank2
  4865  0E87  148E               	bsf	14,1	;volatile
  4866  0E88  2E8B               	goto	u2614
  4867  0E89                     u2600:
  4868  0E89  0022               	movlb	2	; select bank2
  4869  0E8A  108E               	bcf	14,1	;volatile
  4870  0E8B                     u2614:
  4871  0E8B  1C8E               	btfss	14,1	;volatile
  4872  0E8C  2E90               	goto	u2610
  4873  0E8D  0022               	movlb	2	; select bank2
  4874  0E8E  150E               	bsf	14,2	;volatile
  4875  0E8F  0008               	return
  4876  0E90                     u2610:
  4877  0E90  0022               	movlb	2	; select bank2
  4878  0E91  110E               	bcf	14,2	;volatile
  4879                           
  4880                           ;User/newmain.c: 342:         break;
  4881  0E92  0008               	return
  4882  0E93                     l478:	
  4883                           ;User/newmain.c: 343:     case 2:
  4884                           
  4885                           
  4886                           ;User/newmain.c: 344:         LATCbits.LATC2 = 0;
  4887  0E93  0022               	movlb	2	; select bank2
  4888  0E94  110E               	bcf	14,2	;volatile
  4889                           
  4890                           ;User/newmain.c: 345:         LATBbits.LATB6 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4891  0E95  150C               	bsf	12,2	;volatile
  4892  0E96  1D0C               	btfss	12,2	;volatile
  4893  0E97  2E9B               	goto	u2630
  4894  0E98  0022               	movlb	2	; select bank2
  4895  0E99  140E               	bsf	14,0	;volatile
  4896  0E9A  2E9D               	goto	u2644
  4897  0E9B                     u2630:
  4898  0E9B  0022               	movlb	2	; select bank2
  4899  0E9C  100E               	bcf	14,0	;volatile
  4900  0E9D                     u2644:
  4901  0E9D  1C0E               	btfss	14,0	;volatile
  4902  0E9E  2EA2               	goto	u2640
  4903  0E9F  0022               	movlb	2	; select bank2
  4904  0EA0  148E               	bsf	14,1	;volatile
  4905  0EA1  2EA4               	goto	u2654
  4906  0EA2                     u2640:
  4907  0EA2  0022               	movlb	2	; select bank2
  4908  0EA3  108E               	bcf	14,1	;volatile
  4909  0EA4                     u2654:
  4910  0EA4  1C8E               	btfss	14,1	;volatile
  4911  0EA5  2EA9               	goto	u2650
  4912  0EA6  0022               	movlb	2	; select bank2
  4913  0EA7  170D               	bsf	13,6	;volatile
  4914  0EA8  0008               	return
  4915  0EA9                     u2650:
  4916  0EA9  0022               	movlb	2	; select bank2
  4917  0EAA  130D               	bcf	13,6	;volatile
  4918                           
  4919                           ;User/newmain.c: 346:         break;
  4920  0EAB  0008               	return
  4921  0EAC                     l479:	
  4922                           ;User/newmain.c: 347:     case 3:
  4923                           
  4924                           
  4925                           ;User/newmain.c: 348:         LATCbits.LATC1 = 0;
  4926  0EAC  0022               	movlb	2	; select bank2
  4927  0EAD  108E               	bcf	14,1	;volatile
  4928                           
  4929                           ;User/newmain.c: 349:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  4930  0EAE  150C               	bsf	12,2	;volatile
  4931  0EAF  1D0C               	btfss	12,2	;volatile
  4932  0EB0  2EB4               	goto	u2670
  4933  0EB1  0022               	movlb	2	; select bank2
  4934  0EB2  140E               	bsf	14,0	;volatile
  4935  0EB3  2EB6               	goto	u2684
  4936  0EB4                     u2670:
  4937  0EB4  0022               	movlb	2	; select bank2
  4938  0EB5  100E               	bcf	14,0	;volatile
  4939  0EB6                     u2684:
  4940  0EB6  1C0E               	btfss	14,0	;volatile
  4941  0EB7  2EBB               	goto	u2680
  4942  0EB8  0022               	movlb	2	; select bank2
  4943  0EB9  150E               	bsf	14,2	;volatile
  4944  0EBA  2EBD               	goto	u2694
  4945  0EBB                     u2680:
  4946  0EBB  0022               	movlb	2	; select bank2
  4947  0EBC  110E               	bcf	14,2	;volatile
  4948  0EBD                     u2694:
  4949  0EBD  1D0E               	btfss	14,2	;volatile
  4950  0EBE  2EC2               	goto	u2690
  4951  0EBF  0022               	movlb	2	; select bank2
  4952  0EC0  170D               	bsf	13,6	;volatile
  4953  0EC1  0008               	return
  4954  0EC2                     u2690:
  4955  0EC2  0022               	movlb	2	; select bank2
  4956  0EC3  130D               	bcf	13,6	;volatile
  4957                           
  4958                           ;User/newmain.c: 350:         break;
  4959  0EC4  0008               	return
  4960  0EC5                     l480:	
  4961                           ;User/newmain.c: 351:     case 4:
  4962                           
  4963                           
  4964                           ;User/newmain.c: 352:         LATCbits.LATC0 = 0;
  4965  0EC5  0022               	movlb	2	; select bank2
  4966  0EC6  100E               	bcf	14,0	;volatile
  4967                           
  4968                           ;User/newmain.c: 353:         LATCbits.LATC2 = LATCbits.LATC1 = LATBbits.LATB6 = LATAbit
      +                          s.LATA2 = 1;
  4969  0EC7  150C               	bsf	12,2	;volatile
  4970  0EC8  1D0C               	btfss	12,2	;volatile
  4971  0EC9  2ECD               	goto	u2710
  4972  0ECA  0022               	movlb	2	; select bank2
  4973  0ECB  170D               	bsf	13,6	;volatile
  4974  0ECC  2ECF               	goto	u2724
  4975  0ECD                     u2710:
  4976  0ECD  0022               	movlb	2	; select bank2
  4977  0ECE  130D               	bcf	13,6	;volatile
  4978  0ECF                     u2724:
  4979  0ECF  1F0D               	btfss	13,6	;volatile
  4980  0ED0  2ED4               	goto	u2720
  4981  0ED1  0022               	movlb	2	; select bank2
  4982  0ED2  148E               	bsf	14,1	;volatile
  4983  0ED3  2ED6               	goto	u2734
  4984  0ED4                     u2720:
  4985  0ED4  0022               	movlb	2	; select bank2
  4986  0ED5  108E               	bcf	14,1	;volatile
  4987  0ED6                     u2734:
  4988  0ED6  1C8E               	btfss	14,1	;volatile
  4989  0ED7  2EDB               	goto	u2730
  4990  0ED8  0022               	movlb	2	; select bank2
  4991  0ED9  150E               	bsf	14,2	;volatile
  4992  0EDA  0008               	return
  4993  0EDB                     u2730:
  4994  0EDB  0022               	movlb	2	; select bank2
  4995  0EDC  110E               	bcf	14,2	;volatile
  4996                           
  4997                           ;User/newmain.c: 354:         break;
  4998  0EDD  0008               	return
  4999  0EDE                     l481:	
  5000                           ;User/newmain.c: 355:     case 5:
  5001                           
  5002                           
  5003                           ;User/newmain.c: 356:         LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbit
      +                          s.LATC0 = 1;
  5004  0EDE  0022               	movlb	2	; select bank2
  5005  0EDF  140E               	bsf	14,0	;volatile
  5006  0EE0  1C0E               	btfss	14,0	;volatile
  5007  0EE1  2EE5               	goto	u2750
  5008  0EE2  0022               	movlb	2	; select bank2
  5009  0EE3  148E               	bsf	14,1	;volatile
  5010  0EE4  2EE7               	goto	u2764
  5011  0EE5                     u2750:
  5012  0EE5  0022               	movlb	2	; select bank2
  5013  0EE6  108E               	bcf	14,1	;volatile
  5014  0EE7                     u2764:
  5015  0EE7  1C8E               	btfss	14,1	;volatile
  5016  0EE8  2EEC               	goto	u2760
  5017  0EE9  0022               	movlb	2	; select bank2
  5018  0EEA  150E               	bsf	14,2	;volatile
  5019  0EEB  2EEE               	goto	u2774
  5020  0EEC                     u2760:
  5021  0EEC  0022               	movlb	2	; select bank2
  5022  0EED  110E               	bcf	14,2	;volatile
  5023  0EEE                     u2774:
  5024  0EEE  1D0E               	btfss	14,2	;volatile
  5025  0EEF  2EF3               	goto	u2770
  5026  0EF0  0022               	movlb	2	; select bank2
  5027  0EF1  170D               	bsf	13,6	;volatile
  5028  0EF2  2EF5               	goto	u2784
  5029  0EF3                     u2770:
  5030  0EF3  0022               	movlb	2	; select bank2
  5031  0EF4  130D               	bcf	13,6	;volatile
  5032  0EF5                     u2784:
  5033                           
  5034                           ;User/newmain.c: 357:         LATAbits.LATA2 = 0;
  5035  0EF5  110C               	bcf	12,2	;volatile
  5036                           
  5037                           ;User/newmain.c: 358:         break;
  5038  0EF6  0008               	return
  5039  0EF7                     l482:	
  5040                           ;User/newmain.c: 359:     default:
  5041                           
  5042                           
  5043                           ;User/newmain.c: 360:         LATBbits.LATB6 = 1;
  5044  0EF7  0022               	movlb	2	; select bank2
  5045  0EF8  170D               	bsf	13,6	;volatile
  5046                           
  5047                           ;User/newmain.c: 361:         LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LATC0 = LATAbit
      +                          s.LATA2 = 1;
  5048  0EF9  150C               	bsf	12,2	;volatile
  5049  0EFA  1D0C               	btfss	12,2	;volatile
  5050  0EFB  2EFF               	goto	u2790
  5051  0EFC  0022               	movlb	2	; select bank2
  5052  0EFD  140E               	bsf	14,0	;volatile
  5053  0EFE  2F01               	goto	u2804
  5054  0EFF                     u2790:
  5055  0EFF  0022               	movlb	2	; select bank2
  5056  0F00  100E               	bcf	14,0	;volatile
  5057  0F01                     u2804:
  5058  0F01  1C0E               	btfss	14,0	;volatile
  5059  0F02  2F06               	goto	u2800
  5060  0F03  0022               	movlb	2	; select bank2
  5061  0F04  148E               	bsf	14,1	;volatile
  5062  0F05  2F08               	goto	u2814
  5063  0F06                     u2800:
  5064  0F06  0022               	movlb	2	; select bank2
  5065  0F07  108E               	bcf	14,1	;volatile
  5066  0F08                     u2814:
  5067  0F08  1C8E               	btfss	14,1	;volatile
  5068  0F09  2F0D               	goto	u2810
  5069  0F0A  0022               	movlb	2	; select bank2
  5070  0F0B  150E               	bsf	14,2	;volatile
  5071  0F0C  0008               	return
  5072  0F0D                     u2810:
  5073  0F0D  0022               	movlb	2	; select bank2
  5074  0F0E  110E               	bcf	14,2	;volatile
  5075                           
  5076                           ;User/newmain.c: 362:         break;
  5077  0F0F  0008               	return
  5078  0F10                     l2560:
  5079  0F10  0021               	movlb	1	; select bank1
  5080  0F11  0859               	movf	_MinS_Cnt^(0+128),w
  5081  0F12  00F0               	movwf	??_LED_Show
  5082  0F13  01F1               	clrf	??_LED_Show+1
  5083                           
  5084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5085                           ; Switch size 1, requested type "simple"
  5086                           ; Number of cases is 1, Range of values is 0 to 0
  5087                           ; switch strategies available:
  5088                           ; Name         Instructions Cycles
  5089                           ; simple_byte            4     3 (average)
  5090                           ; direct_byte            8     6 (fixed)
  5091                           ; jumptable            260     6 (fixed)
  5092                           ;	Chosen strategy is simple_byte
  5093  0F14  0871               	movf	??_LED_Show+1,w
  5094  0F15  3A00               	xorlw	0	; case 0
  5095  0F16  1903               	skipnz
  5096  0F17  2F19               	goto	l3834
  5097  0F18  2EF7               	goto	l482
  5098  0F19                     l3834:
  5099                           
  5100                           ; Switch size 1, requested type "simple"
  5101                           ; Number of cases is 5, Range of values is 1 to 5
  5102                           ; switch strategies available:
  5103                           ; Name         Instructions Cycles
  5104                           ; simple_byte           16     9 (average)
  5105                           ; direct_byte           19     9 (fixed)
  5106                           ; jumptable            263     9 (fixed)
  5107                           ;	Chosen strategy is simple_byte
  5108  0F19  0870               	movf	??_LED_Show,w
  5109  0F1A  3A01               	xorlw	1	; case 1
  5110  0F1B  1903               	skipnz
  5111  0F1C  2E7A               	goto	l476
  5112  0F1D  3A03               	xorlw	3	; case 2
  5113  0F1E  1903               	skipnz
  5114  0F1F  2E93               	goto	l478
  5115  0F20  3A01               	xorlw	1	; case 3
  5116  0F21  1903               	skipnz
  5117  0F22  2EAC               	goto	l479
  5118  0F23  3A07               	xorlw	7	; case 4
  5119  0F24  1903               	skipnz
  5120  0F25  2EC5               	goto	l480
  5121  0F26  3A01               	xorlw	1	; case 5
  5122  0F27  1903               	skipnz
  5123  0F28  2EDE               	goto	l481
  5124  0F29  2EF7               	goto	l482
  5125  0F2A  0008               	return
  5126  0F2B                     __end_of_LED_Show:
  5127                           
  5128                           	psect	text15
  5129  0AD2                     __ptext15:	
  5130 ;; *************** function _T1s_Event *****************
  5131 ;; Defined at:
  5132 ;;		line 293 in file "User/newmain.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 1F/0
  5143 ;;		On exit  : 1D/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5146 ;;      Params:         0       0       0       0       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_main
  5156 ;; This function uses a non-reentrant model
  5157 ;;
  5158                           
  5159                           
  5160                           ;psect for function _T1s_Event
  5161  0AD2                     _T1s_Event:
  5162                           
  5163                           ;User/newmain.c: 295:     Flg.bits.T1s_B4 = 0;
  5164                           
  5165                           ;incstack = 0
  5166                           ; Regs used in _T1s_Event: [wreg+status,2+status,0]
  5167  0AD2  126F               	bcf	_Flg,4	;volatile
  5168                           
  5169                           ;User/newmain.c: 298:     if (Flg.bits.PWON_B0 == 1)
  5170  0AD3  1C6F               	btfss	_Flg,0	;volatile
  5171  0AD4  0008               	return
  5172                           
  5173                           ;User/newmain.c: 299:     {;User/newmain.c: 300:         if ((Flg2.Flg2Byte & 0x85) != 0
      +                          )
  5174  0AD5  086E               	movf	_Flg2,w	;volatile
  5175  0AD6  3985               	andlw	133
  5176  0AD7  1903               	btfsc	3,2
  5177  0AD8  2AE6               	goto	l464
  5178                           
  5179                           ;User/newmain.c: 301:         {;User/newmain.c: 302:             LATAbits.LATA1 = 1;
  5180  0AD9  0022               	movlb	2	; select bank2
  5181  0ADA  148C               	bsf	12,1	;volatile
  5182                           
  5183                           ;User/newmain.c: 303:             LATAbits.LATA5 = !LATAbits.LATA5;
  5184  0ADB  1003               	clrc
  5185  0ADC  1E8C               	btfss	12,5	;volatile
  5186  0ADD  1403               	setc
  5187  0ADE  1C03               	btfss	3,0
  5188  0ADF  2AE3               	goto	u3750
  5189  0AE0  0022               	movlb	2	; select bank2
  5190  0AE1  168C               	bsf	12,5	;volatile
  5191  0AE2  0008               	return
  5192  0AE3                     u3750:
  5193  0AE3  0022               	movlb	2	; select bank2
  5194  0AE4  128C               	bcf	12,5	;volatile
  5195                           
  5196                           ;User/newmain.c: 304:         }
  5197  0AE5  0008               	return
  5198  0AE6                     l464:	
  5199                           ;User/newmain.c: 305:         else
  5200                           
  5201                           
  5202                           ;User/newmain.c: 306:         {;User/newmain.c: 307:             LATAbits.LATA5 = 1;
  5203  0AE6  0022               	movlb	2	; select bank2
  5204  0AE7  168C               	bsf	12,5	;volatile
  5205                           
  5206                           ;User/newmain.c: 308:             LATAbits.LATA1 = 0;
  5207  0AE8  108C               	bcf	12,1	;volatile
  5208  0AE9  0008               	return
  5209  0AEA                     __end_of_T1s_Event:
  5210                           
  5211                           	psect	text16
  5212  0A72                     __ptext16:	
  5213 ;; *************** function _T100ms_Event *****************
  5214 ;; Defined at:
  5215 ;;		line 201 in file "User/newmain.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		None
  5224 ;; Tracked objects:
  5225 ;;		On entry : 1F/0
  5226 ;;		On exit  : 1F/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5229 ;;      Params:         0       0       0       0       0       0       0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0
  5232 ;;      Totals:         0       0       0       0       0       0       0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           
  5243                           ;psect for function _T100ms_Event
  5244  0A72                     _T100ms_Event:
  5245                           
  5246                           ;User/newmain.c: 203:     Flg.bits.T100ms_B2 = 0;
  5247                           
  5248                           ;incstack = 0
  5249                           ; Regs used in _T100ms_Event: []
  5250  0A72  116F               	bcf	_Flg,2	;volatile
  5251  0A73  0008               	return
  5252  0A74                     __end_of_T100ms_Event:
  5253                           
  5254                           	psect	text17
  5255  003A                     __ptext17:	
  5256 ;; *************** function _ScanF *****************
  5257 ;; Defined at:
  5258 ;;		line 57 in file "User/Fog.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  j1              1    9[COMMON] unsigned char 
  5263 ;;  j               1    0        unsigned char 
  5264 ;;  i               1    0        unsigned char 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : B1F/0
  5271 ;;		On exit  : 1F/1
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5274 ;;      Params:         0       0       0       0       0       0       0       0
  5275 ;;      Locals:         1       0       0       0       0       0       0       0
  5276 ;;      Temps:          0       6       0       0       0       0       0       0
  5277 ;;      Totals:         1       6       0       0       0       0       0       0
  5278 ;;Total ram usage:        7 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 2
  5281 ;; This function calls:
  5282 ;;		_GetADC
  5283 ;;		_PWMOFF
  5284 ;;		_PWMON
  5285 ;; This function is called by:
  5286 ;;		_main
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           
  5291                           ;psect for function _ScanF
  5292  003A                     _ScanF:
  5293                           
  5294                           ;User/Fog.c: 59:     ubyte i, j, j1;;User/Fog.c: 61:     getcnt = 0;
  5295                           
  5296                           ;incstack = 0
  5297                           ; Regs used in _ScanF: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5298  003A  0021               	movlb	1	; select bank1
  5299  003B  01E2               	clrf	_getcnt^(0+128)
  5300                           
  5301                           ;User/Fog.c: 62:     CurMax = 0;
  5302  003C  01D2               	clrf	_CurMax^(0+128)
  5303  003D  01D3               	clrf	(_CurMax+1)^(0+128)
  5304                           
  5305                           ;User/Fog.c: 64:     bFors_High = LATCbits.LATC6;
  5306  003E  3000               	movlw	0
  5307  003F  0022               	movlb	2	; select bank2
  5308  0040  1B0E               	btfsc	14,6	;volatile
  5309  0041  3001               	movlw	1
  5310  0042  0021               	movlb	1	; select bank1
  5311  0043  00E1               	movwf	_bFors_High^(0+128)
  5312                           
  5313                           ;User/Fog.c: 65:     LATCbits.LATC6 = 0;
  5314  0044  0022               	movlb	2	; select bank2
  5315  0045  130E               	bcf	14,6	;volatile
  5316  0046                     l69:	
  5317                           ;User/Fog.c: 68:         ;
  5318                           
  5319                           
  5320                           ;User/Fog.c: 67:     while (Flg.bits.T4ms_B7 == 0)
  5321  0046  0020               	movlb	0	; select bank0
  5322  0047  1FEF               	btfss	_Flg,7	;volatile
  5323  0048  2846               	goto	l69
  5324                           
  5325                           ;User/Fog.c: 69:     Flg.bits.T4ms_B7 = 0;
  5326  0049  13EF               	bcf	_Flg,7	;volatile
  5327  004A                     l72:	
  5328                           ;User/Fog.c: 71:         ;
  5329                           
  5330                           
  5331                           ;User/Fog.c: 70:     while (Flg.bits.T4ms_B7 == 0)
  5332  004A  1FEF               	btfss	_Flg,7	;volatile
  5333  004B  284A               	goto	l72
  5334                           
  5335                           ;User/Fog.c: 72:     Flg.bits.T4ms_B7 = 0;
  5336  004C  13EF               	bcf	_Flg,7	;volatile
  5337                           
  5338                           ;User/Fog.c: 75:     for (frq = 0; frq < 44; frq++)
  5339  004D  01EB               	clrf	_frq
  5340  004E                     l3438:
  5341                           
  5342                           ;User/Fog.c: 76:     {;User/Fog.c: 77:         PWM3PRH = PWMT[frq] >> 8;
  5343  004E  086B               	movf	_frq,w
  5344  004F  00A6               	movwf	??_ScanF
  5345  0050  01A7               	clrf	??_ScanF+1
  5346  0051  35A6               	lslf	??_ScanF,f
  5347  0052  0DA7               	rlf	??_ScanF+1,f
  5348  0053  3000               	movlw	low (_PWMT| (0+32768))
  5349  0054  0726               	addwf	??_ScanF,w
  5350  0055  0084               	movwf	4
  5351  0056  3088               	movlw	high (_PWMT| (0+32768))
  5352  0057  3D27               	addwfc	??_ScanF+1,w
  5353  0058  0085               	movwf	5
  5354  0059  3F00               	moviw [0]fsr0
  5355  005A  00A8               	movwf	??_ScanF+2
  5356  005B  3F01               	moviw [1]fsr0
  5357  005C  00A9               	movwf	??_ScanF+3
  5358  005D  0829               	movf	??_ScanF+3,w
  5359  005E  003B               	movlb	27	; select bank27
  5360  005F  00B6               	movwf	54	;volatile
  5361                           
  5362                           ;User/Fog.c: 78:         PWM3PRL = PWMT[frq] & 0xFF;
  5363  0060  0020               	movlb	0	; select bank0
  5364  0061  086B               	movf	_frq,w
  5365  0062  00A6               	movwf	??_ScanF
  5366  0063  01A7               	clrf	??_ScanF+1
  5367  0064  35A6               	lslf	??_ScanF,f
  5368  0065  0DA7               	rlf	??_ScanF+1,f
  5369  0066  3000               	movlw	low (_PWMT| (0+32768))
  5370  0067  0726               	addwf	??_ScanF,w
  5371  0068  0084               	movwf	4
  5372  0069  3088               	movlw	high (_PWMT| (0+32768))
  5373  006A  3D27               	addwfc	??_ScanF+1,w
  5374  006B  0085               	movwf	5
  5375  006C  0800               	movf	0,w	;code access
  5376  006D  003B               	movlb	27	; select bank27
  5377  006E  00B5               	movwf	53	;volatile
  5378                           
  5379                           ;User/Fog.c: 79:         PWM3DCH = 0;
  5380  006F  01B4               	clrf	52	;volatile
  5381                           
  5382                           ;User/Fog.c: 80:         PWM3DCL = (PWMT[frq] >> 1) + 1;
  5383  0070  0020               	movlb	0	; select bank0
  5384  0071  086B               	movf	_frq,w
  5385  0072  00A6               	movwf	??_ScanF
  5386  0073  01A7               	clrf	??_ScanF+1
  5387  0074  35A6               	lslf	??_ScanF,f
  5388  0075  0DA7               	rlf	??_ScanF+1,f
  5389  0076  3000               	movlw	low (_PWMT| (0+32768))
  5390  0077  0726               	addwf	??_ScanF,w
  5391  0078  0084               	movwf	4
  5392  0079  3088               	movlw	high (_PWMT| (0+32768))
  5393  007A  3D27               	addwfc	??_ScanF+1,w
  5394  007B  0085               	movwf	5
  5395  007C  3F00               	moviw [0]fsr0
  5396  007D  00A8               	movwf	??_ScanF+2
  5397  007E  3F01               	moviw [1]fsr0
  5398  007F  00A9               	movwf	??_ScanF+3
  5399  0080  36A9               	lsrf	??_ScanF+3,f
  5400  0081  0CA8               	rrf	??_ScanF+2,f
  5401  0082  0828               	movf	??_ScanF+2,w
  5402  0083  3E01               	addlw	1
  5403  0084  003B               	movlb	27	; select bank27
  5404  0085  00B3               	movwf	51	;volatile
  5405                           
  5406                           ;User/Fog.c: 81:         PWMON();
  5407  0086  318A  2279  3180   	fcall	_PWMON
  5408                           
  5409                           ;User/Fog.c: 84:         Flg.bits.T4ms_B7 = 0;
  5410  0089  0020               	movlb	0	; select bank0
  5411  008A  13EF               	bcf	_Flg,7	;volatile
  5412  008B                     l77:	
  5413                           ;User/Fog.c: 86:             ;
  5414                           
  5415                           
  5416                           ;User/Fog.c: 85:         while (Flg.bits.T4ms_B7 == 0)
  5417  008B  1FEF               	btfss	_Flg,7	;volatile
  5418  008C  288B               	goto	l77
  5419                           
  5420                           ;User/Fog.c: 87:         Flg.bits.T4ms_B7 = 0;
  5421  008D  13EF               	bcf	_Flg,7	;volatile
  5422                           
  5423                           ;User/Fog.c: 89:         for (j1 = 0; j1 < ScanWait; j1++)
  5424  008E  01F9               	clrf	ScanF@j1
  5425  008F                     l3452:
  5426  008F  086C               	movf	_ScanWait,w	;volatile
  5427  0090  0279               	subwf	ScanF@j1,w
  5428  0091  1803               	btfsc	3,0
  5429  0092  2899               	goto	l3454
  5430                           
  5431                           ;User/Fog.c: 90:         {;User/Fog.c: 92:             Flg.bits.T4ms_B7 = 0;
  5432  0093  13EF               	bcf	_Flg,7	;volatile
  5433                           
  5434                           ;User/Fog.c: 93:         }
  5435  0094  3001               	movlw	1
  5436  0095  00A6               	movwf	??_ScanF
  5437  0096  0826               	movf	??_ScanF,w
  5438  0097  07F9               	addwf	ScanF@j1,f
  5439  0098  288F               	goto	l3452
  5440  0099                     l3454:
  5441                           
  5442                           ;User/Fog.c: 95:         CTA[frq] = GetADC(10);
  5443  0099  300A               	movlw	10
  5444  009A  318C  244D  3180   	fcall	_GetADC
  5445  009D  086B               	movf	_frq,w
  5446  009E  00A6               	movwf	??_ScanF
  5447  009F  01A7               	clrf	??_ScanF+1
  5448  00A0  35A6               	lslf	??_ScanF,f
  5449  00A1  0DA7               	rlf	??_ScanF+1,f
  5450  00A2  3098               	movlw	152
  5451  00A3  00A8               	movwf	??_ScanF+2
  5452  00A4  3021               	movlw	33
  5453  00A5  00A9               	movwf	??_ScanF+3
  5454  00A6  0826               	movf	??_ScanF,w
  5455  00A7  0728               	addwf	??_ScanF+2,w
  5456  00A8  0086               	movwf	6
  5457  00A9  0827               	movf	??_ScanF+1,w
  5458  00AA  3D29               	addwfc	??_ScanF+3,w
  5459  00AB  0087               	movwf	7
  5460  00AC  0875               	movf	?_GetADC,w
  5461  00AD  3FC0               	movwi [0]fsr1
  5462  00AE  0876               	movf	?_GetADC+1,w
  5463  00AF  3FC1               	movwi [1]fsr1
  5464                           
  5465                           ;User/Fog.c: 97:         if (CTA[frq] > CurMax)
  5466  00B0  086B               	movf	_frq,w
  5467  00B1  00A6               	movwf	??_ScanF
  5468  00B2  01A7               	clrf	??_ScanF+1
  5469  00B3  35A6               	lslf	??_ScanF,f
  5470  00B4  0DA7               	rlf	??_ScanF+1,f
  5471  00B5  3098               	movlw	152
  5472  00B6  00A8               	movwf	??_ScanF+2
  5473  00B7  3021               	movlw	33
  5474  00B8  00A9               	movwf	??_ScanF+3
  5475  00B9  0826               	movf	??_ScanF,w
  5476  00BA  0728               	addwf	??_ScanF+2,w
  5477  00BB  0086               	movwf	6
  5478  00BC  0827               	movf	??_ScanF+1,w
  5479  00BD  3D29               	addwfc	??_ScanF+3,w
  5480  00BE  0087               	movwf	7
  5481  00BF  3F40               	moviw [0]fsr1
  5482  00C0  00AA               	movwf	??_ScanF+4
  5483  00C1  3F41               	moviw [1]fsr1
  5484  00C2  00AB               	movwf	??_ScanF+5
  5485  00C3  082B               	movf	??_ScanF+5,w
  5486  00C4  0021               	movlb	1	; select bank1
  5487  00C5  0253               	subwf	(_CurMax+1)^(0+128),w
  5488  00C6  1D03               	skipz
  5489  00C7  28CC               	goto	u4485
  5490  00C8  0020               	movlb	0	; select bank0
  5491  00C9  082A               	movf	??_ScanF+4,w
  5492  00CA  0021               	movlb	1	; select bank1
  5493  00CB  0252               	subwf	_CurMax^(0+128),w
  5494  00CC                     u4485:
  5495  00CC  1803               	skipnc
  5496  00CD  28E3               	goto	l3460
  5497                           
  5498                           ;User/Fog.c: 98:             CurMax = CTA[frq];
  5499  00CE  0020               	movlb	0	; select bank0
  5500  00CF  086B               	movf	_frq,w
  5501  00D0  00A6               	movwf	??_ScanF
  5502  00D1  01A7               	clrf	??_ScanF+1
  5503  00D2  35A6               	lslf	??_ScanF,f
  5504  00D3  0DA7               	rlf	??_ScanF+1,f
  5505  00D4  3098               	movlw	152
  5506  00D5  00A8               	movwf	??_ScanF+2
  5507  00D6  3021               	movlw	33
  5508  00D7  00A9               	movwf	??_ScanF+3
  5509  00D8  0826               	movf	??_ScanF,w
  5510  00D9  0728               	addwf	??_ScanF+2,w
  5511  00DA  0086               	movwf	6
  5512  00DB  0827               	movf	??_ScanF+1,w
  5513  00DC  3D29               	addwfc	??_ScanF+3,w
  5514  00DD  0087               	movwf	7
  5515  00DE  3F40               	moviw [0]fsr1
  5516  00DF  0021               	movlb	1	; select bank1
  5517  00E0  00D2               	movwf	_CurMax^(0+128)
  5518  00E1  3F41               	moviw [1]fsr1
  5519  00E2  00D3               	movwf	(_CurMax+1)^(0+128)
  5520  00E3                     l3460:
  5521                           
  5522                           ;User/Fog.c: 99:     }
  5523  00E3  3001               	movlw	1
  5524  00E4  0020               	movlb	0	; select bank0
  5525  00E5  00A6               	movwf	??_ScanF
  5526  00E6  0826               	movf	??_ScanF,w
  5527  00E7  07EB               	addwf	_frq,f
  5528  00E8  302C               	movlw	44
  5529  00E9  026B               	subwf	_frq,w
  5530  00EA  1C03               	skipc
  5531  00EB  284E               	goto	l3438
  5532                           
  5533                           ;User/Fog.c: 100:     PWMOFF();
  5534  00EC  3180  2004  3180   	fcall	_PWMOFF
  5535                           
  5536                           ;User/Fog.c: 101:     __nop();
  5537  00EF  0000               	nop
  5538                           
  5539                           ;User/Fog.c: 102:     __nop();
  5540  00F0  0000               	nop
  5541                           
  5542                           ;User/Fog.c: 103:     __nop();
  5543  00F1  0000               	nop
  5544                           
  5545                           ;User/Fog.c: 105:     for (frq = 0; frq < 44; frq++)
  5546  00F2  0020               	movlb	0	; select bank0
  5547  00F3  01EB               	clrf	_frq
  5548  00F4                     l3478:
  5549                           
  5550                           ;User/Fog.c: 107:         if ((CTA[frq] < CurMax) && (CTA[frq] > CurMax2))
  5551  00F4  086B               	movf	_frq,w
  5552  00F5  00A6               	movwf	??_ScanF
  5553  00F6  01A7               	clrf	??_ScanF+1
  5554  00F7  35A6               	lslf	??_ScanF,f
  5555  00F8  0DA7               	rlf	??_ScanF+1,f
  5556  00F9  3098               	movlw	152
  5557  00FA  00A8               	movwf	??_ScanF+2
  5558  00FB  3021               	movlw	33
  5559  00FC  00A9               	movwf	??_ScanF+3
  5560  00FD  0826               	movf	??_ScanF,w
  5561  00FE  0728               	addwf	??_ScanF+2,w
  5562  00FF  0086               	movwf	6
  5563  0100  0827               	movf	??_ScanF+1,w
  5564  0101  3D29               	addwfc	??_ScanF+3,w
  5565  0102  0087               	movwf	7
  5566  0103  3F40               	moviw [0]fsr1
  5567  0104  00AA               	movwf	??_ScanF+4
  5568  0105  3F41               	moviw [1]fsr1
  5569  0106  00AB               	movwf	??_ScanF+5
  5570  0107  0021               	movlb	1	; select bank1
  5571  0108  0853               	movf	(_CurMax+1)^(0+128),w
  5572  0109  0020               	movlb	0	; select bank0
  5573  010A  022B               	subwf	??_ScanF+5,w
  5574  010B  1D03               	skipz
  5575  010C  2911               	goto	u4505
  5576  010D  0021               	movlb	1	; select bank1
  5577  010E  0852               	movf	_CurMax^(0+128),w
  5578  010F  0020               	movlb	0	; select bank0
  5579  0110  022A               	subwf	??_ScanF+4,w
  5580  0111                     u4505:
  5581  0111  1803               	skipnc
  5582  0112  2946               	goto	l3484
  5583  0113  086B               	movf	_frq,w
  5584  0114  00A6               	movwf	??_ScanF
  5585  0115  01A7               	clrf	??_ScanF+1
  5586  0116  35A6               	lslf	??_ScanF,f
  5587  0117  0DA7               	rlf	??_ScanF+1,f
  5588  0118  3098               	movlw	152
  5589  0119  00A8               	movwf	??_ScanF+2
  5590  011A  3021               	movlw	33
  5591  011B  00A9               	movwf	??_ScanF+3
  5592  011C  0826               	movf	??_ScanF,w
  5593  011D  0728               	addwf	??_ScanF+2,w
  5594  011E  0086               	movwf	6
  5595  011F  0827               	movf	??_ScanF+1,w
  5596  0120  3D29               	addwfc	??_ScanF+3,w
  5597  0121  0087               	movwf	7
  5598  0122  3F40               	moviw [0]fsr1
  5599  0123  00AA               	movwf	??_ScanF+4
  5600  0124  3F41               	moviw [1]fsr1
  5601  0125  00AB               	movwf	??_ScanF+5
  5602  0126  082B               	movf	??_ScanF+5,w
  5603  0127  0021               	movlb	1	; select bank1
  5604  0128  0251               	subwf	(_CurMax2+1)^(0+128),w
  5605  0129  1D03               	skipz
  5606  012A  292F               	goto	u4515
  5607  012B  0020               	movlb	0	; select bank0
  5608  012C  082A               	movf	??_ScanF+4,w
  5609  012D  0021               	movlb	1	; select bank1
  5610  012E  0250               	subwf	_CurMax2^(0+128),w
  5611  012F                     u4515:
  5612  012F  1803               	skipnc
  5613  0130  2946               	goto	l3484
  5614                           
  5615                           ;User/Fog.c: 108:             CurMax2 = CTA[frq];
  5616  0131  0020               	movlb	0	; select bank0
  5617  0132  086B               	movf	_frq,w
  5618  0133  00A6               	movwf	??_ScanF
  5619  0134  01A7               	clrf	??_ScanF+1
  5620  0135  35A6               	lslf	??_ScanF,f
  5621  0136  0DA7               	rlf	??_ScanF+1,f
  5622  0137  3098               	movlw	152
  5623  0138  00A8               	movwf	??_ScanF+2
  5624  0139  3021               	movlw	33
  5625  013A  00A9               	movwf	??_ScanF+3
  5626  013B  0826               	movf	??_ScanF,w
  5627  013C  0728               	addwf	??_ScanF+2,w
  5628  013D  0086               	movwf	6
  5629  013E  0827               	movf	??_ScanF+1,w
  5630  013F  3D29               	addwfc	??_ScanF+3,w
  5631  0140  0087               	movwf	7
  5632  0141  3F40               	moviw [0]fsr1
  5633  0142  0021               	movlb	1	; select bank1
  5634  0143  00D0               	movwf	_CurMax2^(0+128)
  5635  0144  3F41               	moviw [1]fsr1
  5636  0145  00D1               	movwf	(_CurMax2+1)^(0+128)
  5637  0146                     l3484:
  5638  0146  3001               	movlw	1
  5639  0147  0020               	movlb	0	; select bank0
  5640  0148  00A6               	movwf	??_ScanF
  5641  0149  0826               	movf	??_ScanF,w
  5642  014A  07EB               	addwf	_frq,f
  5643  014B  302C               	movlw	44
  5644  014C  026B               	subwf	_frq,w
  5645  014D  1C03               	skipc
  5646  014E  28F4               	goto	l3478
  5647                           
  5648                           ;User/Fog.c: 109:     __nop();
  5649  014F  0000               	nop
  5650                           
  5651                           ;User/Fog.c: 110:     __nop();
  5652  0150  0000               	nop
  5653                           
  5654                           ;User/Fog.c: 111:     for (frq = 0; frq < 44; frq++)
  5655  0151  0020               	movlb	0	; select bank0
  5656  0152  01EB               	clrf	_frq
  5657  0153                     l3494:
  5658                           
  5659                           ;User/Fog.c: 112:         if (CTA[frq] == CurMax2)
  5660  0153  086B               	movf	_frq,w
  5661  0154  00A6               	movwf	??_ScanF
  5662  0155  01A7               	clrf	??_ScanF+1
  5663  0156  35A6               	lslf	??_ScanF,f
  5664  0157  0DA7               	rlf	??_ScanF+1,f
  5665  0158  3098               	movlw	152
  5666  0159  00A8               	movwf	??_ScanF+2
  5667  015A  3021               	movlw	33
  5668  015B  00A9               	movwf	??_ScanF+3
  5669  015C  0826               	movf	??_ScanF,w
  5670  015D  0728               	addwf	??_ScanF+2,w
  5671  015E  0086               	movwf	6
  5672  015F  0827               	movf	??_ScanF+1,w
  5673  0160  3D29               	addwfc	??_ScanF+3,w
  5674  0161  0087               	movwf	7
  5675  0162  3F40               	moviw [0]fsr1
  5676  0163  00AA               	movwf	??_ScanF+4
  5677  0164  3F41               	moviw [1]fsr1
  5678  0165  00AB               	movwf	??_ScanF+5
  5679  0166  0021               	movlb	1	; select bank1
  5680  0167  0851               	movf	(_CurMax2+1)^(0+128),w
  5681  0168  0020               	movlb	0	; select bank0
  5682  0169  062B               	xorwf	??_ScanF+5,w
  5683  016A  1D03               	skipz
  5684  016B  2970               	goto	u4535
  5685  016C  0021               	movlb	1	; select bank1
  5686  016D  0850               	movf	_CurMax2^(0+128),w
  5687  016E  0020               	movlb	0	; select bank0
  5688  016F  062A               	xorwf	??_ScanF+4,w
  5689  0170                     u4535:
  5690  0170  1903               	btfsc	3,2
  5691  0171  297A               	goto	l3502
  5692  0172  3001               	movlw	1
  5693  0173  00A6               	movwf	??_ScanF
  5694  0174  0826               	movf	??_ScanF,w
  5695  0175  07EB               	addwf	_frq,f
  5696  0176  302C               	movlw	44
  5697  0177  026B               	subwf	_frq,w
  5698  0178  1C03               	skipc
  5699  0179  2953               	goto	l3494
  5700  017A                     l3502:
  5701                           
  5702                           ;User/Fog.c: 116:     frq -= 5;
  5703  017A  3005               	movlw	5
  5704  017B  02EB               	subwf	_frq,f
  5705                           
  5706                           ;User/Fog.c: 117:     PWM3PRH = PWMT[frq] >> 8;
  5707  017C  086B               	movf	_frq,w
  5708  017D  00A6               	movwf	??_ScanF
  5709  017E  01A7               	clrf	??_ScanF+1
  5710  017F  35A6               	lslf	??_ScanF,f
  5711  0180  0DA7               	rlf	??_ScanF+1,f
  5712  0181  3000               	movlw	low (_PWMT| (0+32768))
  5713  0182  0726               	addwf	??_ScanF,w
  5714  0183  0084               	movwf	4
  5715  0184  3088               	movlw	high (_PWMT| (0+32768))
  5716  0185  3D27               	addwfc	??_ScanF+1,w
  5717  0186  0085               	movwf	5
  5718  0187  3F00               	moviw [0]fsr0
  5719  0188  00A8               	movwf	??_ScanF+2
  5720  0189  3F01               	moviw [1]fsr0
  5721  018A  00A9               	movwf	??_ScanF+3
  5722  018B  0829               	movf	??_ScanF+3,w
  5723  018C  003B               	movlb	27	; select bank27
  5724  018D  00B6               	movwf	54	;volatile
  5725                           
  5726                           ;User/Fog.c: 118:     PWM3PRL = PWMT[frq] & 0xFF;
  5727  018E  0020               	movlb	0	; select bank0
  5728  018F  086B               	movf	_frq,w
  5729  0190  00A6               	movwf	??_ScanF
  5730  0191  01A7               	clrf	??_ScanF+1
  5731  0192  35A6               	lslf	??_ScanF,f
  5732  0193  0DA7               	rlf	??_ScanF+1,f
  5733  0194  3000               	movlw	low (_PWMT| (0+32768))
  5734  0195  0726               	addwf	??_ScanF,w
  5735  0196  0084               	movwf	4
  5736  0197  3088               	movlw	high (_PWMT| (0+32768))
  5737  0198  3D27               	addwfc	??_ScanF+1,w
  5738  0199  0085               	movwf	5
  5739  019A  0800               	movf	0,w	;code access
  5740  019B  003B               	movlb	27	; select bank27
  5741  019C  00B5               	movwf	53	;volatile
  5742                           
  5743                           ;User/Fog.c: 119:     PWM3DCH = 0;
  5744  019D  01B4               	clrf	52	;volatile
  5745                           
  5746                           ;User/Fog.c: 120:     PWM3DCL = (PWMT[frq] >> 1) + 1;
  5747  019E  0020               	movlb	0	; select bank0
  5748  019F  086B               	movf	_frq,w
  5749  01A0  00A6               	movwf	??_ScanF
  5750  01A1  01A7               	clrf	??_ScanF+1
  5751  01A2  35A6               	lslf	??_ScanF,f
  5752  01A3  0DA7               	rlf	??_ScanF+1,f
  5753  01A4  3000               	movlw	low (_PWMT| (0+32768))
  5754  01A5  0726               	addwf	??_ScanF,w
  5755  01A6  0084               	movwf	4
  5756  01A7  3088               	movlw	high (_PWMT| (0+32768))
  5757  01A8  3D27               	addwfc	??_ScanF+1,w
  5758  01A9  0085               	movwf	5
  5759  01AA  3F00               	moviw [0]fsr0
  5760  01AB  00A8               	movwf	??_ScanF+2
  5761  01AC  3F01               	moviw [1]fsr0
  5762  01AD  00A9               	movwf	??_ScanF+3
  5763  01AE  36A9               	lsrf	??_ScanF+3,f
  5764  01AF  0CA8               	rrf	??_ScanF+2,f
  5765  01B0  0828               	movf	??_ScanF+2,w
  5766  01B1  3E01               	addlw	1
  5767  01B2  003B               	movlb	27	; select bank27
  5768  01B3  00B3               	movwf	51	;volatile
  5769                           
  5770                           ;User/Fog.c: 124:     LATCbits.LATC6 = bFors_High;
  5771  01B4  0021               	movlb	1	; select bank1
  5772  01B5  0C61               	rrf	_bFors_High^(0+128),w
  5773  01B6  0022               	movlb	2	; select bank2
  5774  01B7  1C03               	skipc
  5775  01B8  130E               	bcf	14,6	;volatile
  5776  01B9  1803               	skipnc
  5777  01BA  170E               	bsf	14,6	;volatile
  5778                           
  5779                           ;User/Fog.c: 126:     __nop();
  5780  01BB  0000               	nop
  5781                           
  5782                           ;User/Fog.c: 127:     __nop();
  5783  01BC  0000               	nop
  5784                           
  5785                           ;User/Fog.c: 128:     __nop();
  5786  01BD  0000               	nop
  5787                           
  5788                           ;User/Fog.c: 129:     PWMON();
  5789  01BE  318A  2279         	fcall	_PWMON
  5790                           
  5791                           ;User/Fog.c: 131:     OSCTUNE = 0;
  5792  01C0  0021               	movlb	1	; select bank1
  5793  01C1  0198               	clrf	24	;volatile
  5794  01C2  0008               	return
  5795  01C3                     __end_of_ScanF:
  5796                           
  5797                           	psect	text18
  5798  0B78                     __ptext18:	
  5799 ;; *************** function _KeyPro *****************
  5800 ;; Defined at:
  5801 ;;		line 381 in file "User/newmain.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  i               1    0        unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 1F/1
  5812 ;;		On exit  : 1F/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5815 ;;      Params:         0       0       0       0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0       0       0       0
  5817 ;;      Temps:          1       0       0       0       0       0       0       0
  5818 ;;      Totals:         1       0       0       0       0       0       0       0
  5819 ;;Total ram usage:        1 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 2
  5822 ;; This function calls:
  5823 ;;		_LED_OFF
  5824 ;;		_PWMON
  5825 ;; This function is called by:
  5826 ;;		_main
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           
  5831                           ;psect for function _KeyPro
  5832  0B78                     _KeyPro:
  5833                           
  5834                           ;User/newmain.c: 383:     ubyte i;;User/newmain.c: 384:     KeyTime = 0;
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in _KeyPro: [wreg+status,2+status,0+pclath+cstack]
  5838  0B78  01DE               	clrf	_KeyTime^(0+128)
  5839                           
  5840                           ;User/newmain.c: 386:     if (Key.bits.PWO_B1)
  5841  0B79  0020               	movlb	0	; select bank0
  5842  0B7A  1CEA               	btfss	_Key,1	;volatile
  5843  0B7B  2B94               	goto	l3740
  5844                           
  5845                           ;User/newmain.c: 387:     {;User/newmain.c: 388:         Flg.bits.PWON_B0 = !Flg.bits.PW
      +                          ON_B0;
  5846  0B7C  1003               	clrc
  5847  0B7D  1C6F               	btfss	_Flg,0	;volatile
  5848  0B7E  1403               	setc
  5849  0B7F  1C03               	btfss	3,0
  5850  0B80  2B84               	goto	u5050
  5851  0B81  0020               	movlb	0	; select bank0
  5852  0B82  146F               	bsf	_Flg,0	;volatile
  5853  0B83  2B86               	goto	l3728
  5854  0B84                     u5050:
  5855  0B84  0020               	movlb	0	; select bank0
  5856  0B85  106F               	bcf	_Flg,0	;volatile
  5857  0B86                     l3728:
  5858                           
  5859                           ;User/newmain.c: 390:         if (Flg.bits.PWON_B0 == 0)
  5860  0B86  186F               	btfsc	_Flg,0	;volatile
  5861  0B87  2B91               	goto	l3738
  5862                           
  5863                           ;User/newmain.c: 391:         {;User/newmain.c: 392:             LED_OFF();
  5864  0B88  318B  2340  318B   	fcall	_LED_OFF
  5865                           
  5866                           ;User/newmain.c: 393:             hze = 0;
  5867  0B8B  01E5               	clrf	_hze^(0+128)
  5868                           
  5869                           ;User/newmain.c: 394:             LATAbits.LATA1 = 1;
  5870  0B8C  0022               	movlb	2	; select bank2
  5871  0B8D  148C               	bsf	12,1	;volatile
  5872                           
  5873                           ;User/newmain.c: 395:             ERRcnt = 0;
  5874  0B8E  0021               	movlb	1	; select bank1
  5875  0B8F  01D8               	clrf	_ERRcnt^(0+128)
  5876                           
  5877                           ;User/newmain.c: 396:         }
  5878  0B90  2B94               	goto	l3740
  5879  0B91                     l3738:
  5880                           
  5881                           ;User/newmain.c: 398:         {;User/newmain.c: 407:             PWMON();
  5882  0B91  318A  2279  318B   	fcall	_PWMON
  5883  0B94                     l3740:
  5884                           
  5885                           ;User/newmain.c: 413:     if (Key.bits.HB_B2 && Flg.bits.PWON_B0)
  5886  0B94  0020               	movlb	0	; select bank0
  5887  0B95  196A               	btfsc	_Key,2	;volatile
  5888  0B96  1C6F               	btfss	_Flg,0	;volatile
  5889  0B97  2BA4               	goto	l3750
  5890                           
  5891                           ;User/newmain.c: 414:     {;User/newmain.c: 415:         LATCbits.LATC5 = 1;
  5892  0B98  0022               	movlb	2	; select bank2
  5893  0B99  168E               	bsf	14,5	;volatile
  5894                           
  5895                           ;User/newmain.c: 416:         LATCbits.LATC4 = 0;
  5896  0B9A  120E               	bcf	14,4	;volatile
  5897                           
  5898                           ;User/newmain.c: 417:         LATCbits.LATC6 = 0;
  5899  0B9B  130E               	bcf	14,6	;volatile
  5900                           
  5901                           ;User/newmain.c: 418:         Flg2.bits.ADMin_B1 = 0;
  5902  0B9C  0020               	movlb	0	; select bank0
  5903  0B9D  10EE               	bcf	_Flg2,1	;volatile
  5904                           
  5905                           ;User/newmain.c: 419:         PWMTime = 0;
  5906  0B9E  0021               	movlb	1	; select bank1
  5907  0B9F  01E4               	clrf	_PWMTime^(0+128)
  5908                           
  5909                           ;User/newmain.c: 420:         hze = 3;
  5910  0BA0  3003               	movlw	3
  5911  0BA1  00F2               	movwf	??_KeyPro
  5912  0BA2  0872               	movf	??_KeyPro,w
  5913  0BA3  00E5               	movwf	_hze^(0+128)
  5914  0BA4                     l3750:
  5915                           
  5916                           ;User/newmain.c: 423:     if (Key.bits.LB_B3 && Flg.bits.PWON_B0)
  5917  0BA4  0020               	movlb	0	; select bank0
  5918  0BA5  19EA               	btfsc	_Key,3	;volatile
  5919  0BA6  1C6F               	btfss	_Flg,0	;volatile
  5920  0BA7  2BB4               	goto	l3760
  5921                           
  5922                           ;User/newmain.c: 424:     {;User/newmain.c: 425:         LATCbits.LATC5 = 0;
  5923  0BA8  0022               	movlb	2	; select bank2
  5924  0BA9  128E               	bcf	14,5	;volatile
  5925                           
  5926                           ;User/newmain.c: 426:         LATCbits.LATC4 = 1;
  5927  0BAA  160E               	bsf	14,4	;volatile
  5928                           
  5929                           ;User/newmain.c: 427:         LATCbits.LATC6 = 1;
  5930  0BAB  170E               	bsf	14,6	;volatile
  5931                           
  5932                           ;User/newmain.c: 428:         Flg2.bits.ADMin_B1 = 0;
  5933  0BAC  0020               	movlb	0	; select bank0
  5934  0BAD  10EE               	bcf	_Flg2,1	;volatile
  5935                           
  5936                           ;User/newmain.c: 429:         PWMTime = 0;
  5937  0BAE  0021               	movlb	1	; select bank1
  5938  0BAF  01E4               	clrf	_PWMTime^(0+128)
  5939                           
  5940                           ;User/newmain.c: 430:         hze = 2;
  5941  0BB0  3002               	movlw	2
  5942  0BB1  00F2               	movwf	??_KeyPro
  5943  0BB2  0872               	movf	??_KeyPro,w
  5944  0BB3  00E5               	movwf	_hze^(0+128)
  5945  0BB4                     l3760:
  5946                           
  5947                           ;User/newmain.c: 433:     Key.KeyByte = 0;
  5948  0BB4  0020               	movlb	0	; select bank0
  5949  0BB5  01EA               	clrf	_Key	;volatile
  5950  0BB6  0008               	return
  5951  0BB7                     __end_of_KeyPro:
  5952                           
  5953                           	psect	text19
  5954  0019                     __ptext19:	
  5955 ;; *************** function _GetWater *****************
  5956 ;; Defined at:
  5957 ;;		line 134 in file "User/Fog.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  j               1    7[BANK0 ] unsigned char 
  5962 ;;  i               1    6[BANK0 ] unsigned char 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 1F/1
  5969 ;;		On exit  : 1F/1
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5972 ;;      Params:         0       0       0       0       0       0       0       0
  5973 ;;      Locals:         0       2       0       0       0       0       0       0
  5974 ;;      Temps:          1       0       0       0       0       0       0       0
  5975 ;;      Totals:         1       2       0       0       0       0       0       0
  5976 ;;Total ram usage:        3 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 4
  5979 ;; This function calls:
  5980 ;;		_PWMOFF
  5981 ;;		_PWMON
  5982 ;;		_ReadCurrent
  5983 ;; This function is called by:
  5984 ;;		_main
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988                           
  5989                           ;psect for function _GetWater
  5990  0019                     _GetWater:
  5991                           
  5992                           ;User/Fog.c: 136:     PWMON();
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _GetWater: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5996  0019  318A  2279  3180   	fcall	_PWMON
  5997                           
  5998                           ;User/Fog.c: 137:     ubyte i, j;;User/Fog.c: 138:     for (j = 0; j < 5; j++)
  5999  001C  0020               	movlb	0	; select bank0
  6000  001D  01A7               	clrf	GetWater@j
  6001  001E                     l3532:
  6002                           
  6003                           ;User/Fog.c: 139:     {;User/Fog.c: 140:         for (i = 0; i < 4; i++)
  6004  001E  01A6               	clrf	GetWater@i
  6005  001F                     l95:
  6006                           
  6007                           ;User/Fog.c: 141:         {;User/Fog.c: 142:             Flg.bits.T4ms_B7 = 0;
  6008  001F  13EF               	bcf	_Flg,7	;volatile
  6009  0020                     l97:	
  6010                           ;User/Fog.c: 144:                 ;
  6011                           
  6012                           
  6013                           ;User/Fog.c: 143:             while (Flg.bits.T4ms_B7 == 0)
  6014  0020  1FEF               	btfss	_Flg,7	;volatile
  6015  0021  2820               	goto	l97
  6016                           
  6017                           ;User/Fog.c: 145:         }
  6018  0022  3001               	movlw	1
  6019  0023  00FC               	movwf	??_GetWater
  6020  0024  087C               	movf	??_GetWater,w
  6021  0025  07A6               	addwf	GetWater@i,f
  6022  0026  3004               	movlw	4
  6023  0027  0226               	subwf	GetWater@i,w
  6024  0028  1C03               	skipc
  6025  0029  281F               	goto	l95
  6026                           
  6027                           ;User/Fog.c: 146:         ReadCurrent();
  6028  002A  318D  2566  3180   	fcall	_ReadCurrent
  6029                           
  6030                           ;User/Fog.c: 147:     }
  6031  002D  3001               	movlw	1
  6032  002E  00FC               	movwf	??_GetWater
  6033  002F  087C               	movf	??_GetWater,w
  6034  0030  0020               	movlb	0	; select bank0
  6035  0031  07A7               	addwf	GetWater@j,f
  6036  0032  3005               	movlw	5
  6037  0033  0227               	subwf	GetWater@j,w
  6038  0034  1C03               	skipc
  6039  0035  281E               	goto	l3532
  6040                           
  6041                           ;User/Fog.c: 148:     Flg.bits.T4ms_B7 = 0;
  6042  0036  13EF               	bcf	_Flg,7	;volatile
  6043                           
  6044                           ;User/Fog.c: 149:     PWMOFF();
  6045  0037  3180  2004         	fcall	_PWMOFF
  6046  0039  0008               	return
  6047  003A                     __end_of_GetWater:
  6048                           
  6049                           	psect	text20
  6050  0D66                     __ptext20:	
  6051 ;; *************** function _ReadCurrent *****************
  6052 ;; Defined at:
  6053 ;;		line 124 in file "User/newmain.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  i               1   11[COMMON] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  2   24[None  ] unsigned int 
  6060 ;; Registers used:
  6061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 1E/1
  6064 ;;		On exit  : 1F/1
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6067 ;;      Params:         0       0       0       0       0       0       0       0
  6068 ;;      Locals:         1       0       0       0       0       0       0       0
  6069 ;;      Temps:          2       0       0       0       0       0       0       0
  6070 ;;      Totals:         3       0       0       0       0       0       0       0
  6071 ;;Total ram usage:        3 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 3
  6074 ;; This function calls:
  6075 ;;		_ErrInf
  6076 ;;		_GetADC
  6077 ;; This function is called by:
  6078 ;;		_GetWater
  6079 ;;		_main
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           
  6084                           ;psect for function _ReadCurrent
  6085  0D66                     _ReadCurrent:
  6086                           
  6087                           ;User/newmain.c: 126:     ubyte i;;User/newmain.c: 130:     GetADC(10) >> 5;
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in _ReadCurrent: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6091  0D66  300A               	movlw	10
  6092  0D67  318C  244D  318D   	fcall	_GetADC
  6093                           
  6094                           ;User/newmain.c: 132:     for (i = 0; i < 16; i++)
  6095  0D6A  01FB               	clrf	ReadCurrent@i
  6096  0D6B                     l3332:
  6097                           
  6098                           ;User/newmain.c: 133:     {;User/newmain.c: 134:         AD_Cur[i] = (GetADC(10) >> 5);
  6099  0D6B  300A               	movlw	10
  6100  0D6C  318C  244D  318D   	fcall	_GetADC
  6101  0D6F  0875               	movf	?_GetADC,w
  6102  0D70  00F9               	movwf	??_ReadCurrent
  6103  0D71  0876               	movf	?_GetADC+1,w
  6104  0D72  00FA               	movwf	??_ReadCurrent+1
  6105  0D73  3005               	movlw	5
  6106  0D74                     u4285:
  6107  0D74  36FA               	lsrf	??_ReadCurrent+1,f
  6108  0D75  0CF9               	rrf	??_ReadCurrent,f
  6109  0D76  0B89               	decfsz	9,f
  6110  0D77  2D74               	goto	u4285
  6111  0D78  357B               	lslf	ReadCurrent@i,w
  6112  0D79  3EA0               	addlw	(low (_AD_Cur| 0))& (0+255)
  6113  0D7A  0086               	movwf	6
  6114  0D7B  0187               	clrf	7
  6115  0D7C  0879               	movf	??_ReadCurrent,w
  6116  0D7D  3FC0               	movwi [0]fsr1
  6117  0D7E  087A               	movf	??_ReadCurrent+1,w
  6118  0D7F  3FC1               	movwi [1]fsr1
  6119                           
  6120                           ;User/newmain.c: 135:         AD_Tal += AD_Cur[i];
  6121  0D80  357B               	lslf	ReadCurrent@i,w
  6122  0D81  3EA0               	addlw	(low (_AD_Cur| 0))& (0+255)
  6123  0D82  0086               	movwf	6
  6124  0D83  0187               	clrf	7
  6125  0D84  3F40               	moviw [0]fsr1
  6126  0D85  00F9               	movwf	??_ReadCurrent
  6127  0D86  3F41               	moviw [1]fsr1
  6128  0D87  00FA               	movwf	??_ReadCurrent+1
  6129  0D88  0879               	movf	??_ReadCurrent,w
  6130  0D89  0021               	movlb	1	; select bank1
  6131  0D8A  07CA               	addwf	_AD_Tal^(0+128),f
  6132  0D8B  087A               	movf	??_ReadCurrent+1,w
  6133  0D8C  3DCB               	addwfc	(_AD_Tal+1)^(0+128),f
  6134                           
  6135                           ;User/newmain.c: 136:     }
  6136  0D8D  3001               	movlw	1
  6137  0D8E  00F9               	movwf	??_ReadCurrent
  6138  0D8F  0879               	movf	??_ReadCurrent,w
  6139  0D90  07FB               	addwf	ReadCurrent@i,f
  6140  0D91  3010               	movlw	16
  6141  0D92  027B               	subwf	ReadCurrent@i,w
  6142  0D93  1C03               	skipc
  6143  0D94  2D6B               	goto	l3332
  6144                           
  6145                           ;User/newmain.c: 138:     AD_Tal >>= 4;
  6146  0D95  3004               	movlw	4
  6147  0D96                     u4305:
  6148  0D96  36CB               	lsrf	(_AD_Tal+1)^(0+128),f
  6149  0D97  0CCA               	rrf	_AD_Tal^(0+128),f
  6150  0D98  0B89               	decfsz	9,f
  6151  0D99  2D96               	goto	u4305
  6152                           
  6153                           ;User/newmain.c: 141:     if (PORTBbits.RB5 == 1)
  6154  0D9A  0020               	movlb	0	; select bank0
  6155  0D9B  1E8D               	btfss	13,5	;volatile
  6156  0D9C  2DA4               	goto	l3348
  6157                           
  6158                           ;User/newmain.c: 142:     {;User/newmain.c: 143:         ERRcnt++;
  6159  0D9D  3001               	movlw	1
  6160  0D9E  00F9               	movwf	??_ReadCurrent
  6161  0D9F  0879               	movf	??_ReadCurrent,w
  6162  0DA0  0021               	movlb	1	; select bank1
  6163  0DA1  07D8               	addwf	_ERRcnt^(0+128),f
  6164                           
  6165                           ;User/newmain.c: 144:         Failcnt = 0;
  6166  0DA2  01D7               	clrf	_Failcnt^(0+128)
  6167                           
  6168                           ;User/newmain.c: 145:     }
  6169  0DA3  2DB6               	goto	l3362
  6170  0DA4                     l3348:
  6171                           
  6172                           ;User/newmain.c: 147:     {;User/newmain.c: 148:         ERRcnt = 0;
  6173  0DA4  0021               	movlb	1	; select bank1
  6174  0DA5  01D8               	clrf	_ERRcnt^(0+128)
  6175                           
  6176                           ;User/newmain.c: 149:         if ((Flg2.Flg2Byte & 0x85) == 0 && (Flg.bits.PWON_B0 == 1)
      +                          )
  6177  0DA6  0020               	movlb	0	; select bank0
  6178  0DA7  086E               	movf	_Flg2,w	;volatile
  6179  0DA8  3985               	andlw	133
  6180  0DA9  1903               	btfsc	3,2
  6181  0DAA  1C6F               	btfss	_Flg,0	;volatile
  6182  0DAB  2DAE               	goto	l422
  6183                           
  6184                           ;User/newmain.c: 150:             LATAbits.LATA1 = 0;
  6185  0DAC  0022               	movlb	2	; select bank2
  6186  0DAD  108C               	bcf	12,1	;volatile
  6187  0DAE                     l422:
  6188                           
  6189                           ;User/newmain.c: 152:         if (Flg2.bits.Error_B0 && (Flg.bits.PWON_B0 == 1))
  6190  0DAE  0020               	movlb	0	; select bank0
  6191  0DAF  186E               	btfsc	_Flg2,0	;volatile
  6192  0DB0  1C6F               	btfss	_Flg,0	;volatile
  6193  0DB1  2DB4               	goto	l3360
  6194                           
  6195                           ;User/newmain.c: 153:             hze = 0;
  6196  0DB2  0021               	movlb	1	; select bank1
  6197  0DB3  01E5               	clrf	_hze^(0+128)
  6198  0DB4                     l3360:
  6199                           
  6200                           ;User/newmain.c: 155:         Flg2.bits.Error_B0 = 0;
  6201  0DB4  0020               	movlb	0	; select bank0
  6202  0DB5  106E               	bcf	_Flg2,0	;volatile
  6203  0DB6                     l3362:
  6204                           
  6205                           ;User/newmain.c: 158:     if (AD_Tal > 0x490)
  6206  0DB6  3004               	movlw	4
  6207  0DB7  0021               	movlb	1	; select bank1
  6208  0DB8  024B               	subwf	(_AD_Tal+1)^(0+128),w
  6209  0DB9  3091               	movlw	145
  6210  0DBA  1903               	skipnz
  6211  0DBB  024A               	subwf	_AD_Tal^(0+128),w
  6212  0DBC  1C03               	skipc
  6213  0DBD  2DC4               	goto	l3368
  6214                           
  6215                           ;User/newmain.c: 159:     {;User/newmain.c: 160:         ERRcnt = 0;
  6216  0DBE  01D8               	clrf	_ERRcnt^(0+128)
  6217                           
  6218                           ;User/newmain.c: 161:         Failcnt++;
  6219  0DBF  3001               	movlw	1
  6220  0DC0  00F9               	movwf	??_ReadCurrent
  6221  0DC1  0879               	movf	??_ReadCurrent,w
  6222  0DC2  07D7               	addwf	_Failcnt^(0+128),f
  6223                           
  6224                           ;User/newmain.c: 162:     }
  6225  0DC3  2DC5               	goto	l3370
  6226  0DC4                     l3368:
  6227                           
  6228                           ;User/newmain.c: 165:     {;User/newmain.c: 166:         Failcnt = 0;
  6229  0DC4  01D7               	clrf	_Failcnt^(0+128)
  6230  0DC5                     l3370:
  6231                           
  6232                           ;User/newmain.c: 169:     if (ERRcnt > 1)
  6233  0DC5  3002               	movlw	2
  6234  0DC6  0258               	subwf	_ERRcnt^(0+128),w
  6235  0DC7  1C03               	skipc
  6236  0DC8  2DDA               	goto	l3384
  6237                           
  6238                           ;User/newmain.c: 170:     {;User/newmain.c: 173:         if (PORTAbits.RA3 == 0)
  6239  0DC9  0020               	movlb	0	; select bank0
  6240  0DCA  198C               	btfsc	12,3	;volatile
  6241  0DCB  2DCE               	goto	l3376
  6242                           
  6243                           ;User/newmain.c: 174:             hze = 5;
  6244  0DCC  3005               	movlw	5
  6245  0DCD  2DCF               	goto	L3
  6246  0DCE                     l3376:
  6247                           
  6248                           ;User/newmain.c: 176:             hze = 4;
  6249  0DCE  3004               	movlw	4
  6250  0DCF                     L3:
  6251  0DCF  00F9               	movwf	??_ReadCurrent
  6252  0DD0  0879               	movf	??_ReadCurrent,w
  6253  0DD1  0021               	movlb	1	; select bank1
  6254  0DD2  00E5               	movwf	_hze^(0+128)
  6255                           
  6256                           ;User/newmain.c: 178:         ErrInf();
  6257  0DD3  318A  227F  318D   	fcall	_ErrInf
  6258                           
  6259                           ;User/newmain.c: 179:         Flg2.bits.Error_B0 = 1;
  6260  0DD6  0020               	movlb	0	; select bank0
  6261  0DD7  146E               	bsf	_Flg2,0	;volatile
  6262                           
  6263                           ;User/newmain.c: 180:         ERRcnt = 0;
  6264  0DD8  0021               	movlb	1	; select bank1
  6265  0DD9  01D8               	clrf	_ERRcnt^(0+128)
  6266  0DDA                     l3384:
  6267                           
  6268                           ;User/newmain.c: 183:     if (Failcnt > 1)
  6269  0DDA  3002               	movlw	2
  6270  0DDB  0257               	subwf	_Failcnt^(0+128),w
  6271  0DDC  1C03               	skipc
  6272  0DDD  0008               	return
  6273                           
  6274                           ;User/newmain.c: 184:     {;User/newmain.c: 185:         ErrInf();
  6275  0DDE  318A  227F  318D   	fcall	_ErrInf
  6276                           
  6277                           ;User/newmain.c: 186:         Flg2.bits.Fail_B2 = 1;
  6278  0DE1  0020               	movlb	0	; select bank0
  6279  0DE2  156E               	bsf	_Flg2,2	;volatile
  6280  0DE3                     l430:	
  6281                           ;User/newmain.c: 187:         while (1)
  6282                           
  6283                           
  6284                           ;User/newmain.c: 188:             ;
  6285  0DE3  2DE3               	goto	l430
  6286  0DE4                     __end_of_ReadCurrent:
  6287                           
  6288                           	psect	text21
  6289  0A7F                     __ptext21:	
  6290 ;; *************** function _ErrInf *****************
  6291 ;; Defined at:
  6292 ;;		line 194 in file "User/newmain.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0, pclath, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 1F/1
  6303 ;;		On exit  : 1F/2
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6306 ;;      Params:         0       0       0       0       0       0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0
  6309 ;;      Totals:         0       0       0       0       0       0       0       0
  6310 ;;Total ram usage:        0 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 2
  6313 ;; This function calls:
  6314 ;;		_LED_OFF
  6315 ;;		_PWMOFF
  6316 ;; This function is called by:
  6317 ;;		_TwoData_COM
  6318 ;;		_ReadCurrent
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _ErrInf
  6324  0A7F                     _ErrInf:
  6325                           
  6326                           ;User/newmain.c: 196:     PWMOFF();
  6327                           
  6328                           ;incstack = 0
  6329                           ; Regs used in _ErrInf: [wreg+status,2+status,0+pclath+cstack]
  6330  0A7F  3180  2004  318A   	fcall	_PWMOFF
  6331                           
  6332                           ;User/newmain.c: 197:     LED_OFF();
  6333  0A82  318B  2340         	fcall	_LED_OFF
  6334                           
  6335                           ;User/newmain.c: 198:     LATAbits.LATA1 = 1;
  6336  0A84  0022               	movlb	2	; select bank2
  6337  0A85  148C               	bsf	12,1	;volatile
  6338  0A86  0008               	return
  6339  0A87                     __end_of_ErrInf:
  6340                           
  6341                           	psect	text22
  6342  0B40                     __ptext22:	
  6343 ;; *************** function _LED_OFF *****************
  6344 ;; Defined at:
  6345 ;;		line 366 in file "User/newmain.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, pclath, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 1E/0
  6356 ;;		On exit  : 1F/1
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6359 ;;      Params:         0       0       0       0       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0
  6361 ;;      Temps:          1       0       0       0       0       0       0       0
  6362 ;;      Totals:         1       0       0       0       0       0       0       0
  6363 ;;Total ram usage:        1 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 1
  6366 ;; This function calls:
  6367 ;;		_PWMOFF
  6368 ;; This function is called by:
  6369 ;;		_ErrInf
  6370 ;;		_KeyPro
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           
  6375                           ;psect for function _LED_OFF
  6376  0B40                     _LED_OFF:
  6377                           
  6378                           ;User/newmain.c: 369:     LATBbits.LATB6 = LATCbits.LATC2 = LATCbits.LATC1 = LATCbits.LA
      +                          TC0 = LATAbits.LATA2 = 1;
  6379                           
  6380                           ;incstack = 0
  6381                           ; Regs used in _LED_OFF: [wreg+status,2+status,0+pclath+cstack]
  6382  0B40  0022               	movlb	2	; select bank2
  6383  0B41  150C               	bsf	12,2	;volatile
  6384  0B42  1D0C               	btfss	12,2	;volatile
  6385  0B43  2B47               	goto	u4150
  6386  0B44  0022               	movlb	2	; select bank2
  6387  0B45  140E               	bsf	14,0	;volatile
  6388  0B46  2B49               	goto	u4164
  6389  0B47                     u4150:
  6390  0B47  0022               	movlb	2	; select bank2
  6391  0B48  100E               	bcf	14,0	;volatile
  6392  0B49                     u4164:
  6393  0B49  1C0E               	btfss	14,0	;volatile
  6394  0B4A  2B4E               	goto	u4160
  6395  0B4B  0022               	movlb	2	; select bank2
  6396  0B4C  148E               	bsf	14,1	;volatile
  6397  0B4D  2B50               	goto	u4174
  6398  0B4E                     u4160:
  6399  0B4E  0022               	movlb	2	; select bank2
  6400  0B4F  108E               	bcf	14,1	;volatile
  6401  0B50                     u4174:
  6402  0B50  1C8E               	btfss	14,1	;volatile
  6403  0B51  2B55               	goto	u4170
  6404  0B52  0022               	movlb	2	; select bank2
  6405  0B53  150E               	bsf	14,2	;volatile
  6406  0B54  2B57               	goto	u4184
  6407  0B55                     u4170:
  6408  0B55  0022               	movlb	2	; select bank2
  6409  0B56  110E               	bcf	14,2	;volatile
  6410  0B57                     u4184:
  6411  0B57  1D0E               	btfss	14,2	;volatile
  6412  0B58  2B5C               	goto	u4180
  6413  0B59  0022               	movlb	2	; select bank2
  6414  0B5A  170D               	bsf	13,6	;volatile
  6415  0B5B  2B5E               	goto	u4194
  6416  0B5C                     u4180:
  6417  0B5C  0022               	movlb	2	; select bank2
  6418  0B5D  130D               	bcf	13,6	;volatile
  6419  0B5E                     u4194:
  6420                           
  6421                           ;User/newmain.c: 370:     LATCbits.LATC4 = LATCbits.LATC5 = 1;
  6422  0B5E  168E               	bsf	14,5	;volatile
  6423  0B5F  1E8E               	btfss	14,5	;volatile
  6424  0B60  2B64               	goto	u4200
  6425  0B61  0022               	movlb	2	; select bank2
  6426  0B62  160E               	bsf	14,4	;volatile
  6427  0B63  2B66               	goto	u4214
  6428  0B64                     u4200:
  6429  0B64  0022               	movlb	2	; select bank2
  6430  0B65  120E               	bcf	14,4	;volatile
  6431  0B66                     u4214:
  6432                           
  6433                           ;User/newmain.c: 371:     LATAbits.LATA1 = 0;
  6434  0B66  108C               	bcf	12,1	;volatile
  6435                           
  6436                           ;User/newmain.c: 372:     MinS_Cnt = 0;
  6437  0B67  0021               	movlb	1	; select bank1
  6438  0B68  01D9               	clrf	_MinS_Cnt^(0+128)
  6439                           
  6440                           ;User/newmain.c: 373:     Flg2.Flg2Byte = 0;
  6441  0B69  0020               	movlb	0	; select bank0
  6442  0B6A  01EE               	clrf	_Flg2	;volatile
  6443                           
  6444                           ;User/newmain.c: 374:     Key.KeyByte &= 2;
  6445  0B6B  3002               	movlw	2
  6446  0B6C  00F1               	movwf	??_LED_OFF
  6447  0B6D  0871               	movf	??_LED_OFF,w
  6448  0B6E  05EA               	andwf	_Key,f	;volatile
  6449                           
  6450                           ;User/newmain.c: 375:     ERRcnt = 0;
  6451  0B6F  0021               	movlb	1	; select bank1
  6452  0B70  01D8               	clrf	_ERRcnt^(0+128)
  6453                           
  6454                           ;User/newmain.c: 376:     ADMax = 0;
  6455  0B71  01E6               	clrf	_ADMax^(0+128)
  6456  0B72  01E7               	clrf	(_ADMax+1)^(0+128)
  6457                           
  6458                           ;User/newmain.c: 377:     ADMin = 0;
  6459  0B73  01CC               	clrf	_ADMin^(0+128)
  6460  0B74  01CD               	clrf	(_ADMin+1)^(0+128)
  6461                           
  6462                           ;User/newmain.c: 378:     PWMOFF();
  6463  0B75  3180  2004         	fcall	_PWMOFF
  6464  0B77  0008               	return
  6465  0B78                     __end_of_LED_OFF:
  6466                           
  6467                           	psect	text23
  6468  0004                     __ptext23:	
  6469 ;; *************** function _PWMOFF *****************
  6470 ;; Defined at:
  6471 ;;		line 321 in file "User/newmain.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      void 
  6478 ;; Registers used:
  6479 ;;		wreg, status,2
  6480 ;; Tracked objects:
  6481 ;;		On entry : 1E/0
  6482 ;;		On exit  : 1F/1
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6485 ;;      Params:         0       0       0       0       0       0       0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0
  6487 ;;      Temps:          1       0       0       0       0       0       0       0
  6488 ;;      Totals:         1       0       0       0       0       0       0       0
  6489 ;;Total ram usage:        1 bytes
  6490 ;; Hardware stack levels used: 1
  6491 ;; This function calls:
  6492 ;;		Nothing
  6493 ;; This function is called by:
  6494 ;;		_ScanF
  6495 ;;		_GetWater
  6496 ;;		_ErrInf
  6497 ;;		_T500ms_Event
  6498 ;;		_LED_OFF
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function _PWMOFF
  6504  0004                     _PWMOFF:
  6505                           
  6506                           ;User/newmain.c: 323:     PWM3LDCONbits.LDA = 1;
  6507                           
  6508                           ;incstack = 0
  6509                           ; Regs used in _PWMOFF: [wreg+status,2]
  6510  0004  003B               	movlb	27	; select bank27
  6511  0005  17BF               	bsf	63,7	;volatile
  6512                           
  6513                           ;User/newmain.c: 324:     PWM3LDCONbits.LDT = 0;
  6514  0006  133F               	bcf	63,6	;volatile
  6515                           
  6516                           ;User/newmain.c: 325:     PWM3CONbits.EN = 0;
  6517  0007  13BB               	bcf	59,7	;volatile
  6518                           
  6519                           ;User/newmain.c: 326:     PWM3INTEbits.PRIE = 0;
  6520  0008  103C               	bcf	60,0	;volatile
  6521                           
  6522                           ;User/newmain.c: 327:     LATCbits.LATC3 = 0;
  6523  0009  0022               	movlb	2	; select bank2
  6524  000A  118E               	bcf	14,3	;volatile
  6525                           
  6526                           ;User/newmain.c: 328:     Flg.bits.ADMax_B1 = 0;
  6527  000B  0020               	movlb	0	; select bank0
  6528  000C  10EF               	bcf	_Flg,1	;volatile
  6529                           
  6530                           ;User/newmain.c: 329:     NoWater = PWMTime = 0;
  6531  000D  0021               	movlb	1	; select bank1
  6532  000E  01E4               	clrf	_PWMTime^(0+128)
  6533  000F  0020               	movlb	0	; select bank0
  6534  0010  01ED               	clrf	_NoWater
  6535                           
  6536                           ;User/newmain.c: 330:     PWMTime_Val = 2;
  6537  0011  3002               	movlw	2
  6538  0012  00F0               	movwf	??_PWMOFF
  6539  0013  0870               	movf	??_PWMOFF,w
  6540  0014  0021               	movlb	1	; select bank1
  6541  0015  00EA               	movwf	_PWMTime_Val^(0+128)
  6542                           
  6543                           ;User/newmain.c: 331:     adc_true_cnt = 0;
  6544  0016  01E0               	clrf	_adc_true_cnt^(0+128)
  6545                           
  6546                           ;User/newmain.c: 332:     adc_false_cnt = 0;
  6547  0017  01DF               	clrf	_adc_false_cnt^(0+128)
  6548  0018  0008               	return
  6549  0019                     __end_of_PWMOFF:
  6550                           
  6551                           	psect	text24
  6552  0A79                     __ptext24:	
  6553 ;; *************** function _PWMON *****************
  6554 ;; Defined at:
  6555 ;;		line 313 in file "User/newmain.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		None
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/1
  6566 ;;		On exit  : 1F/1B
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6569 ;;      Params:         0       0       0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_ScanF
  6579 ;;		_GetWater
  6580 ;;		_T500ms_Event
  6581 ;;		_KeyPro
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _PWMON
  6587  0A79                     _PWMON:
  6588                           
  6589                           ;User/newmain.c: 315:     PWM3LDCONbits.LDA = 1;
  6590                           
  6591                           ;incstack = 0
  6592                           ; Regs used in _PWMON: []
  6593  0A79  003B               	movlb	27	; select bank27
  6594  0A7A  17BF               	bsf	63,7	;volatile
  6595                           
  6596                           ;User/newmain.c: 316:     PWM3LDCONbits.LDT = 0;
  6597  0A7B  133F               	bcf	63,6	;volatile
  6598                           
  6599                           ;User/newmain.c: 317:     PWM3CONbits.EN = 1;
  6600  0A7C  17BB               	bsf	59,7	;volatile
  6601                           
  6602                           ;User/newmain.c: 318:     PWM3INTEbits.PRIE = 1;
  6603  0A7D  143C               	bsf	60,0	;volatile
  6604  0A7E  0008               	return
  6605  0A7F                     __end_of_PWMON:
  6606                           
  6607                           	psect	text25
  6608  0F2B                     __ptext25:	
  6609 ;; *************** function _GetKey *****************
  6610 ;; Defined at:
  6611 ;;		line 441 in file "User/newmain.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  i               1   11[COMMON] unsigned char 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg, status,2, status,0, pclath, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 1F/1
  6622 ;;		On exit  : 1F/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6625 ;;      Params:         0       0       0       0       0       0       0       0
  6626 ;;      Locals:         1       0       0       0       0       0       0       0
  6627 ;;      Temps:          2       0       0       0       0       0       0       0
  6628 ;;      Totals:         3       0       0       0       0       0       0       0
  6629 ;;Total ram usage:        3 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 2
  6632 ;; This function calls:
  6633 ;;		_GetADC
  6634 ;; This function is called by:
  6635 ;;		_main
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           
  6640                           ;psect for function _GetKey
  6641  0F2B                     _GetKey:
  6642                           
  6643                           ;User/newmain.c: 444:     ubyte i;;User/newmain.c: 445:     adkey = (GetADC(9) >> 5);
  6644                           
  6645                           ;incstack = 0
  6646                           ; Regs used in _GetKey: [wreg+status,2+status,0+pclath+cstack]
  6647  0F2B  3009               	movlw	9
  6648  0F2C  318C  244D  318F   	fcall	_GetADC
  6649  0F2F  0875               	movf	?_GetADC,w
  6650  0F30  00F9               	movwf	??_GetKey
  6651  0F31  0876               	movf	?_GetADC+1,w
  6652  0F32  00FA               	movwf	??_GetKey+1
  6653  0F33  3005               	movlw	5
  6654  0F34                     u4845:
  6655  0F34  36FA               	lsrf	??_GetKey+1,f
  6656  0F35  0CF9               	rrf	??_GetKey,f
  6657  0F36  0B89               	decfsz	9,f
  6658  0F37  2F34               	goto	u4845
  6659  0F38  0879               	movf	??_GetKey,w
  6660  0F39  00E6               	movwf	_adkey
  6661  0F3A  087A               	movf	??_GetKey+1,w
  6662  0F3B  00E7               	movwf	_adkey+1
  6663                           
  6664                           ;User/newmain.c: 446:     KeyADC = 0;
  6665  0F3C  0021               	movlb	1	; select bank1
  6666  0F3D  01C8               	clrf	_KeyADC^(0+128)
  6667  0F3E  01C9               	clrf	(_KeyADC+1)^(0+128)
  6668                           
  6669                           ;User/newmain.c: 447:     Flg2.bits.GetKeyM_B3 = 1;
  6670  0F3F  0020               	movlb	0	; select bank0
  6671  0F40  15EE               	bsf	_Flg2,3	;volatile
  6672                           
  6673                           ;User/newmain.c: 449:     for (i = 0; i < 16; i++)
  6674  0F41  01FB               	clrf	GetKey@i
  6675  0F42                     l3658:
  6676                           
  6677                           ;User/newmain.c: 450:         KeyADC += (GetADC(9) >> 5);
  6678  0F42  3009               	movlw	9
  6679  0F43  318C  244D  318F   	fcall	_GetADC
  6680  0F46  0875               	movf	?_GetADC,w
  6681  0F47  00F9               	movwf	??_GetKey
  6682  0F48  0876               	movf	?_GetADC+1,w
  6683  0F49  00FA               	movwf	??_GetKey+1
  6684  0F4A  3005               	movlw	5
  6685  0F4B                     u4855:
  6686  0F4B  36FA               	lsrf	??_GetKey+1,f
  6687  0F4C  0CF9               	rrf	??_GetKey,f
  6688  0F4D  0B89               	decfsz	9,f
  6689  0F4E  2F4B               	goto	u4855
  6690  0F4F  0879               	movf	??_GetKey,w
  6691  0F50  0021               	movlb	1	; select bank1
  6692  0F51  07C8               	addwf	_KeyADC^(0+128),f
  6693  0F52  087A               	movf	??_GetKey+1,w
  6694  0F53  3DC9               	addwfc	(_KeyADC+1)^(0+128),f
  6695  0F54  3001               	movlw	1
  6696  0F55  00F9               	movwf	??_GetKey
  6697  0F56  0879               	movf	??_GetKey,w
  6698  0F57  07FB               	addwf	GetKey@i,f
  6699  0F58  3010               	movlw	16
  6700  0F59  027B               	subwf	GetKey@i,w
  6701  0F5A  1C03               	skipc
  6702  0F5B  2F42               	goto	l3658
  6703                           
  6704                           ;User/newmain.c: 452:     if (Flg2.bits.GetKeyM_B3)
  6705  0F5C  0020               	movlb	0	; select bank0
  6706  0F5D  1DEE               	btfss	_Flg2,3	;volatile
  6707  0F5E  2F6F               	goto	L4
  6708                           
  6709                           ;User/newmain.c: 453:         adkey = KeyADC >> 4;
  6710  0F5F  0021               	movlb	1	; select bank1
  6711  0F60  0E48               	swapf	_KeyADC^(0+128),w
  6712  0F61  390F               	andlw	15
  6713  0F62  0020               	movlb	0	; select bank0
  6714  0F63  00E6               	movwf	_adkey
  6715  0F64  0021               	movlb	1	; select bank1
  6716  0F65  0E49               	swapf	(_KeyADC+1)^(0+128),w
  6717  0F66  39F0               	andlw	240
  6718  0F67  0020               	movlb	0	; select bank0
  6719  0F68  04E6               	iorwf	_adkey,f
  6720  0F69  0021               	movlb	1	; select bank1
  6721  0F6A  0E49               	swapf	(_KeyADC+1)^(0+128),w
  6722  0F6B  390F               	andlw	15
  6723  0F6C  0020               	movlb	0	; select bank0
  6724  0F6D  00E7               	movwf	_adkey+1
  6725                           
  6726                           ;User/newmain.c: 454:     Flg2.bits.GetKeyM_B3 = 0;
  6727  0F6E  11EE               	bcf	_Flg2,3	;volatile
  6728  0F6F                     L4:
  6729                           
  6730                           ;User/newmain.c: 456:     if (((adkey + 30) > 0x148) && ((adkey - 30) < 0x148) && (Touch
      +                          Time == 0))
  6731  0F6F  0866               	movf	_adkey,w
  6732  0F70  3E1E               	addlw	30
  6733  0F71  00F9               	movwf	??_GetKey
  6734  0F72  3000               	movlw	0
  6735  0F73  3D67               	addwfc	_adkey+1,w
  6736  0F74  00FA               	movwf	??_GetKey+1
  6737  0F75  3001               	movlw	1
  6738  0F76  027A               	subwf	??_GetKey+1,w
  6739  0F77  3049               	movlw	73
  6740  0F78  1903               	skipnz
  6741  0F79  0279               	subwf	??_GetKey,w
  6742  0F7A  1C03               	skipc
  6743  0F7B  2F99               	goto	l3680
  6744  0F7C  0866               	movf	_adkey,w
  6745  0F7D  3EE2               	addlw	226
  6746  0F7E  00F9               	movwf	??_GetKey
  6747  0F7F  30FF               	movlw	255
  6748  0F80  3D67               	addwfc	_adkey+1,w
  6749  0F81  00FA               	movwf	??_GetKey+1
  6750  0F82  3001               	movlw	1
  6751  0F83  027A               	subwf	??_GetKey+1,w
  6752  0F84  3048               	movlw	72
  6753  0F85  1903               	skipnz
  6754  0F86  0279               	subwf	??_GetKey,w
  6755  0F87  1803               	skipnc
  6756  0F88  2F99               	goto	l3680
  6757  0F89  0869               	movf	_TouchTime,w
  6758  0F8A  1D03               	btfss	3,2
  6759  0F8B  2F99               	goto	l3680
  6760                           
  6761                           ;User/newmain.c: 457:     {;User/newmain.c: 458:         if (Flg.bits.PWON_B0 == 0)
  6762  0F8C  186F               	btfsc	_Flg,0	;volatile
  6763  0F8D  2F90               	goto	l3676
  6764                           
  6765                           ;User/newmain.c: 459:             Key.bits.PWO_B1 = 1;
  6766  0F8E  14EA               	bsf	_Key,1	;volatile
  6767  0F8F  2F9E               	goto	l3684
  6768  0F90                     l3676:
  6769  0F90  3029               	movlw	41
  6770  0F91  0268               	subwf	_stakeytime,w
  6771  0F92  1803               	skipnc
  6772  0F93  2F9E               	goto	l3684
  6773                           
  6774                           ;User/newmain.c: 461:             stakeytime++;
  6775  0F94  3001               	movlw	1
  6776  0F95  00F9               	movwf	??_GetKey
  6777  0F96  0879               	movf	??_GetKey,w
  6778  0F97  07E8               	addwf	_stakeytime,f
  6779  0F98  2F9E               	goto	l3684
  6780  0F99                     l3680:
  6781  0F99  0868               	movf	_stakeytime,w
  6782  0F9A  1903               	btfsc	3,2
  6783  0F9B  2F9E               	goto	l3684
  6784                           
  6785                           ;User/newmain.c: 464:         stakeytime--;
  6786  0F9C  3001               	movlw	1
  6787  0F9D  02E8               	subwf	_stakeytime,f
  6788  0F9E                     l3684:
  6789                           
  6790                           ;User/newmain.c: 466:     if (adkey > 0x310 && stakeytime > 0)
  6791  0F9E  3003               	movlw	3
  6792  0F9F  0267               	subwf	_adkey+1,w
  6793  0FA0  3011               	movlw	17
  6794  0FA1  1903               	skipnz
  6795  0FA2  0266               	subwf	_adkey,w
  6796  0FA3  1C03               	skipc
  6797  0FA4  2FB6               	goto	l3700
  6798  0FA5  0868               	movf	_stakeytime,w
  6799  0FA6  1903               	btfsc	3,2
  6800  0FA7  2FB6               	goto	l3700
  6801                           
  6802                           ;User/newmain.c: 467:     {;User/newmain.c: 469:         if (((Flg2.Flg2Byte & 0x85) != 
      +                          0) && Flg.bits.PWON_B0)
  6803  0FA8  086E               	movf	_Flg2,w	;volatile
  6804  0FA9  3985               	andlw	133
  6805  0FAA  1D03               	btfss	3,2
  6806  0FAB  1C6F               	btfss	_Flg,0	;volatile
  6807  0FAC  2FB1               	goto	l3694
  6808                           
  6809                           ;User/newmain.c: 470:             Flg2.Flg2Byte &= 0x7A;
  6810  0FAD  307A               	movlw	122
  6811  0FAE  00F9               	movwf	??_GetKey
  6812  0FAF  0879               	movf	??_GetKey,w
  6813  0FB0  05EE               	andwf	_Flg2,f	;volatile
  6814  0FB1                     l3694:
  6815                           
  6816                           ;User/newmain.c: 472:         stakeytime = 0;
  6817  0FB1  01E8               	clrf	_stakeytime
  6818                           
  6819                           ;User/newmain.c: 473:         LATAbits.LATA1 = 0;
  6820  0FB2  0022               	movlb	2	; select bank2
  6821  0FB3  108C               	bcf	12,1	;volatile
  6822                           
  6823                           ;User/newmain.c: 474:         hze = 0;
  6824  0FB4  0021               	movlb	1	; select bank1
  6825  0FB5  01E5               	clrf	_hze^(0+128)
  6826  0FB6                     l3700:
  6827                           
  6828                           ;User/newmain.c: 478:     if (stakeytime >= 40)
  6829  0FB6  3028               	movlw	40
  6830  0FB7  0020               	movlb	0	; select bank0
  6831  0FB8  0268               	subwf	_stakeytime,w
  6832  0FB9  1C03               	skipc
  6833  0FBA  2FCA               	goto	l3710
  6834                           
  6835                           ;User/newmain.c: 479:     {;User/newmain.c: 480:         stakeytime = 0;
  6836  0FBB  01E8               	clrf	_stakeytime
  6837                           
  6838                           ;User/newmain.c: 481:         if (TouchTime == 0)
  6839  0FBC  0869               	movf	_TouchTime,w
  6840  0FBD  1D03               	btfss	3,2
  6841  0FBE  2FCA               	goto	l3710
  6842                           
  6843                           ;User/newmain.c: 482:         {;User/newmain.c: 483:             KeyTime = 10;
  6844  0FBF  300A               	movlw	10
  6845  0FC0  00F9               	movwf	??_GetKey
  6846  0FC1  0879               	movf	??_GetKey,w
  6847  0FC2  0021               	movlb	1	; select bank1
  6848  0FC3  00DE               	movwf	_KeyTime^(0+128)
  6849                           
  6850                           ;User/newmain.c: 484:             Key.bits.PWO_B1 = 1;
  6851  0FC4  0020               	movlb	0	; select bank0
  6852  0FC5  14EA               	bsf	_Key,1	;volatile
  6853                           
  6854                           ;User/newmain.c: 485:             TouchTime = 10;
  6855  0FC6  300A               	movlw	10
  6856  0FC7  00F9               	movwf	??_GetKey
  6857  0FC8  0879               	movf	??_GetKey,w
  6858  0FC9  00E9               	movwf	_TouchTime
  6859  0FCA                     l3710:
  6860                           
  6861                           ;User/newmain.c: 489:     if (((adkey + 30) > 0xC9) && ((adkey - 30) < 0xC9))
  6862  0FCA  0866               	movf	_adkey,w
  6863  0FCB  3E1E               	addlw	30
  6864  0FCC  00F9               	movwf	??_GetKey
  6865  0FCD  3000               	movlw	0
  6866  0FCE  3D67               	addwfc	_adkey+1,w
  6867  0FCF  00FA               	movwf	??_GetKey+1
  6868  0FD0  3000               	movlw	0
  6869  0FD1  027A               	subwf	??_GetKey+1,w
  6870  0FD2  30CA               	movlw	202
  6871  0FD3  1903               	skipnz
  6872  0FD4  0279               	subwf	??_GetKey,w
  6873  0FD5  1C03               	skipc
  6874  0FD6  2FE4               	goto	l3716
  6875  0FD7  0866               	movf	_adkey,w
  6876  0FD8  3EE2               	addlw	226
  6877  0FD9  00F9               	movwf	??_GetKey
  6878  0FDA  30FF               	movlw	255
  6879  0FDB  3D67               	addwfc	_adkey+1,w
  6880  0FDC  00FA               	movwf	??_GetKey+1
  6881  0FDD  3000               	movlw	0
  6882  0FDE  027A               	subwf	??_GetKey+1,w
  6883  0FDF  30C9               	movlw	201
  6884  0FE0  1903               	skipnz
  6885  0FE1  0279               	subwf	??_GetKey,w
  6886  0FE2  1C03               	btfss	3,0
  6887                           
  6888                           ;User/newmain.c: 490:         Key.bits.HB_B2 = 1;
  6889  0FE3  156A               	bsf	_Key,2	;volatile
  6890  0FE4                     l3716:
  6891                           
  6892                           ;User/newmain.c: 492:     if (((adkey + 30) > 0x5d) && ((adkey - 30) < 0x5d))
  6893  0FE4  0866               	movf	_adkey,w
  6894  0FE5  3E1E               	addlw	30
  6895  0FE6  00F9               	movwf	??_GetKey
  6896  0FE7  3000               	movlw	0
  6897  0FE8  3D67               	addwfc	_adkey+1,w
  6898  0FE9  00FA               	movwf	??_GetKey+1
  6899  0FEA  3000               	movlw	0
  6900  0FEB  027A               	subwf	??_GetKey+1,w
  6901  0FEC  305E               	movlw	94
  6902  0FED  1903               	skipnz
  6903  0FEE  0279               	subwf	??_GetKey,w
  6904  0FEF  1C03               	skipc
  6905  0FF0  0008               	return
  6906  0FF1  0866               	movf	_adkey,w
  6907  0FF2  3EE2               	addlw	226
  6908  0FF3  00F9               	movwf	??_GetKey
  6909  0FF4  30FF               	movlw	255
  6910  0FF5  3D67               	addwfc	_adkey+1,w
  6911  0FF6  00FA               	movwf	??_GetKey+1
  6912  0FF7  3000               	movlw	0
  6913  0FF8  027A               	subwf	??_GetKey+1,w
  6914  0FF9  305D               	movlw	93
  6915  0FFA  1903               	skipnz
  6916  0FFB  0279               	subwf	??_GetKey,w
  6917  0FFC  1803               	skipnc
  6918  0FFD  0008               	return
  6919                           
  6920                           ;User/newmain.c: 493:         Key.bits.LB_B3 = 1;
  6921  0FFE  15EA               	bsf	_Key,3	;volatile
  6922  0FFF  0008               	return
  6923  1000                     __end_of_GetKey:
  6924                           
  6925                           	psect	text26
  6926  0C4D                     __ptext26:	
  6927 ;; *************** function _GetADC *****************
  6928 ;; Defined at:
  6929 ;;		line 499 in file "User/newmain.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  ch              1    wreg     unsigned char 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  ch              1    0[BANK0 ] unsigned char 
  6934 ;;  adbuf           2    4[BANK0 ] unsigned int 
  6935 ;;  total_ad        2    1[BANK0 ] unsigned int 
  6936 ;;  i               1    3[BANK0 ] unsigned char 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  2    5[COMMON] unsigned int 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0, pclath, cstack
  6941 ;; Tracked objects:
  6942 ;;		On entry : 1E/1
  6943 ;;		On exit  : 1F/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6946 ;;      Params:         2       0       0       0       0       0       0       0
  6947 ;;      Locals:         0       6       0       0       0       0       0       0
  6948 ;;      Temps:          2       0       0       0       0       0       0       0
  6949 ;;      Totals:         4       6       0       0       0       0       0       0
  6950 ;;Total ram usage:       10 bytes
  6951 ;; Hardware stack levels used: 1
  6952 ;; Hardware stack levels required when called: 1
  6953 ;; This function calls:
  6954 ;;		_DelayC
  6955 ;; This function is called by:
  6956 ;;		_ScanF
  6957 ;;		_TwoData_COM
  6958 ;;		_ReadCurrent
  6959 ;;		_T500ms_Event
  6960 ;;		_GetKey
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function _GetADC
  6966  0C4D                     _GetADC:
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _GetADC: [wreg+status,2+status,0+pclath+cstack]
  6970                           ;GetADC@ch stored from wreg
  6971  0C4D  0020               	movlb	0	; select bank0
  6972  0C4E  00A0               	movwf	GetADC@ch
  6973                           
  6974                           ;User/newmain.c: 499: uword GetADC(ubyte ch);User/newmain.c: 500: {;User/newmain.c: 501:
      +                               uword total_ad;;User/newmain.c: 502:     uword adbuf;;User/newmain.c: 503:     ubyt
      +                          e i;;User/newmain.c: 505:     ADCON0bits.CHS = ch;
  6975  0C4F  0820               	movf	GetADC@ch,w
  6976  0C50  00F7               	movwf	??_GetADC
  6977  0C51  0DF7               	rlf	??_GetADC,f
  6978  0C52  0DF7               	rlf	??_GetADC,f
  6979  0C53  0021               	movlb	1	; select bank1
  6980  0C54  081D               	movf	29,w	;volatile
  6981  0C55  0677               	xorwf	??_GetADC,w
  6982  0C56  3983               	andlw	-125
  6983  0C57  0677               	xorwf	??_GetADC,w
  6984  0C58  009D               	movwf	29	;volatile
  6985                           
  6986                           ;User/newmain.c: 506:     DelayC(50);
  6987  0C59  3032               	movlw	50
  6988  0C5A  318A  22BC  318C   	fcall	_DelayC
  6989                           
  6990                           ;User/newmain.c: 507:     ADCON0bits.GO = 1;
  6991  0C5D  0021               	movlb	1	; select bank1
  6992  0C5E  149D               	bsf	29,1	;volatile
  6993  0C5F                     l515:	
  6994                           ;User/newmain.c: 509:         ;
  6995                           
  6996                           
  6997                           ;User/newmain.c: 508:     while (ADCON0bits.GO)
  6998  0C5F  189D               	btfsc	29,1	;volatile
  6999  0C60  2C5F               	goto	l515
  7000                           
  7001                           ;User/newmain.c: 510:     adbuf = ADRESH;
  7002  0C61  081C               	movf	28,w	;volatile
  7003  0C62  00F7               	movwf	??_GetADC
  7004  0C63  01F8               	clrf	??_GetADC+1
  7005  0C64  0877               	movf	??_GetADC,w
  7006  0C65  0020               	movlb	0	; select bank0
  7007  0C66  00A4               	movwf	GetADC@adbuf
  7008  0C67  0878               	movf	??_GetADC+1,w
  7009  0C68  00A5               	movwf	GetADC@adbuf+1
  7010                           
  7011                           ;User/newmain.c: 511:     adbuf = ADRESL;
  7012  0C69  0021               	movlb	1	; select bank1
  7013  0C6A  081B               	movf	27,w	;volatile
  7014  0C6B  00F7               	movwf	??_GetADC
  7015  0C6C  01F8               	clrf	??_GetADC+1
  7016  0C6D  0877               	movf	??_GetADC,w
  7017  0C6E  0020               	movlb	0	; select bank0
  7018  0C6F  00A4               	movwf	GetADC@adbuf
  7019  0C70  0878               	movf	??_GetADC+1,w
  7020  0C71  00A5               	movwf	GetADC@adbuf+1
  7021                           
  7022                           ;User/newmain.c: 513:     total_ad = 0;
  7023  0C72  01A1               	clrf	GetADC@total_ad
  7024  0C73  01A2               	clrf	GetADC@total_ad+1
  7025                           
  7026                           ;User/newmain.c: 515:     for (i = 0; i < 32; i++)
  7027  0C74  01A3               	clrf	GetADC@i
  7028  0C75                     l518:
  7029                           
  7030                           ;User/newmain.c: 516:     {;User/newmain.c: 517:         ADCON0bits.GO = 1;
  7031  0C75  0021               	movlb	1	; select bank1
  7032  0C76  149D               	bsf	29,1	;volatile
  7033  0C77                     l520:	
  7034                           ;User/newmain.c: 519:             ;
  7035                           
  7036                           
  7037                           ;User/newmain.c: 518:         while (ADCON0bits.GO)
  7038  0C77  189D               	btfsc	29,1	;volatile
  7039  0C78  2C77               	goto	l520
  7040                           
  7041                           ;User/newmain.c: 521:         adbuf = ADRESH;
  7042  0C79  081C               	movf	28,w	;volatile
  7043  0C7A  00F7               	movwf	??_GetADC
  7044  0C7B  01F8               	clrf	??_GetADC+1
  7045  0C7C  0877               	movf	??_GetADC,w
  7046  0C7D  0020               	movlb	0	; select bank0
  7047  0C7E  00A4               	movwf	GetADC@adbuf
  7048  0C7F  0878               	movf	??_GetADC+1,w
  7049  0C80  00A5               	movwf	GetADC@adbuf+1
  7050                           
  7051                           ;User/newmain.c: 522:         adbuf <<= 8;
  7052  0C81  3008               	movlw	8
  7053  0C82                     u4255:
  7054  0C82  35A4               	lslf	GetADC@adbuf,f
  7055  0C83  0DA5               	rlf	GetADC@adbuf+1,f
  7056  0C84  0B89               	decfsz	9,f
  7057  0C85  2C82               	goto	u4255
  7058                           
  7059                           ;User/newmain.c: 523:         adbuf |= ADRESL;
  7060  0C86  0021               	movlb	1	; select bank1
  7061  0C87  081B               	movf	27,w	;volatile
  7062  0C88  00F7               	movwf	??_GetADC
  7063  0C89  01F8               	clrf	??_GetADC+1
  7064  0C8A  0877               	movf	??_GetADC,w
  7065  0C8B  0020               	movlb	0	; select bank0
  7066  0C8C  04A4               	iorwf	GetADC@adbuf,f
  7067  0C8D  0878               	movf	??_GetADC+1,w
  7068  0C8E  04A5               	iorwf	GetADC@adbuf+1,f
  7069                           
  7070                           ;User/newmain.c: 524:         if (adbuf > 0x3EE)
  7071  0C8F  3003               	movlw	3
  7072  0C90  0225               	subwf	GetADC@adbuf+1,w
  7073  0C91  30EF               	movlw	239
  7074  0C92  1903               	skipnz
  7075  0C93  0224               	subwf	GetADC@adbuf,w
  7076  0C94  1803               	btfsc	3,0
  7077                           
  7078                           ;User/newmain.c: 525:             Flg2.bits.GetKeyM_B3 = 0;
  7079  0C95  11EE               	bcf	_Flg2,3	;volatile
  7080                           
  7081                           ;User/newmain.c: 526:         total_ad += adbuf;
  7082  0C96  0824               	movf	GetADC@adbuf,w
  7083  0C97  07A1               	addwf	GetADC@total_ad,f
  7084  0C98  0825               	movf	GetADC@adbuf+1,w
  7085  0C99  3DA2               	addwfc	GetADC@total_ad+1,f
  7086                           
  7087                           ;User/newmain.c: 527:     }
  7088  0C9A  3001               	movlw	1
  7089  0C9B  00F7               	movwf	??_GetADC
  7090  0C9C  0877               	movf	??_GetADC,w
  7091  0C9D  07A3               	addwf	GetADC@i,f
  7092  0C9E  3020               	movlw	32
  7093  0C9F  0223               	subwf	GetADC@i,w
  7094  0CA0  1C03               	skipc
  7095  0CA1  2C75               	goto	l518
  7096                           
  7097                           ;User/newmain.c: 529:     return total_ad;
  7098  0CA2  0822               	movf	GetADC@total_ad+1,w
  7099  0CA3  00F6               	movwf	?_GetADC+1
  7100  0CA4  0821               	movf	GetADC@total_ad,w
  7101  0CA5  00F5               	movwf	?_GetADC
  7102  0CA6  0008               	return
  7103  0CA7                     __end_of_GetADC:
  7104                           
  7105                           	psect	text27
  7106  0ABC                     __ptext27:	
  7107 ;; *************** function _DelayC *****************
  7108 ;; Defined at:
  7109 ;;		line 535 in file "User/newmain.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  ct              1    wreg     unsigned char 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  ct              1    4[COMMON] unsigned char 
  7114 ;;  i               2    2[COMMON] unsigned int 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, status,2, status,0
  7119 ;; Tracked objects:
  7120 ;;		On entry : 1F/1
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7124 ;;      Params:         0       0       0       0       0       0       0       0
  7125 ;;      Locals:         3       0       0       0       0       0       0       0
  7126 ;;      Temps:          2       0       0       0       0       0       0       0
  7127 ;;      Totals:         5       0       0       0       0       0       0       0
  7128 ;;Total ram usage:        5 bytes
  7129 ;; Hardware stack levels used: 1
  7130 ;; This function calls:
  7131 ;;		Nothing
  7132 ;; This function is called by:
  7133 ;;		_GetADC
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           
  7138                           ;psect for function _DelayC
  7139  0ABC                     _DelayC:
  7140                           
  7141                           ;incstack = 0
  7142                           ; Regs used in _DelayC: [wreg+status,2+status,0]
  7143                           ;DelayC@ct stored from wreg
  7144  0ABC  00F4               	movwf	DelayC@ct
  7145                           
  7146                           ;User/newmain.c: 535: void DelayC(ubyte ct);User/newmain.c: 536: {;User/newmain.c: 537: 
      +                              uword i;;User/newmain.c: 538:     for (i = 0; i < ct; ct++)
  7147  0ABD  01F2               	clrf	DelayC@i
  7148  0ABE  01F3               	clrf	DelayC@i+1
  7149  0ABF                     l527:
  7150  0ABF  0874               	movf	DelayC@ct,w
  7151  0AC0  00F0               	movwf	??_DelayC
  7152  0AC1  01F1               	clrf	??_DelayC+1
  7153  0AC2  0871               	movf	??_DelayC+1,w
  7154  0AC3  0273               	subwf	DelayC@i+1,w
  7155  0AC4  1D03               	skipz
  7156  0AC5  2AC8               	goto	u4225
  7157  0AC6  0870               	movf	??_DelayC,w
  7158  0AC7  0272               	subwf	DelayC@i,w
  7159  0AC8                     u4225:
  7160  0AC8  1803               	btfsc	3,0
  7161  0AC9  2AD0               	goto	l529
  7162                           
  7163                           ;User/newmain.c: 539:         __nop();
  7164  0ACA  0000               	nop
  7165  0ACB  3001               	movlw	1
  7166  0ACC  00F0               	movwf	??_DelayC
  7167  0ACD  0870               	movf	??_DelayC,w
  7168  0ACE  07F4               	addwf	DelayC@ct,f
  7169  0ACF  2ABF               	goto	l527
  7170  0AD0                     l529:
  7171  0AD0  0064               	clrwdt	;# 
  7172  0AD1  0008               	return
  7173  0AD2                     __end_of_DelayC:
  7174  007E                     btemp	set	126	;btemp
  7175  007E                     wtemp0	set	126
  7176  2198                     
  7177                           	psect	config
  7178                           
  7179                           ;Config register CONFIG1 @ 0x8007
  7180                           ;	Oscillator Selection Bits
  7181                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
  7182                           ;	Watchdog Timer Enable
  7183                           ;	WDTE = ON, WDT enabled
  7184                           ;	Power-up Timer Enable
  7185                           ;	PWRTE = ON, PWRT enabled
  7186                           ;	MCLR Pin Function Select
  7187                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  7188                           ;	Flash Program Memory Code Protection
  7189                           ;	CP = OFF, Program memory code protection is disabled
  7190                           ;	Brown-out Reset Enable
  7191                           ;	BOREN = ON, Brown-out Reset enabled
  7192                           ;	Clock Out Enable
  7193                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  7194  8007                     	org	32775
  7195  8007  3F9C               	dw	16284
  7196                           
  7197                           ;Config register CONFIG2 @ 0x8008
  7198                           ;	Flash Memory Self-Write Protection
  7199                           ;	WRT = OFF, Write protection off
  7200                           ;	PPSLOCK bit One-Way Set Enable bit
  7201                           ;	PPS1WAY = ON, PPSLOCKED Bit Can Be Cleared & Set Once
  7202                           ;	PLL Enable
  7203                           ;	PLLEN = ON, 4x PLL enabled
  7204                           ;	Stack Overflow/Underflow Reset Enable
  7205                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  7206                           ;	Brown-out Reset Voltage Selection
  7207                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  7208                           ;	Low Power Brown-out Reset enable bit
  7209                           ;	LPBOREN = OFF, LPBOR is disabled
  7210                           ;	Low-Voltage Programming Enable
  7211                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  7212  8008                     	org	32776
  7213  8008  1FFF               	dw	8191

Data Sizes:
    Strings     0
    Constant    95
    Data        5
    BSS         80
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80      0      75
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5             8      0       0
    BANK6             0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _T500ms_Event->___xxtofl
    ___fltol->___xxtofl
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    _TwoData_COM->_GetADC
    _ScanF->_GetADC
    _KeyPro->_LED_OFF
    _GetWater->_ReadCurrent
    _ReadCurrent->_GetADC
    _ErrInf->_LED_OFF
    _LED_OFF->_PWMOFF
    _GetKey->_GetADC
    _GetADC->_DelayC

Critical Paths under _main in BANK0

    _main->_T500ms_Event
    _T500ms_Event->___fltol
    ___fltol->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    _TwoData_COM->_GetADC
    _ScanF->_GetADC
    _ReadCurrent->_GetADC
    _GetKey->_GetADC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   12041
                                             69 BANK0      1     1      0
                             _GetKey
                           _GetWater
                             _KeyPro
                        _ReadCurrent
                              _ScanF
                       _T100ms_Event
                          _T1s_Event
                       _T500ms_Event
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 1     1      0       0
                                              0 COMMON     1     1      0
                            _AD_init
                           _PWM_init
                         _Time0_init
                         _Time1_init
 ---------------------------------------------------------------------------------
 (2) _Time1_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Time0_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T500ms_Event                                         4     4      0   10416
                                             65 BANK0      4     4      0
                             _GetADC
                           _LED_Show
                             _PWMOFF
                              _PWMON
                        _TwoData_COM
                            ___fladd
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             54 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2874
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _TwoData_COM                                          1     1      0     281
                                              9 COMMON     1     1      0
                             _ErrInf
                             _GetADC
 ---------------------------------------------------------------------------------
 (2) _LED_Show                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _T1s_Event                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T100ms_Event                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ScanF                                                9     9      0     318
                                              9 COMMON     1     1      0
                                              6 BANK0      6     6      0
                             _GetADC
                             _PWMOFF
                              _PWMON
 ---------------------------------------------------------------------------------
 (1) _KeyPro                                               2     2      0       0
                                              2 COMMON     1     1      0
                            _LED_OFF
                              _PWMON
 ---------------------------------------------------------------------------------
 (1) _GetWater                                             3     3      0     547
                                             12 COMMON     1     1      0
                                              6 BANK0      2     2      0
                             _PWMOFF
                              _PWMON
                        _ReadCurrent
 ---------------------------------------------------------------------------------
 (1) _ReadCurrent                                          3     3      0     411
                                              9 COMMON     3     3      0
                             _ErrInf
                             _GetADC
 ---------------------------------------------------------------------------------
 (3) _ErrInf                                               0     0      0       0
                            _LED_OFF
                             _PWMOFF
 ---------------------------------------------------------------------------------
 (4) _LED_OFF                                              1     1      0       0
                                              1 COMMON     1     1      0
                             _PWMOFF
 ---------------------------------------------------------------------------------
 (4) _PWMOFF                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PWMON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetKey                                               3     3      0     349
                                              9 COMMON     3     3      0
                             _GetADC
 ---------------------------------------------------------------------------------
 (3) _GetADC                                              10     8      2     281
                                              5 COMMON     4     2      2
                                              0 BANK0      6     6      0
                             _DelayC
 ---------------------------------------------------------------------------------
 (4) _DelayC                                               5     5      0      68
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GetKey
     _GetADC
       _DelayC
   _GetWater
     _PWMOFF
     _PWMON
     _ReadCurrent
       _ErrInf
         _LED_OFF
           _PWMOFF
         _PWMOFF
       _GetADC
   _KeyPro
     _LED_OFF
     _PWMON
   _ReadCurrent
   _ScanF
     _GetADC
     _PWMOFF
     _PWMON
   _T100ms_Event
   _T1s_Event
   _T500ms_Event
     _GetADC
     _LED_Show
     _PWMOFF
     _PWMON
     _TwoData_COM
       _ErrInf
       _GetADC
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _init
     _AD_init
     _PWM_init
     _Time0_init
     _Time1_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      A9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     46      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5                8      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      A9      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 01 15:45:24 2024

                     l72 004A                       l77 008B                       l69 0046  
                     l95 001F                       l97 0020                       _nt 00D6  
    __Umul8_16@word_mpld 0076                      l410 0C37                      l402 0C06  
                    l430 0DE3                      l422 0DAE                      l520 0C77  
                    l515 0C5F                      l518 0C75                      l527 0ABF  
                    l464 0AE6                      l480 0EC5                      l529 0AD0  
                    l481 0EDE                      l482 0EF7                      l476 0E7A  
                    l478 0E93                      l479 0EAC                      l903 02A2  
                    l920 0325                      l905 0285                      l941 039C  
                    l933 0384                      l799 0D4A                      l899 020F  
                    _CTA 2198                      _Flg 006F                      _Key 006A  
                    _frq 006B                      _hze 00E5                      wreg 0009  
            _PWMTime_Val 00EA             ___flmul@aexp 002E             ___flmul@bexp 0033  
           ___flmul@sign 002D             ___flmul@temp 0038             ___flmul@prod 0034  
        __end_of_LED_OFF 0B78          __end_of_AD_init 0ABC             ___fltol@exp1 0060  
                   l1014 0B31                     l1007 07C1                     l1052 0E4B  
                   l1053 0E55                     l1045 0E37                     l1039 0E01  
                   l2210 01DF                     l2212 01E7                     l2230 0204  
                   l2206 01DC                     l2304 02C2                     l2240 0219  
                   l2306 02C4                     l2314 02D3                     l2234 0207  
                   l2340 0344                     l2332 0337                     l2324 031D  
                   l2270 0255                     l3400 0BD6                     l2280 028F  
                   l3402 0BDA                     l2354 0356                     l2346 034B  
                   l3332 0D6B                     l2380 0398                     l2348 034D  
                   l3502 017A                     l2390 0B2B                     l2622 05CF  
                   l2358 0358                     l2278 028D                     l3360 0DB4  
                   l2560 0F10                     l3416 0BF0                     l2712 0757  
                   l2704 0729                     l2640 05F2                     l2624 05D1  
                   l2376 0394                     l2296 02B0                     l2288 029D  
                   l3370 0DC5                     l3362 0DB6                     l2730 0797  
                   l2706 0740                     l2642 05F4                     l2626 05D9  
                   l3610 0555                     l3700 0FB6                     l3348 0DA4  
                   l3532 001E                     l3460 00E3                     l3452 008F  
                   l2716 0759                     l2652 060A                     l2644 05FC  
                   l2572 0D13                     l3710 0FCA                     l3454 0099  
                   l3438 004E                     l2726 0782                     l2590 0D46  
                   l3630 056F                     l3376 0DCE                     l3384 0DDA  
                   l3368 0DC4                     l2736 07AE                     l2568 0D0A  
                   l2760 0E10                     l3624 0567                     l3640 0593  
                   l2920 0CAF                     l2754 0DF9                     l3634 0588  
                   l3618 0561                     l3716 0FE4                     l3740 0B94  
                   l3484 0146                     l3396 0BD0                     l2588 0D38  
                   l2764 0E14                     l3580 03EE                     l3750 0BA4  
                   l3494 0153                     l3478 00F4                     l2598 0D57  
                   l2774 0E49                     l2766 0E24                     l3574 03E4  
                   l3566 03BB                     l3558 03AD                     l3680 0F99  
                   l3760 0BB4                     l3728 0B86                     l2776 0E3C  
                   l3658 0F42                     l3738 0B91                     l3834 0F19  
                   l3594 053E                     l3586 03FA                     l3684 0F9E  
                   l3676 0F90                     l2788 0E70                     l3694 0FB1  
                   l3790 0C26                     l3782 0C1C                     l3794 0C2C  
                   l3778 0C15                     l3798 0C31                     _CTA1 00C0  
                   u2115 0293                     _LATA 010C                     u2070 0274  
                   _LATB 010D                     u3015 067D                     _LATC 010E  
                   u2080 0275                     u3025 06AA                     u2065 0269  
                   u3035 06FC                     u2235 0338                     u3045 0718  
                   u2415 0B32                     u3055 072C                     u2335 036F  
                   u3215 0E1D                     u4200 0B64                     u2600 0E89  
                   u3145 0770                     u2193 02E5                     u2185 02C8  
                   u2610 0E90                     u3155 078B                     u3075 0735  
                   u3235 0E31                     u2604 0E84                     u3165 07A1  
                   u4214 0B66                     u4150 0B47                     u2710 0ECD  
                   u2630 0E9B                     u2614 0E8B                     u3255 0E43  
                   u4160 0B4E                     u2800 0F06                     u2720 0ED4  
                   u2640 0EA2                     u4225 0AC8                     u4305 0D96  
                   u4170 0B55                     u5050 0B84                     u2810 0F0D  
                   u2730 0EDB                     u2650 0EA9                     u4180 0B5C  
                   u4164 0B49                     u2804 0F01                     u2724 0ECF  
                   u2644 0E9D                     u4405 0BC6                     u4174 0B50  
                   u2814 0F08                     u2750 0EE5                     u2734 0ED6  
                   u2670 0EB4                     u2654 0EA4                     u2590 0E82  
                   u4255 0C82                     u4415 0BCE                     u3295 0E5D  
                   u4184 0B57                     u2760 0EEC                     u2680 0EBB  
                   u4505 0111                     u2905 0D4E                     u4194 0B5E  
                   u2770 0EF3                     u2690 0EC2                     u4515 012F  
                   u2764 0EE7                     u2684 0EB6                     u4285 0D74  
                   u2845 0D1C                     u3750 0AE3                     u2790 0EFF  
                   u2774 0EEE                     u2694 0EBD                     u4535 0170  
                   u4615 03D5                     u2784 0EF5                     u4800 05A5  
                   u4625 03E2                     u4810 05AC                     u2875 0D39  
                   u4820 05B3                     u4804 05A0                     u4485 00CC  
                   u4814 05A7                     u4824 05AE                     u4845 0F34  
                   u4790 059E                     u4855 0F4B                     _TMR0 0015  
                   _PWMT 0800                     _Flg2 006E                     _WPUA 020C  
                   _WPUB 020D                     _WPUC 020E                     _main 0BFF  
                   _init 0CA7                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     fsr1l 0006  
                   btemp 007E                     start 0002            ??_ReadCurrent 0079  
       __end_of_LED_Show 0F2B            ___fltol@sign1 005F          __end_of___fladd 03A4  
                  ?_main 0070                    ?_init 0070          __end_of___flmul 07CE  
        __end_of___flsub 0B21          __end_of___fltol 0D66                    _ADMax 00E6  
                  _ADMin 00CC                    _T1CON 0018                    _TMR1H 0017  
                  _TMR1L 0016                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _PWMON 0A79                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _Get3A 00E3  
                  _ScanF 003A       __size_of_T1s_Event 0018                    _adkey 0066  
                  _hz_cn 00CE          __end_of_time_it 085F    __size_of_T100ms_Event 0002  
       __end_of_PWM_init 0B04                    status 0003                    wtemp0 007E  
           _adc_true_cnt 00E0         __end_of_GetWater 003A             __end_of_PWMT 0858  
         _PWM3CLKCONbits 0DBE          __initialization 07CE             __end_of_main 0C4D  
           __end_of_init 0D01                   ??_main 0065                   ??_init 0070  
    __end_of_ReadCurrent 0DE4                ??_LED_OFF 0071                ??_AD_init 0070  
                 ?_PWMON 0070            _adc_false_cnt 00DF                   ?_ScanF 0070  
           _T100ms_Event 0A72                   _ADRESH 009C                   _ADRESL 009B  
                 _ADMax2 00E8                   _ADMin2 00D4                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E                   _AD_Cur 00A0  
                 _AD_Tal 00CA                   _RC3PPS 0EA3               _Time0_init 0A87  
             _Time1_init 0A93                   _INTCON 000B                   _ERRcnt 00D8  
  __size_of_T500ms_Event 0212                   _TMR1ON 00C0                   _PWMOFF 0004  
       __end_of___xxtofl 0E79                   _GetADC 0C4D                   _DelayC 0ABC  
                 _GetKey 0F2B                   _KeyADC 00C8                   _CurMax 00D2  
                 _ErrInf 0A7F                   _KeyPro 0B78               _bFors_High 00E1  
      __end_of_T1s_Event 0AEA                ??___fladd 0042                ??___flmul 0028  
              ??___flsub 007E                ??___fltol 005A                   _getcnt 00E2  
           ReadCurrent@i 007B       __size_of__Umul8_16 001F             _T500ms_Event 03A4  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FD                ?_LED_Show 0070               ___fltol@f1 0056  
          __end_of_PWMON 0A7F            __end_of_ScanF 01C3            ??_TwoData_COM 0079  
         __pcstackCOMMON 0070             __pidataBANK1 0A74              _ReadCurrent 0D66  
              ?_PWM_init 0070                  ??_PWMON 0070           _OPTION_REGbits 0095  
                ??_ScanF 0026                ?_GetWater 0070               __pbssBANK0 0066  
             __pbssBANK1 00A0              ?_Time0_init 0070              ?_Time1_init 0070  
                ?_PWMOFF 0070               ??_LED_Show 0070                  ?_GetADC 0075  
                ?_DelayC 0070                  ?_GetKey 0070                  ?_ErrInf 0070  
                ?_KeyPro 0070        __end_of__Umul8_16 0B40               __pmaintext 0BFF  
    __end_of_TwoData_COM 0BFF                  GetADC@i 0023               ??_PWM_init 0070  
                _LED_OFF 0B40                  _AD_init 0AAB                  DelayC@i 0072  
              ?___xxtofl 0070                  GetKey@i 007B                  _OSCSTAT 009A  
                _OSCTUNE 0098                  _PWM3DCH 0DB4                  _PWM3DCL 0DB3  
                _PWM3PHH 0DB2                  _PWM3PHL 0DB1                  _PWM3PRH 0DB6  
                _PWM3PRL 0DB5               ??_GetWater 007C                  _PWMTime 00E4  
                ScanF@j1 0079                  _Failcnt 00D7                  _CurMax2 00D0  
                _KeyData 00DA          __size_of_PWMOFF 0015                  _KeyTime 00DE  
        __size_of_GetADC 005A                  _NoWater 006D          __size_of_DelayC 0016  
        __size_of_GetKey 00D5          __size_of_ErrInf 0008          __size_of_KeyPro 003F  
                ___fladd 01C3                  ___flmul 05B6                  ___flsub 0B04  
                ___fltol 0D01      __size_of_Time0_init 000C      __size_of_Time1_init 000C  
                __ptext1 0CA7                  __ptext2 0A93                  __ptext3 0A87  
                __ptext4 0AEA                  __ptext5 0AAB                  __ptext6 03A4  
                __ptext7 0DE4                  __ptext8 0D01                  __ptext9 0B04  
             ??___xxtofl 0074           GetADC@total_ad 0021        _T500ms_Event$1203 0062  
                _time_it 0858                  _timecnt 00DC                  clrloop0 0AA0  
   end_of_initialization 07FD              _TwoData_COM 0BB7                GetWater@i 0026  
              GetWater@j 0027                _T1s_Event 0AD2                _PORTAbits 000C  
              _PORTBbits 000D              ___fladd@grs 004D            ___xxtofl@sign 0078  
             _stakeytime 0068              ___flmul@grs 002F           __end_of_PWMOFF 0019  
         __end_of_GetADC 0CA7           __end_of_DelayC 0AD2        __size_of_LED_Show 00B2  
         __end_of_GetKey 1000           __end_of_ErrInf 0A87           __end_of_KeyPro 0BB7  
           ?_ReadCurrent 0070               ?_T1s_Event 0070      start_initialization 07CE  
      __size_of_PWM_init 001A             ??_Time0_init 0070             ??_Time1_init 0070  
      __size_of_GetWater 0021                 ??_PWMOFF 0070            _PWM3LDCONbits 0DBF  
               ??_GetADC 0077                 ??_DelayC 0070                 ??_GetKey 0079  
               ??_ErrInf 0072                 ??_KeyPro 0072            _PWM3OFCONbits 0DC0  
              __Umul8_16 0B21              __pdataBANK1 00E6       __end_of_Time0_init 0A93  
     __end_of_Time1_init 0A9F                ___fladd@a 003E                ___fladd@b 003A  
              _TouchTime 0069                 ?_LED_OFF 0070                 ?_AD_init 0070  
            __pbssBIGRAM 2198                ___flmul@a 0024                ___flmul@b 0020  
              ___flsub@a 004E                ___flsub@b 0052                ___latbits 0001  
          __pcstackBANK0 0020        __size_of___xxtofl 0095              GetADC@adbuf 0024  
               ?___fladd 003A                 ?___flmul 0020                 ?___flsub 004E  
               ?___fltol 0056               ?__Umul8_16 0070              ??_T1s_Event 0070  
         __size_of_PWMON 0006            ?_T100ms_Event 0070           __size_of_ScanF 0189  
               GetADC@ch 0020                 _T30s_cnt 00DB                 DelayC@ct 0074  
               _LATAbits 010C                 _LATBbits 010D                 _LATCbits 010E  
               _LED_Show 0E79                clear_ram0 0A9F                 _PIE1bits 0091  
               _PIR1bits 0011             ?_TwoData_COM 0070     __size_of_ReadCurrent 007E  
             _ADCON0bits 009D               _ADCON1bits 009E                 _PWM_init 0AEA  
         ??_T100ms_Event 0070         __size_of_LED_OFF 0038         __size_of_AD_init 0011  
          ?_T500ms_Event 0070                 _GetWater 0019                 _MinS_Cnt 00D9  
               _ScanWait 006C             _PWM3INTEbits 0DBC             _PWM3INTFbits 0DBD  
            ??__Umul8_16 0072         __size_of___fladd 01E1         __size_of___flmul 0218  
       __size_of___flsub 001D         __size_of___fltol 0065           ??_T500ms_Event 0061  
               ___xxtofl 0DE4      T500ms_Event@ADC_Val 0063                 __ptext10 01C3  
               __ptext11 05B6                 __ptext20 0D66                 __ptext12 0B21  
               __ptext21 0A7F                 __ptext13 0BB7                 __ptext22 0B40  
               __ptext14 0E79                 __ptext23 0004                 __ptext15 0AD2  
               __ptext24 0A79                 __ptext16 0A72                 __ptext25 0F2B  
               __ptext17 003A                 __ptext26 0C4D                 __ptext18 0B78  
               __ptext27 0ABC                 __ptext19 0019              _readkeytime 00DD  
          __size_of_main 004E            __size_of_init 005A               _INTCONbits 000B  
            _PWM3CONbits 0DBB     __end_of_T100ms_Event 0A74               _OSCCONbits 0099  
   __size_of_TwoData_COM 0048            __pstringtext1 0800            __pstringtext2 0858  
 __Umul8_16@multiplicand 0070               _OPTION_REG 0095            ___fladd@signs 004A  
           ___fladd@aexp 004B             ___fladd@bexp 004C     __Umul8_16@multiplier 0078  
   __end_of_T500ms_Event 05B6        __Umul8_16@product 0074  
